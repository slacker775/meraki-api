openapi: 3.0.0
info:
  title: Meraki Dashboard API
  description: >
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.


    > Date: 04 March, 2020

    >

    > [What's New](https://meraki.io/whats-new/)


    ---


    [API Documentation](https://meraki.io/api)


    [Community Support](https://meraki.io/community)


    [Meraki Homepage](https://www.meraki.com)
  contact: {}
  version: '0.9.0'
servers:
- url: https://api.meraki.com/api/v0
  variables: {}
paths:
  /organizations/{organizationId}/apiRequests:
    get:
      tags:
      - API usage
      summary: getOrganizationApiRequests
      description: List the API requests made by an organization
      operationId: getOrganizationApiRequests
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: adminId
        in: query
        description: Filter the results by the ID of the admin who made the API requests
        style: form
        explode: true
        schema:
          type: string
      - name: path
        in: query
        description: Filter the results by the path of the API requests
        style: form
        explode: true
        schema:
          type: string
      - name: method
        in: query
        description: Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
        style: form
        explode: true
        schema:
          type: string
      - name: responseCode
        in: query
        description: Filter the results by the response code of the API requests
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sourceIp
        in: query
        description: Filter the results by the IP address of the originating API request
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "adminId": "212406",

                      "method": "GET",

                      "host": "api.meraki.com",

                      "path": "/api/v0/organizations/33349/apiRequests",

                      "queryString": "timespan=604800",

                      "userAgent": "PostmanRuntime/7.6.0",

                      "ts": "2019-02-20T17:31:23Z",

                      "responseCode": 200,

                      "sourceIp": "123.123.123.1"

                    }

                  ]
              example: >-
                [

                  {

                    "adminId": "212406",

                    "method": "GET",

                    "host": "api.meraki.com",

                    "path": "/api/v0/organizations/33349/apiRequests",

                    "queryString": "timespan=604800",

                    "userAgent": "PostmanRuntime/7.6.0",

                    "ts": "2019-02-20T17:31:23Z",

                    "responseCode": 200,

                    "sourceIp": "123.123.123.1"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/apiRequests/overview:
    get:
      tags:
      - API usage
      summary: getOrganizationApiRequestsOverview
      description: Return an aggregated overview of API requests data
      operationId: getOrganizationApiRequestsOverview
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "responseCodeCounts": {

                      "200": 50000,

                      "201": 4000,

                      "204": 1000,

                      "400": 3500,

                      "404": 1500,

                      "429": 10000

                    }

                  }
              example: >-
                {

                  "responseCodeCounts": {

                    "200": 50000,

                    "201": 4000,

                    "204": 1000,

                    "400": 3500,

                    "404": 1500,

                    "429": 10000

                  }

                }
      deprecated: false
  /organizations/{organizationId}/actionBatches:
    post:
      tags:
      - Action batches
      summary: createOrganizationActionBatch
      description: Create an action batch
      operationId: createOrganizationActionBatch
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationActionBatch'
            example:
              confirmed: true
              synchronous: false
              actions:
              - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
                operation: update
                body:
                  enabled: false
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "123",

                    "organizationId": "2930418",

                    "confirmed": true,

                    "synchronous": false,

                    "status": {

                      "completed": false,

                      "failed": false,

                      "errors": []

                    },

                    "actions": [

                      {

                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                        "operation": "update",

                        "body": {

                          "enabled": false

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "id": "123",

                  "organizationId": "2930418",

                  "confirmed": true,

                  "synchronous": false,

                  "status": {

                    "completed": false,

                    "failed": false,

                    "errors": []

                  },

                  "actions": [

                    {

                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                      "operation": "update",

                      "body": {

                        "enabled": false

                      }

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Action batches
      summary: getOrganizationActionBatches
      description: Return the list of action batches in the organization
      operationId: getOrganizationActionBatches
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "123",

                      "organizationId": "2930418",

                      "confirmed": true,

                      "synchronous": false,

                      "status": {

                        "completed": false,

                        "failed": false,

                        "errors": []

                      },

                      "actions": [

                        {

                          "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                          "operation": "update",

                          "body": {

                            "enabled": false

                          }

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "123",

                    "organizationId": "2930418",

                    "confirmed": true,

                    "synchronous": false,

                    "status": {

                      "completed": false,

                      "failed": false,

                      "errors": []

                    },

                    "actions": [

                      {

                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                        "operation": "update",

                        "body": {

                          "enabled": false

                        }

                      }

                    ]

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/actionBatches/{actionBatchId}:
    get:
      tags:
      - Action batches
      summary: getOrganizationActionBatch
      description: Return an action batch
      operationId: getOrganizationActionBatch
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: actionBatchId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "123",

                    "organizationId": "2930418",

                    "confirmed": true,

                    "synchronous": false,

                    "status": {

                      "completed": false,

                      "failed": false,

                      "errors": []

                    },

                    "actions": [

                      {

                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                        "operation": "update",

                        "body": {

                          "enabled": false

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "id": "123",

                  "organizationId": "2930418",

                  "confirmed": true,

                  "synchronous": false,

                  "status": {

                    "completed": false,

                    "failed": false,

                    "errors": []

                  },

                  "actions": [

                    {

                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                      "operation": "update",

                      "body": {

                        "enabled": false

                      }

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Action batches
      summary: updateOrganizationActionBatch
      description: Update an action batch
      operationId: updateOrganizationActionBatch
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: actionBatchId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationActionBatch'
            example:
              confirmed: true
              synchronous: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "123",

                    "organizationId": "2930418",

                    "confirmed": true,

                    "synchronous": false,

                    "status": {

                      "completed": false,

                      "failed": false,

                      "errors": []

                    },

                    "actions": [

                      {

                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                        "operation": "update",

                        "body": {

                          "enabled": false

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "id": "123",

                  "organizationId": "2930418",

                  "confirmed": true,

                  "synchronous": false,

                  "status": {

                    "completed": false,

                    "failed": false,

                    "errors": []

                  },

                  "actions": [

                    {

                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",

                      "operation": "update",

                      "body": {

                        "enabled": false

                      }

                    }

                  ]

                }
      deprecated: false
    delete:
      tags:
      - Action batches
      summary: deleteOrganizationActionBatch
      description: Delete an action batch
      operationId: deleteOrganizationActionBatch
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: actionBatchId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /organizations/{organizationId}/admins:
    post:
      tags:
      - Admins
      summary: createOrganizationAdmin
      description: Create a new dashboard administrator
      operationId: createOrganizationAdmin
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationAdmin'
            example:
              name: Miles Meraki
              email: miles@meraki.com
              orgAccess: none
              tags:
              - tag: west
                access: read-only
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "212406",

                    "name": "Miles Meraki",

                    "email": "miles@meraki.com",

                    "orgAccess": "none",

                    "accountStatus": "ok",

                    "twoFactorAuthEnabled": false,

                    "hasApiKey": true,

                    "lastActive": "2019-01-28 14:58:56 -0800",

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ],

                    "networks": [

                      {

                        "id": "N_24329156",

                        "access": "full"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "212406",

                  "name": "Miles Meraki",

                  "email": "miles@meraki.com",

                  "orgAccess": "none",

                  "accountStatus": "ok",

                  "twoFactorAuthEnabled": false,

                  "hasApiKey": true,

                  "lastActive": "2019-01-28 14:58:56 -0800",

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ],

                  "networks": [

                    {

                      "id": "N_24329156",

                      "access": "full"

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Admins
      summary: getOrganizationAdmins
      description: List the dashboard administrators in this organization
      operationId: getOrganizationAdmins
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "212406",

                      "name": "Miles Meraki",

                      "email": "miles@meraki.com",

                      "orgAccess": "none",

                      "accountStatus": "ok",

                      "twoFactorAuthEnabled": false,

                      "hasApiKey": true,

                      "lastActive": "2019-01-28 14:58:56 -0800",

                      "tags": [

                        {

                          "tag": "west",

                          "access": "read-only"

                        }

                      ],

                      "networks": [

                        {

                          "id": "N_24329156",

                          "access": "full"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "212406",

                    "name": "Miles Meraki",

                    "email": "miles@meraki.com",

                    "orgAccess": "none",

                    "accountStatus": "ok",

                    "twoFactorAuthEnabled": false,

                    "hasApiKey": true,

                    "lastActive": "2019-01-28 14:58:56 -0800",

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ],

                    "networks": [

                      {

                        "id": "N_24329156",

                        "access": "full"

                      }

                    ]

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/admins/{id}:
    delete:
      tags:
      - Admins
      summary: deleteOrganizationAdmin
      description: Revoke all access for a dashboard administrator within this organization
      operationId: deleteOrganizationAdmin
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Admins
      summary: updateOrganizationAdmin
      description: Update an administrator
      operationId: updateOrganizationAdmin
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationAdmin'
            example:
              name: Miles Meraki
              email: miles@meraki.com
              orgAccess: none
              tags:
              - tag: west
                access: read-only
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "212406",

                    "name": "Miles Meraki",

                    "email": "miles@meraki.com",

                    "orgAccess": "none",

                    "accountStatus": "ok",

                    "twoFactorAuthEnabled": false,

                    "hasApiKey": true,

                    "lastActive": "2019-01-28 14:58:56 -0800",

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ],

                    "networks": [

                      {

                        "id": "N_24329156",

                        "access": "full"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "212406",

                  "name": "Miles Meraki",

                  "email": "miles@meraki.com",

                  "orgAccess": "none",

                  "accountStatus": "ok",

                  "twoFactorAuthEnabled": false,

                  "hasApiKey": true,

                  "lastActive": "2019-01-28 14:58:56 -0800",

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ],

                  "networks": [

                    {

                      "id": "N_24329156",

                      "access": "full"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/alertSettings:
    put:
      tags:
      - Alert settings
      summary: updateNetworkAlertSettings
      description: Update the alert configuration for this network
      operationId: updateNetworkAlertSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkAlertSettings'
            example:
              defaultDestinations:
                emails:
                - miles@meraki.com
                allAdmins: true
                snmp: true
              alerts:
              - type: gatewayDown
                enabled: true
                alertDestinations:
                  emails:
                  - miles@meraki.com
                  allAdmins: false
                  snmp: false
                filters:
                  timeout: 60
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultDestinations": {

                      "emails": [

                        "miles@meraki.com"

                      ],

                      "allAdmins": true,

                      "snmp": true

                    },

                    "alerts": [

                      {

                        "type": "gatewayDown",

                        "enabled": true,

                        "alertDestinations": {

                          "emails": [

                            "miles@meraki.com"

                          ],

                          "allAdmins": false,

                          "snmp": false

                        },

                        "filters": {

                          "timeout": 60

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "defaultDestinations": {

                    "emails": [

                      "miles@meraki.com"

                    ],

                    "allAdmins": true,

                    "snmp": true

                  },

                  "alerts": [

                    {

                      "type": "gatewayDown",

                      "enabled": true,

                      "alertDestinations": {

                        "emails": [

                          "miles@meraki.com"

                        ],

                        "allAdmins": false,

                        "snmp": false

                      },

                      "filters": {

                        "timeout": 60

                      }

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Alert settings
      summary: getNetworkAlertSettings
      description: Return the alert configuration for this network
      operationId: getNetworkAlertSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultDestinations": {

                      "emails": [

                        "miles@meraki.com"

                      ],

                      "allAdmins": true,

                      "snmp": true

                    },

                    "alerts": [

                      {

                        "type": "gatewayDown",

                        "enabled": true,

                        "alertDestinations": {

                          "emails": [

                            "miles@meraki.com"

                          ],

                          "allAdmins": false,

                          "snmp": false

                        },

                        "filters": {

                          "timeout": 60

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "defaultDestinations": {

                    "emails": [

                      "miles@meraki.com"

                    ],

                    "allAdmins": true,

                    "snmp": true

                  },

                  "alerts": [

                    {

                      "type": "gatewayDown",

                      "enabled": true,

                      "alertDestinations": {

                        "emails": [

                          "miles@meraki.com"

                        ],

                        "allAdmins": false,

                        "snmp": false

                      },

                      "filters": {

                        "timeout": 60

                      }

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/bluetoothClients:
    get:
      tags:
      - Bluetooth clients
      summary: getNetworkBluetoothClients
      description: List the Bluetooth clients seen by APs in this network
      operationId: getNetworkBluetoothClients
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: includeConnectivityHistory
        in: query
        description: Include the connectivity history for this client
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1284392014819",

                      "mac": "22:33:44:55:66:77",

                      "networkId": "N_24329156",

                      "name": "Miles's phone",

                      "deviceName": "Bose QuietComfort 35",

                      "manufacturer": "Bose",

                      "lastSeen": 1526087474,

                      "seenByDeviceMac": "00:11:22:33:44:55",

                      "inSightAlert": false,

                      "outOfSightAlert": false,

                      "tags": [

                        "tag1",

                        "tag2"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1284392014819",

                    "mac": "22:33:44:55:66:77",

                    "networkId": "N_24329156",

                    "name": "Miles's phone",

                    "deviceName": "Bose QuietComfort 35",

                    "manufacturer": "Bose",

                    "lastSeen": 1526087474,

                    "seenByDeviceMac": "00:11:22:33:44:55",

                    "inSightAlert": false,

                    "outOfSightAlert": false,

                    "tags": [

                      "tag1",

                      "tag2"

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/bluetoothClients/{bluetoothClientId}:
    get:
      tags:
      - Bluetooth clients
      summary: getNetworkBluetoothClient
      description: Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
      operationId: getNetworkBluetoothClient
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: bluetoothClientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: includeConnectivityHistory
        in: query
        description: Include the connectivity history for this client
        style: form
        explode: true
        schema:
          type: boolean
      - name: connectivityHistoryTimespan
        in: query
        description: The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "mac": "22:33:44:55:66:77",

                    "networkId": "N_24329156",

                    "name": "Miles's phone",

                    "deviceName": "Bose QuietComfort 35",

                    "manufacturer": "Bose",

                    "lastSeen": 1526087474,

                    "seenByDeviceMac": "00:11:22:33:44:55",

                    "inSightAlert": false,

                    "outOfSightAlert": false,

                    "tags": [

                      "tag1",

                      "tag2"

                    ]

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "mac": "22:33:44:55:66:77",

                  "networkId": "N_24329156",

                  "name": "Miles's phone",

                  "deviceName": "Bose QuietComfort 35",

                  "manufacturer": "Bose",

                  "lastSeen": 1526087474,

                  "seenByDeviceMac": "00:11:22:33:44:55",

                  "inSightAlert": false,

                  "outOfSightAlert": false,

                  "tags": [

                    "tag1",

                    "tag2"

                  ]

                }
      deprecated: false
  /devices/{serial}/wireless/bluetooth/settings:
    put:
      tags:
      - Bluetooth settings
      summary: updateDeviceWirelessBluetoothSettings
      description: Update the bluetooth settings for a wireless device
      operationId: updateDeviceWirelessBluetoothSettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceWirelessBluetoothSettings'
            example:
              uuid: 00000000-0000-0000-000-000000000000
              major: 13
              minor: 125
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "uuid": "00000000-0000-0000-000-000000000000",

                    "major": 13,

                    "minor": 125

                  }
              example: >-
                {

                  "uuid": "00000000-0000-0000-000-000000000000",

                  "major": 13,

                  "minor": 125

                }
      deprecated: false
    get:
      tags:
      - Bluetooth settings
      summary: getDeviceWirelessBluetoothSettings
      description: Return the bluetooth settings for a wireless device
      operationId: getDeviceWirelessBluetoothSettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "uuid": "00000000-0000-0000-000-000000000000",

                    "major": 13,

                    "minor": 125

                  }
              example: >-
                {

                  "uuid": "00000000-0000-0000-000-000000000000",

                  "major": 13,

                  "minor": 125

                }
      deprecated: false
  /networks/{networkId}/bluetoothSettings:
    put:
      tags:
      - Bluetooth settings
      summary: updateNetworkBluetoothSettings
      description: Update the Bluetooth settings for a network. See the docs page for <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a>.
      operationId: updateNetworkBluetoothSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkBluetoothSettings'
            example:
              scanningEnabled: true
              advertisingEnabled: true
              uuid: 00000000-0000-0000-000-000000000000
              majorMinorAssignmentMode: Non-unique
              major: 1
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "scanningEnabled": true,

                    "advertisingEnabled": true,

                    "uuid": "00000000-0000-0000-000-000000000000",

                    "majorMinorAssignmentMode": "Non-unique",

                    "major": 1

                  }
              example: >-
                {

                  "scanningEnabled": true,

                  "advertisingEnabled": true,

                  "uuid": "00000000-0000-0000-000-000000000000",

                  "majorMinorAssignmentMode": "Non-unique",

                  "major": 1

                }
      deprecated: false
    get:
      tags:
      - Bluetooth settings
      summary: getNetworkBluetoothSettings
      description: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.
      operationId: getNetworkBluetoothSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "scanningEnabled": true,

                    "advertisingEnabled": true,

                    "uuid": "00000000-0000-0000-000-000000000000",

                    "majorMinorAssignmentMode": "Non-unique",

                    "major": 1

                  }
              example: >-
                {

                  "scanningEnabled": true,

                  "advertisingEnabled": true,

                  "uuid": "00000000-0000-0000-000-000000000000",

                  "majorMinorAssignmentMode": "Non-unique",

                  "major": 1

                }
      deprecated: false
  /networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}:
    delete:
      tags:
      - Camera quality retention profiles
      summary: deleteNetworkCameraQualityRetentionProfile
      description: Delete an existing quality retention profile for this network.
      operationId: deleteNetworkCameraQualityRetentionProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Camera quality retention profiles
      summary: updateNetworkCameraQualityRetentionProfile
      description: Update an existing quality retention profile for this network.
      operationId: updateNetworkCameraQualityRetentionProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCameraQualityRetentionProfile'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Sample quality retention profile",

                  "restrictedBandwidthModeEnabled": true,

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "cloudArchiveEnabled": false,

                  "maxRetentionDays": 7,

                  "scheduleId": null,

                  "motionDetectorVersion": 2,

                  "videoSettings": {

                    "MV32": {

                      "quality": "Enhanced",

                      "resolution": "1080x1080"

                    },

                    "MV21/MV71": {

                      "quality": "High",

                      "resolution": "1280x720"

                    },

                    "MV12/MV22/MV72": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    },

                    "MV12WE": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    }

                  }

                }
      deprecated: false
    get:
      tags:
      - Camera quality retention profiles
      summary: getNetworkCameraQualityRetentionProfile
      description: Retrieve a single quality retention profile
      operationId: getNetworkCameraQualityRetentionProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qualityRetentionProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Sample quality retention profile",

                  "restrictedBandwidthModeEnabled": true,

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "cloudArchiveEnabled": false,

                  "maxRetentionDays": 7,

                  "scheduleId": null,

                  "motionDetectorVersion": 2,

                  "videoSettings": {

                    "MV32": {

                      "quality": "Enhanced",

                      "resolution": "1080x1080"

                    },

                    "MV21/MV71": {

                      "quality": "High",

                      "resolution": "1280x720"

                    },

                    "MV12/MV22/MV72": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    },

                    "MV12WE": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/camera/qualityRetentionProfiles:
    get:
      tags:
      - Camera quality retention profiles
      summary: getNetworkCameraQualityRetentionProfiles
      description: List the quality retention profiles for this network
      operationId: getNetworkCameraQualityRetentionProfiles
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Sample quality retention profile",

                      "restrictedBandwidthModeEnabled": true,

                      "motionBasedRetentionEnabled": false,

                      "audioRecordingEnabled": false,

                      "cloudArchiveEnabled": false,

                      "maxRetentionDays": 7,

                      "scheduleId": null,

                      "motionDetectorVersion": 2,

                      "videoSettings": {

                        "MV32": {

                          "quality": "Enhanced",

                          "resolution": "1080x1080"

                        },

                        "MV21/MV71": {

                          "quality": "High",

                          "resolution": "1280x720"

                        },

                        "MV12/MV22/MV72": {

                          "quality": "High",

                          "resolution": "1920x1080"

                        },

                        "MV12WE": {

                          "quality": "High",

                          "resolution": "1920x1080"

                        }

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }

                ]
      deprecated: false
    post:
      tags:
      - Camera quality retention profiles
      summary: createNetworkCameraQualityRetentionProfile
      description: Creates new quality retention profile for this network.
      operationId: createNetworkCameraQualityRetentionProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkCameraQualityRetentionProfile'
            example: {}
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Sample quality retention profile",

                    "restrictedBandwidthModeEnabled": true,

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "cloudArchiveEnabled": false,

                    "maxRetentionDays": 7,

                    "scheduleId": null,

                    "motionDetectorVersion": 2,

                    "videoSettings": {

                      "MV32": {

                        "quality": "Enhanced",

                        "resolution": "1080x1080"

                      },

                      "MV21/MV71": {

                        "quality": "High",

                        "resolution": "1280x720"

                      },

                      "MV12/MV22/MV72": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      },

                      "MV12WE": {

                        "quality": "High",

                        "resolution": "1920x1080"

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Sample quality retention profile",

                  "restrictedBandwidthModeEnabled": true,

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "cloudArchiveEnabled": false,

                  "maxRetentionDays": 7,

                  "scheduleId": null,

                  "motionDetectorVersion": 2,

                  "videoSettings": {

                    "MV32": {

                      "quality": "Enhanced",

                      "resolution": "1080x1080"

                    },

                    "MV21/MV71": {

                      "quality": "High",

                      "resolution": "1280x720"

                    },

                    "MV12/MV22/MV72": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    },

                    "MV12WE": {

                      "quality": "High",

                      "resolution": "1920x1080"

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/cameras/{serial}/videoLink:
    get:
      tags:
      - Cameras
      summary: getNetworkCameraVideoLink
      description: Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.
      operationId: getNetworkCameraVideoLink
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: timestamp
        in: query
        description: '[optional] The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds). If no timestamp is specified, we will assume current time.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"

                  }
              example: >-
                {

                  "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"

                }
      deprecated: false
  /devices/{serial}/camera/qualityAndRetentionSettings:
    put:
      tags:
      - Cameras
      summary: updateDeviceCameraQualityAndRetentionSettings
      description: Update quality and retention settings for the given camera
      operationId: updateDeviceCameraQualityAndRetentionSettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceCameraQualityAndRetentionSettings'
            example:
              motionBasedRetentionEnabled: false
              audioRecordingEnabled: false
              restrictedBandwidthModeEnabled: false
              profileId: 
              quality: Standard
              resolution: 720
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "restrictedBandwidthModeEnabled": false,

                    "profileId": null,

                    "quality": "Standard",

                    "resolution": 720

                  }
              example: >-
                {

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "restrictedBandwidthModeEnabled": false,

                  "profileId": null,

                  "quality": "Standard",

                  "resolution": 720

                }
      deprecated: false
    get:
      tags:
      - Cameras
      summary: getDeviceCameraQualityAndRetentionSettings
      description: Returns quality and retention settings for the given camera
      operationId: getDeviceCameraQualityAndRetentionSettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "motionBasedRetentionEnabled": false,

                    "audioRecordingEnabled": false,

                    "restrictedBandwidthModeEnabled": false,

                    "profileId": null,

                    "quality": "Standard",

                    "resolution": 720

                  }
              example: >-
                {

                  "motionBasedRetentionEnabled": false,

                  "audioRecordingEnabled": false,

                  "restrictedBandwidthModeEnabled": false,

                  "profileId": null,

                  "quality": "Standard",

                  "resolution": 720

                }
      deprecated: false
  /networks/{networkId}/cameras/{serial}/snapshot:
    post:
      tags:
      - Cameras
      summary: generateNetworkCameraSnapshot
      description: Generate a snapshot of what the camera sees at the specified time and return a link to that image.
      operationId: generateNetworkCameraSnapshot
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateNetworkCameraSnapshot'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        202:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",

                    "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."

                  }
              example: >-
                {

                  "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",

                  "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."

                }
      deprecated: false
  /networks/{networkId}/camera/schedules:
    get:
      tags:
      - Cameras
      summary: getNetworkCameraSchedules
      description: Returns a list of all camera recording schedules.
      operationId: getNetworkCameraSchedules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "123",

                      "name": "Weekday schedule"

                    },

                    {

                      "id": "124",

                      "name": "Office hours"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "123",

                    "name": "Weekday schedule"

                  },

                  {

                    "id": "124",

                    "name": "Office hours"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/configurationChanges:
    get:
      tags:
      - Change log
      summary: getOrganizationConfigurationChanges
      description: View the Change Log for your organization
      operationId: getOrganizationConfigurationChanges
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: networkId
        in: query
        description: Filters on the given network
        style: form
        explode: true
        schema:
          type: string
      - name: adminId
        in: query
        description: Filters on the given Admin
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ts": "2018-02-11T00:00:00.090210Z",

                      "adminName": "Miles Meraki",

                      "adminEmail": "miles@meraki.com",

                      "adminId": "212406",

                      "page": "via API",

                      "label": "PUT /api/v1/organizations/2930418",

                      "oldValue": "{\"id\":\"2930418\",\"name\":\"My organization\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}",

                      "newValue": "{\"id\":\"2930418\",\"name\":\"My organization changed\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}"

                    }

                  ]
              example: >-
                [

                  {

                    "ts": "2018-02-11T00:00:00.090210Z",

                    "adminName": "Miles Meraki",

                    "adminEmail": "miles@meraki.com",

                    "adminId": "212406",

                    "page": "via API",

                    "label": "PUT /api/v1/organizations/2930418",

                    "oldValue": "{\"id\":\"2930418\",\"name\":\"My organization\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}",

                    "newValue": "{\"id\":\"2930418\",\"name\":\"My organization changed\",\"url\":\"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"}"

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/splashAuthorizationStatus:
    get:
      tags:
      - Clients
      summary: getNetworkClientSplashAuthorizationStatus
      description: Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientSplashAuthorizationStatus
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ssids": {

                      "0": {

                        "isAuthorized": true,

                        "authorizedAt": "2017-07-19 16:24:13 UTC",

                        "expiresAt": "2017-07-20 16:24:13 UTC"

                      },

                      "2": {

                        "isAuthorized": false

                      }

                    }

                  }
              example: >-
                {

                  "ssids": {

                    "0": {

                      "isAuthorized": true,

                      "authorizedAt": "2017-07-19 16:24:13 UTC",

                      "expiresAt": "2017-07-20 16:24:13 UTC"

                    },

                    "2": {

                      "isAuthorized": false

                    }

                  }

                }
      deprecated: false
    put:
      tags:
      - Clients
      summary: updateNetworkClientSplashAuthorizationStatus
      description: Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: updateNetworkClientSplashAuthorizationStatus
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkClientSplashAuthorizationStatus'
            example:
              ssids:
                0:
                  isAuthorized: true
                2:
                  isAuthorized: false
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ssids": {

                      "0": {

                        "isAuthorized": true,

                        "authorizedAt": "2017-07-19 16:24:13 UTC",

                        "expiresAt": "2017-07-20 16:24:13 UTC"

                      },

                      "2": {

                        "isAuthorized": false

                      }

                    }

                  }
              example: >-
                {

                  "ssids": {

                    "0": {

                      "isAuthorized": true,

                      "authorizedAt": "2017-07-19 16:24:13 UTC",

                      "expiresAt": "2017-07-20 16:24:13 UTC"

                    },

                    "2": {

                      "isAuthorized": false

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/clients/{clientId}:
    get:
      tags:
      - Clients
      summary: getNetworkClient
      description: Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClient
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "null",

                    "vlan": "255",

                    "switchport": null,

                    "ip6": "",

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "manufacturer": "Apple",

                    "os": "iOS",

                    "ssid": "My SSID",

                    "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",

                    "smInstalled": true,

                    "recentDeviceMac": "00:11:22:33:44:55",

                    "clientVpnConnections": [

                      {

                        "remoteIp": "1.2.3.4",

                        "connectedAt": 1522613355,

                        "disconnectedAt": 1522613360

                      }

                    ],

                    "lldp": [

                      [

                        "System name",

                        "Some system name"

                      ],

                      [

                        "System description",

                        "Some system description"

                      ],

                      [

                        "Port ID",

                        "1"

                      ],

                      [

                        "Chassis ID",

                        "00:18:0a:00:00:00"

                      ],

                      [

                        "Port description",

                        "eth0"

                      ],

                      [

                        "System capabilities",

                        "Two-port MAC Relay"

                      ]

                    ],

                    "cdp": null,

                    "status": "Online"

                  }
              example: >-
                {

                  "id": "k74272e",

                  "description": "Miles's phone",

                  "mac": "22:33:44:55:66:77",

                  "ip": "1.2.3.4",

                  "user": "null",

                  "vlan": "255",

                  "switchport": null,

                  "ip6": "",

                  "firstSeen": 1518365681,

                  "lastSeen": 1526087474,

                  "manufacturer": "Apple",

                  "os": "iOS",

                  "ssid": "My SSID",

                  "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",

                  "smInstalled": true,

                  "recentDeviceMac": "00:11:22:33:44:55",

                  "clientVpnConnections": [

                    {

                      "remoteIp": "1.2.3.4",

                      "connectedAt": 1522613355,

                      "disconnectedAt": 1522613360

                    }

                  ],

                  "lldp": [

                    [

                      "System name",

                      "Some system name"

                    ],

                    [

                      "System description",

                      "Some system description"

                    ],

                    [

                      "Port ID",

                      "1"

                    ],

                    [

                      "Chassis ID",

                      "00:18:0a:00:00:00"

                    ],

                    [

                      "Port description",

                      "eth0"

                    ],

                    [

                      "System capabilities",

                      "Two-port MAC Relay"

                    ]

                  ],

                  "cdp": null,

                  "status": "Online"

                }
      deprecated: false
  /networks/{networkId}/clients/{clientId}/usageHistory:
    get:
      tags:
      - Clients
      summary: getNetworkClientUsageHistory
      description: Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientUsageHistory
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "sent": 500,

                      "received": 680,

                      "ts": 1518365681

                    }

                  ]
              example: >-
                [

                  {

                    "sent": 500,

                    "received": 680,

                    "ts": 1518365681

                  }

                ]
      deprecated: false
  /devices/{serial}/clients:
    get:
      tags:
      - Clients
      summary: getDeviceClients
      description: List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.
      operationId: getDeviceClients
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "usage": {

                        "sent": 138.0,

                        "recv": 61.0

                      },

                      "id": "k74272e",

                      "description": "Miles's phone",

                      "mac": "22:33:44:55:66:77",

                      "ip": "1.2.3.4",

                      "user": "milesmeraki",

                      "vlan": 255,

                      "switchport": null,

                      "mdnsName": "Miles's phone",

                      "dhcpHostname": "MilesPhone"

                    }

                  ]
              example: >-
                [

                  {

                    "usage": {

                      "sent": 138.0,

                      "recv": 61.0

                    },

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "milesmeraki",

                    "vlan": 255,

                    "switchport": null,

                    "mdnsName": "Miles's phone",

                    "dhcpHostname": "MilesPhone"

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/events:
    get:
      tags:
      - Clients
      summary: getNetworkClientEvents
      description: Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientEvents
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "deviceSerial": "Q234-ABCD-5678",

                      "occurredAt": 1518365681,

                      "type": "l3roaming_assoc_start",

                      "details": {

                        "vap": "1",

                        "on_packet": "true"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "deviceSerial": "Q234-ABCD-5678",

                    "occurredAt": 1518365681,

                    "type": "l3roaming_assoc_start",

                    "details": {

                      "vap": "1",

                      "on_packet": "true"

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/policy:
    put:
      tags:
      - Clients
      summary: updateNetworkClientPolicy
      description: Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: updateNetworkClientPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkClientPolicy'
            example:
              mac: 00:11:22:33:44:55
              type: Group policy
              groupPolicyId: 101
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mac": "00:11:22:33:44:55",

                    "type": "Group policy",

                    "groupPolicyId": "101"

                  }
              example: >-
                {

                  "mac": "00:11:22:33:44:55",

                  "type": "Group policy",

                  "groupPolicyId": "101"

                }
      deprecated: false
    get:
      tags:
      - Clients
      summary: getNetworkClientPolicy
      description: Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mac": "00:11:22:33:44:55",

                    "type": "Group policy",

                    "groupPolicyId": "101"

                  }
              example: >-
                {

                  "mac": "00:11:22:33:44:55",

                  "type": "Group policy",

                  "groupPolicyId": "101"

                }
      deprecated: false
  /networks/{networkId}/clients/provision:
    post:
      tags:
      - Clients
      summary: provisionNetworkClients
      description: Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.
      operationId: provisionNetworkClients
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/provisionNetworkClients'
            example:
              mac: 00:11:22:33:44:55
              name: Miles's phone
              devicePolicy: Group policy
              groupPolicyId: 101
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mac": "00:11:22:33:44:55",

                    "clientId": "k74272e",

                    "name": "Miles's phone",

                    "devicePolicy": "Group policy",

                    "groupPolicyId": "101"

                  }
              example: >-
                {

                  "mac": "00:11:22:33:44:55",

                  "clientId": "k74272e",

                  "name": "Miles's phone",

                  "devicePolicy": "Group policy",

                  "groupPolicyId": "101"

                }
      deprecated: false
  /networks/{networkId}/clients/{clientId}/latencyHistory:
    get:
      tags:
      - Clients
      summary: getNetworkClientLatencyHistory
      description: 'Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.'
      operationId: getNetworkClientLatencyHistory
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 7200
      - name: resolution
        in: query
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.'
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "t0": 1550534400,

                      "t1": 1550620800,

                      "latencyBinsByCategory": {

                        "backgroundTraffic": {

                          "0.5": 41750,

                          "1.0": 21552,

                          "2.0": 59940,

                          "4.0": 146622,

                          "8.0": 57354,

                          "16.0": 0,

                          "32.0": 9954,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 1896,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        },

                        "bestEffortTraffic": {

                          "0.5": 1840899,

                          "1.0": 1644506,

                          "2.0": 629958,

                          "4.0": 449564,

                          "8.0": 2009658,

                          "16.0": 1329568,

                          "32.0": 282168,

                          "64.0": 97573,

                          "128.0": 191977,

                          "256.0": 30560,

                          "512.0": 26032,

                          "1024.0": 4943,

                          "2048.0": 12072

                        },

                        "videoTraffic": {

                          "0.5": 0,

                          "1.0": 0,

                          "2.0": 0,

                          "4.0": 0,

                          "8.0": 0,

                          "16.0": 0,

                          "32.0": 0,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 0,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        },

                        "voiceTraffic": {

                          "0.5": 716,

                          "1.0": 948,

                          "2.0": 474,

                          "4.0": 78,

                          "8.0": 0,

                          "16.0": 0,

                          "32.0": 0,

                          "64.0": 0,

                          "128.0": 0,

                          "256.0": 0,

                          "512.0": 0,

                          "1024.0": 0,

                          "2048.0": 0

                        }

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "t0": 1550534400,

                    "t1": 1550620800,

                    "latencyBinsByCategory": {

                      "backgroundTraffic": {

                        "0.5": 41750,

                        "1.0": 21552,

                        "2.0": 59940,

                        "4.0": 146622,

                        "8.0": 57354,

                        "16.0": 0,

                        "32.0": 9954,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 1896,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      },

                      "bestEffortTraffic": {

                        "0.5": 1840899,

                        "1.0": 1644506,

                        "2.0": 629958,

                        "4.0": 449564,

                        "8.0": 2009658,

                        "16.0": 1329568,

                        "32.0": 282168,

                        "64.0": 97573,

                        "128.0": 191977,

                        "256.0": 30560,

                        "512.0": 26032,

                        "1024.0": 4943,

                        "2048.0": 12072

                      },

                      "videoTraffic": {

                        "0.5": 0,

                        "1.0": 0,

                        "2.0": 0,

                        "4.0": 0,

                        "8.0": 0,

                        "16.0": 0,

                        "32.0": 0,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 0,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      },

                      "voiceTraffic": {

                        "0.5": 716,

                        "1.0": 948,

                        "2.0": 474,

                        "4.0": 78,

                        "8.0": 0,

                        "16.0": 0,

                        "32.0": 0,

                        "64.0": 0,

                        "128.0": 0,

                        "256.0": 0,

                        "512.0": 0,

                        "1024.0": 0,

                        "2048.0": 0

                      }

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients:
    get:
      tags:
      - Clients
      summary: getNetworkClients
      description: List the clients that have used this network in the timespan
      operationId: getNetworkClients
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "usage": {

                        "sent": 138.0,

                        "recv": 61.0

                      },

                      "id": "k74272e",

                      "description": "Miles's phone",

                      "mac": "22:33:44:55:66:77",

                      "ip": "1.2.3.4",

                      "user": "milesmeraki",

                      "vlan": 255,

                      "switchport": null,

                      "ip6": "",

                      "firstSeen": 1518365681,

                      "lastSeen": 1526087474,

                      "manufacturer": "Apple",

                      "os": "iOS",

                      "recentDeviceSerial": "Q234-ABCD-5678",

                      "recentDeviceName": "My AP",

                      "recentDeviceMac": "00:11:22:33:44:55",

                      "ssid": "My SSID",

                      "status": "Online"

                    }

                  ]
              example: >-
                [

                  {

                    "usage": {

                      "sent": 138.0,

                      "recv": 61.0

                    },

                    "id": "k74272e",

                    "description": "Miles's phone",

                    "mac": "22:33:44:55:66:77",

                    "ip": "1.2.3.4",

                    "user": "milesmeraki",

                    "vlan": 255,

                    "switchport": null,

                    "ip6": "",

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "manufacturer": "Apple",

                    "os": "iOS",

                    "recentDeviceSerial": "Q234-ABCD-5678",

                    "recentDeviceName": "My AP",

                    "recentDeviceMac": "00:11:22:33:44:55",

                    "ssid": "My SSID",

                    "status": "Online"

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/trafficHistory:
    get:
      tags:
      - Clients
      summary: getNetworkClientTrafficHistory
      description: Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientTrafficHistory
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ts": 1518365681,

                      "application": "Google",

                      "destination": "www.google.com",

                      "protocol": "UDP",

                      "port": 443,

                      "recv": 383,

                      "sent": 56,

                      "numFlows": 5,

                      "activeSeconds": 240

                    }

                  ]
              example: >-
                [

                  {

                    "ts": 1518365681,

                    "application": "Google",

                    "destination": "www.google.com",

                    "protocol": "UDP",

                    "port": 443,

                    "recv": 383,

                    "sent": 56,

                    "numFlows": 5,

                    "activeSeconds": 240

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/configTemplates:
    get:
      tags:
      - Config templates
      summary: getOrganizationConfigTemplates
      description: List the configuration templates for this organization
      operationId: getOrganizationConfigTemplates
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "N_24329156",

                      "name": "My config template",

                      "productTypes": [

                        "appliance",

                        "switch",

                        "wireless"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "N_24329156",

                    "name": "My config template",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ]

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/configTemplates/{configTemplateId}:
    delete:
      tags:
      - Config templates
      summary: deleteOrganizationConfigTemplate
      description: Remove a configuration template
      operationId: deleteOrganizationConfigTemplate
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: configTemplateId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/connectivityMonitoringDestinations:
    get:
      tags:
      - Connectivity monitoring destinations
      summary: getNetworkConnectivityMonitoringDestinations
      description: Return the connectivity testing destinations for an MX network
      operationId: getNetworkConnectivityMonitoringDestinations
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destinations": [

                      {

                        "ip": "8.8.8.8",

                        "description": "Google",

                        "default": false

                      },

                      {

                        "ip": "1.23.45.67",

                        "description": "test description",

                        "default": true

                      },

                      {

                        "ip": "9.8.7.6",

                        "description": null,

                        "default": false

                      }

                    ]

                  }
              example: >-
                {

                  "destinations": [

                    {

                      "ip": "8.8.8.8",

                      "description": "Google",

                      "default": false

                    },

                    {

                      "ip": "1.23.45.67",

                      "description": "test description",

                      "default": true

                    },

                    {

                      "ip": "9.8.7.6",

                      "description": null,

                      "default": false

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Connectivity monitoring destinations
      summary: updateNetworkConnectivityMonitoringDestinations
      description: Update the connectivity testing destinations for an MX network
      operationId: updateNetworkConnectivityMonitoringDestinations
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkConnectivityMonitoringDestinations'
            example:
              destinations:
              - ip: 8.8.8.8
                description: Google
                default: false
              - ip: 1.23.45.67
                description: test description
                default: true
              - ip: 9.8.7.6
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destinations": [

                      {

                        "ip": "8.8.8.8",

                        "description": "Google",

                        "default": false

                      },

                      {

                        "ip": "1.23.45.67",

                        "description": "test description",

                        "default": true

                      },

                      {

                        "ip": "9.8.7.6",

                        "description": null,

                        "default": false

                      }

                    ]

                  }
              example: >-
                {

                  "destinations": [

                    {

                      "ip": "8.8.8.8",

                      "description": "Google",

                      "default": false

                    },

                    {

                      "ip": "1.23.45.67",

                      "description": "test description",

                      "default": true

                    },

                    {

                      "ip": "9.8.7.6",

                      "description": null,

                      "default": false

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/contentFiltering/categories:
    get:
      tags:
      - Content filtering categories
      summary: getNetworkContentFilteringCategories
      description: List all available content filtering categories for an MX network
      operationId: getNetworkContentFilteringCategories
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "categories": [

                      {

                        "id": "meraki:contentFiltering/category/1",

                        "name": "Real Estate"

                      },

                      {

                        "id": "meraki:contentFiltering/category/3",

                        "name": "Financial Services"

                      },

                      "...",

                      {

                        "id": "meraki:contentFiltering/category/11",

                        "name": "Adult and Pornography"

                      }

                    ]

                  }
              example: >-
                {

                  "categories": [

                    {

                      "id": "meraki:contentFiltering/category/1",

                      "name": "Real Estate"

                    },

                    {

                      "id": "meraki:contentFiltering/category/3",

                      "name": "Financial Services"

                    },

                    "...",

                    {

                      "id": "meraki:contentFiltering/category/11",

                      "name": "Adult and Pornography"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/contentFiltering:
    get:
      tags:
      - Content filtering rules
      summary: getNetworkContentFiltering
      description: Return the content filtering settings for an MX network
      operationId: getNetworkContentFiltering
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "allowedUrlPatterns": [

                      "http://www.example.org",

                      "http://help.com.au"

                    ],

                    "blockedUrlPatterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ],

                    "blockedUrlCategories": [

                      {

                        "id": "meraki:contentFiltering/category/1",

                        "name": "Real Estate"

                      },

                      {

                        "id": "meraki:contentFiltering/category/7",

                        "name": "Shopping"

                      }

                    ],

                    "urlCategoryListSize": "topSites"

                  }
              example: >-
                {

                  "allowedUrlPatterns": [

                    "http://www.example.org",

                    "http://help.com.au"

                  ],

                  "blockedUrlPatterns": [

                    "http://www.example.com",

                    "http://www.betting.com"

                  ],

                  "blockedUrlCategories": [

                    {

                      "id": "meraki:contentFiltering/category/1",

                      "name": "Real Estate"

                    },

                    {

                      "id": "meraki:contentFiltering/category/7",

                      "name": "Shopping"

                    }

                  ],

                  "urlCategoryListSize": "topSites"

                }
      deprecated: false
    put:
      tags:
      - Content filtering rules
      summary: updateNetworkContentFiltering
      description: Update the content filtering settings for an MX network
      operationId: updateNetworkContentFiltering
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkContentFiltering'
            example:
              allowedUrlPatterns:
              - http://www.example.org
              - http://help.com.au
              blockedUrlPatterns:
              - http://www.example.com
              - http://www.betting.com
              blockedUrlCategories:
              - meraki:contentFiltering/category/1
              - meraki:contentFiltering/category/7
              urlCategoryListSize: topSites
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "allowedUrlPatterns": [

                      "http://www.example.org",

                      "http://help.com.au"

                    ],

                    "blockedUrlPatterns": [

                      "http://www.example.com",

                      "http://www.betting.com"

                    ],

                    "blockedUrlCategories": [

                      {

                        "id": "meraki:contentFiltering/category/1",

                        "name": "Real Estate"

                      },

                      {

                        "id": "meraki:contentFiltering/category/7",

                        "name": "Shopping"

                      }

                    ],

                    "urlCategoryListSize": "topSites"

                  }
              example: >-
                {

                  "allowedUrlPatterns": [

                    "http://www.example.org",

                    "http://help.com.au"

                  ],

                  "blockedUrlPatterns": [

                    "http://www.example.com",

                    "http://www.betting.com"

                  ],

                  "blockedUrlCategories": [

                    {

                      "id": "meraki:contentFiltering/category/1",

                      "name": "Real Estate"

                    },

                    {

                      "id": "meraki:contentFiltering/category/7",

                      "name": "Shopping"

                    }

                  ],

                  "urlCategoryListSize": "topSites"

                }
      deprecated: false
  /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}:
    get:
      tags:
      - Dashboard branding policies
      summary: getOrganizationBrandingPolicy
      description: Return a branding policy
      operationId: getOrganizationBrandingPolicy
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: brandingPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "brandingPolicyId": "456",

                    "name": "My Branding Policy",

                    "enabled": true,

                    "adminSettings": {

                      "appliesTo": "All admins of networks...",

                      "values": [

                        "N_1234",

                        "L_5678"

                      ]

                    },

                    "helpSettings": {

                      "helpTab": "show",

                      "getHelpSubtab": "default or inherit",

                      "communitySubtab": "show",

                      "casesSubtab": "hide",

                      "dataProtectionRequestsSubtab": "default or inherit",

                      "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                      "universalSearchKnowledgeBaseSearch": "hide",

                      "ciscoMerakiProductDocumentation": "show",

                      "supportContactInfo": "show",

                      "newFeaturesSubtab": "show",

                      "firewallInfoSubtab": "hide",

                      "apiDocsSubtab": "default or inherit",

                      "hardwareReplacementsSubtab": "hide",

                      "smForums": "hide"

                    }

                  }
              example: >-
                {

                  "brandingPolicyId": "456",

                  "name": "My Branding Policy",

                  "enabled": true,

                  "adminSettings": {

                    "appliesTo": "All admins of networks...",

                    "values": [

                      "N_1234",

                      "L_5678"

                    ]

                  },

                  "helpSettings": {

                    "helpTab": "show",

                    "getHelpSubtab": "default or inherit",

                    "communitySubtab": "show",

                    "casesSubtab": "hide",

                    "dataProtectionRequestsSubtab": "default or inherit",

                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                    "universalSearchKnowledgeBaseSearch": "hide",

                    "ciscoMerakiProductDocumentation": "show",

                    "supportContactInfo": "show",

                    "newFeaturesSubtab": "show",

                    "firewallInfoSubtab": "hide",

                    "apiDocsSubtab": "default or inherit",

                    "hardwareReplacementsSubtab": "hide",

                    "smForums": "hide"

                  }

                }
      deprecated: false
    put:
      tags:
      - Dashboard branding policies
      summary: updateOrganizationBrandingPolicy
      description: Update a branding policy
      operationId: updateOrganizationBrandingPolicy
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: brandingPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationBrandingPolicy'
            example:
              brandingPolicyId: 456
              name: My Branding Policy
              enabled: true
              adminSettings:
                appliesTo: All admins of networks...
                values:
                - N_1234
                - L_5678
              helpSettings:
                helpTab: show
                getHelpSubtab: default or inherit
                communitySubtab: show
                casesSubtab: hide
                dataProtectionRequestsSubtab: default or inherit
                getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                universalSearchKnowledgeBaseSearch: hide
                ciscoMerakiProductDocumentation: show
                supportContactInfo: show
                newFeaturesSubtab: show
                firewallInfoSubtab: hide
                apiDocsSubtab: default or inherit
                hardwareReplacementsSubtab: hide
                smForums: hide
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "brandingPolicyId": "456",

                    "name": "My Branding Policy",

                    "enabled": true,

                    "adminSettings": {

                      "appliesTo": "All admins of networks...",

                      "values": [

                        "N_1234",

                        "L_5678"

                      ]

                    },

                    "helpSettings": {

                      "helpTab": "show",

                      "getHelpSubtab": "default or inherit",

                      "communitySubtab": "show",

                      "casesSubtab": "hide",

                      "dataProtectionRequestsSubtab": "default or inherit",

                      "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                      "universalSearchKnowledgeBaseSearch": "hide",

                      "ciscoMerakiProductDocumentation": "show",

                      "supportContactInfo": "show",

                      "newFeaturesSubtab": "show",

                      "firewallInfoSubtab": "hide",

                      "apiDocsSubtab": "default or inherit",

                      "hardwareReplacementsSubtab": "hide",

                      "smForums": "hide"

                    }

                  }
              example: >-
                {

                  "brandingPolicyId": "456",

                  "name": "My Branding Policy",

                  "enabled": true,

                  "adminSettings": {

                    "appliesTo": "All admins of networks...",

                    "values": [

                      "N_1234",

                      "L_5678"

                    ]

                  },

                  "helpSettings": {

                    "helpTab": "show",

                    "getHelpSubtab": "default or inherit",

                    "communitySubtab": "show",

                    "casesSubtab": "hide",

                    "dataProtectionRequestsSubtab": "default or inherit",

                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                    "universalSearchKnowledgeBaseSearch": "hide",

                    "ciscoMerakiProductDocumentation": "show",

                    "supportContactInfo": "show",

                    "newFeaturesSubtab": "show",

                    "firewallInfoSubtab": "hide",

                    "apiDocsSubtab": "default or inherit",

                    "hardwareReplacementsSubtab": "hide",

                    "smForums": "hide"

                  }

                }
      deprecated: false
    delete:
      tags:
      - Dashboard branding policies
      summary: deleteOrganizationBrandingPolicy
      description: Delete a branding policy
      operationId: deleteOrganizationBrandingPolicy
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: brandingPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /organizations/{organizationId}/brandingPolicies:
    post:
      tags:
      - Dashboard branding policies
      summary: createOrganizationBrandingPolicy
      description: Add a new branding policy to an organization
      operationId: createOrganizationBrandingPolicy
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationBrandingPolicy'
            example:
              brandingPolicyId: 456
              name: My Branding Policy
              enabled: true
              adminSettings:
                appliesTo: All admins of networks...
                values:
                - N_1234
                - L_5678
              helpSettings:
                helpTab: show
                getHelpSubtab: default or inherit
                communitySubtab: show
                casesSubtab: hide
                dataProtectionRequestsSubtab: default or inherit
                getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                universalSearchKnowledgeBaseSearch: hide
                ciscoMerakiProductDocumentation: show
                supportContactInfo: show
                newFeaturesSubtab: show
                firewallInfoSubtab: hide
                apiDocsSubtab: default or inherit
                hardwareReplacementsSubtab: hide
                smForums: hide
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "brandingPolicyId": "456",

                    "name": "My Branding Policy",

                    "enabled": true,

                    "adminSettings": {

                      "appliesTo": "All admins of networks...",

                      "values": [

                        "N_1234",

                        "L_5678"

                      ]

                    },

                    "helpSettings": {

                      "helpTab": "show",

                      "getHelpSubtab": "default or inherit",

                      "communitySubtab": "show",

                      "casesSubtab": "hide",

                      "dataProtectionRequestsSubtab": "default or inherit",

                      "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                      "universalSearchKnowledgeBaseSearch": "hide",

                      "ciscoMerakiProductDocumentation": "show",

                      "supportContactInfo": "show",

                      "newFeaturesSubtab": "show",

                      "firewallInfoSubtab": "hide",

                      "apiDocsSubtab": "default or inherit",

                      "hardwareReplacementsSubtab": "hide",

                      "smForums": "hide"

                    }

                  }
              example: >-
                {

                  "brandingPolicyId": "456",

                  "name": "My Branding Policy",

                  "enabled": true,

                  "adminSettings": {

                    "appliesTo": "All admins of networks...",

                    "values": [

                      "N_1234",

                      "L_5678"

                    ]

                  },

                  "helpSettings": {

                    "helpTab": "show",

                    "getHelpSubtab": "default or inherit",

                    "communitySubtab": "show",

                    "casesSubtab": "hide",

                    "dataProtectionRequestsSubtab": "default or inherit",

                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                    "universalSearchKnowledgeBaseSearch": "hide",

                    "ciscoMerakiProductDocumentation": "show",

                    "supportContactInfo": "show",

                    "newFeaturesSubtab": "show",

                    "firewallInfoSubtab": "hide",

                    "apiDocsSubtab": "default or inherit",

                    "hardwareReplacementsSubtab": "hide",

                    "smForums": "hide"

                  }

                }
      deprecated: false
    get:
      tags:
      - Dashboard branding policies
      summary: getOrganizationBrandingPolicies
      description: List the branding policies of an organization
      operationId: getOrganizationBrandingPolicies
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "brandingPolicyId": "456",

                      "name": "My Branding Policy",

                      "enabled": true,

                      "adminSettings": {

                        "appliesTo": "All admins of networks...",

                        "values": [

                          "N_1234",

                          "L_5678"

                        ]

                      },

                      "helpSettings": {

                        "helpTab": "show",

                        "getHelpSubtab": "default or inherit",

                        "communitySubtab": "show",

                        "casesSubtab": "hide",

                        "dataProtectionRequestsSubtab": "default or inherit",

                        "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                        "universalSearchKnowledgeBaseSearch": "hide",

                        "ciscoMerakiProductDocumentation": "show",

                        "supportContactInfo": "show",

                        "newFeaturesSubtab": "show",

                        "firewallInfoSubtab": "hide",

                        "apiDocsSubtab": "default or inherit",

                        "hardwareReplacementsSubtab": "hide",

                        "smForums": "hide"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "brandingPolicyId": "456",

                    "name": "My Branding Policy",

                    "enabled": true,

                    "adminSettings": {

                      "appliesTo": "All admins of networks...",

                      "values": [

                        "N_1234",

                        "L_5678"

                      ]

                    },

                    "helpSettings": {

                      "helpTab": "show",

                      "getHelpSubtab": "default or inherit",

                      "communitySubtab": "show",

                      "casesSubtab": "hide",

                      "dataProtectionRequestsSubtab": "default or inherit",

                      "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",

                      "universalSearchKnowledgeBaseSearch": "hide",

                      "ciscoMerakiProductDocumentation": "show",

                      "supportContactInfo": "show",

                      "newFeaturesSubtab": "show",

                      "firewallInfoSubtab": "hide",

                      "apiDocsSubtab": "default or inherit",

                      "hardwareReplacementsSubtab": "hide",

                      "smForums": "hide"

                    }

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/brandingPolicies/priorities:
    put:
      tags:
      - Dashboard branding policies
      summary: updateOrganizationBrandingPoliciesPriorities
      description: Update the priority ordering of an organization's branding policies.
      operationId: updateOrganizationBrandingPoliciesPriorities
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationBrandingPoliciesPriorities'
            example:
              brandingPolicyIds:
              - 123
              - 456
              - 789
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "brandingPolicyIds": [

                      "123",

                      "456",

                      "789"

                    ]

                  }
              example: >-
                {

                  "brandingPolicyIds": [

                    "123",

                    "456",

                    "789"

                  ]

                }
      deprecated: false
    get:
      tags:
      - Dashboard branding policies
      summary: getOrganizationBrandingPoliciesPriorities
      description: Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).
      operationId: getOrganizationBrandingPoliciesPriorities
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "brandingPolicyIds": [

                      "123",

                      "456",

                      "789"

                    ]

                  }
              example: >-
                {

                  "brandingPolicyIds": [

                    "123",

                    "456",

                    "789"

                  ]

                }
      deprecated: false
  /networks/{networkId}/devices/claim:
    post:
      tags:
      - Devices
      summary: claimNetworkDevices
      description: Claim devices into a network
      operationId: claimNetworkDevices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/claimNetworkDevices'
            example:
              serials:
              - Q234-ABCD-0001
              - Q234-ABCD-0002
              - Q234-ABCD-0003
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/devices/{serial}/blinkLeds:
    post:
      tags:
      - Devices
      summary: blinkNetworkDeviceLeds
      description: Blink the LEDs on a device
      operationId: blinkNetworkDeviceLeds
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blinkNetworkDeviceLeds'
            example:
              duration: 20
              period: 160
              duty: 50
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "sentToDevice": true

                  }
              example: >-
                {

                  "sentToDevice": true

                }
      deprecated: false
  /devices/{serial}/switch/ports/cycle:
    post:
      tags:
      - Devices
      summary: cycleDeviceSwitchPorts
      description: Cycle a set of switch ports
      operationId: cycleDeviceSwitchPorts
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cycleDeviceSwitchPorts'
            example:
              ports:
              - 1
              - 2-5
              - 1_MA-MOD-8X10G_1
              - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ports": [

                      "1",

                      "2-5",

                      "1_MA-MOD-8X10G_1",

                      "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"

                    ]

                  }
              example: >-
                {

                  "ports": [

                    "1",

                    "2-5",

                    "1_MA-MOD-8X10G_1",

                    "1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8"

                  ]

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}:
    put:
      tags:
      - Devices
      summary: updateNetworkDevice
      description: Update the attributes of a device
      operationId: updateNetworkDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkDevice'
            example:
              name: My AP
              lat: 37.418095101036201
              lng: -122.09853172302201
              serial: Q234-ABCD-5678
              mac: 00:11:22:33:44:55
              tags: ' recently-added '
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }
              example: >-
                {

                  "name": "My AP",

                  "lat": 37.4180951010362,

                  "lng": -122.098531723022,

                  "serial": "Q234-ABCD-5678",

                  "mac": "00:11:22:33:44:55",

                  "model": "MR34",

                  "address": "1600 Pennsylvania Ave",

                  "notes": "My AP's note",

                  "lanIp": "1.2.3.4",

                  "tags": " recently-added ",

                  "networkId": "N_24329156",

                  "beaconIdParams": {

                    "uuid": "00000000-0000-0000-0000-000000000000",

                    "major": 5,

                    "minor": 3

                  },

                  "firmware": "wireless-25-14",

                  "floorPlanId": "g_1234567"

                }
      deprecated: false
    get:
      tags:
      - Devices
      summary: getNetworkDevice
      description: Return a single device
      operationId: getNetworkDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }
              example: >-
                {

                  "name": "My AP",

                  "lat": 37.4180951010362,

                  "lng": -122.098531723022,

                  "serial": "Q234-ABCD-5678",

                  "mac": "00:11:22:33:44:55",

                  "model": "MR34",

                  "address": "1600 Pennsylvania Ave",

                  "notes": "My AP's note",

                  "lanIp": "1.2.3.4",

                  "tags": " recently-added ",

                  "networkId": "N_24329156",

                  "beaconIdParams": {

                    "uuid": "00000000-0000-0000-0000-000000000000",

                    "major": 5,

                    "minor": 3

                  },

                  "firmware": "wireless-25-14",

                  "floorPlanId": "g_1234567"

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/lossAndLatencyHistory:
    get:
      tags:
      - Devices
      summary: getNetworkDeviceLossAndLatencyHistory
      description: Get the uplink loss percentage and latency in milliseconds for a wired network device.
      operationId: getNetworkDeviceLossAndLatencyHistory
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 7200
      - name: resolution
        in: query
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.'
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: uplink
        in: query
        description: The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/uplink'
      - name: ip
        in: query
        description: The destination IP used to obtain the requested stats. This is required.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: 1.2.3.4
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "startTime": "2018-10-09T22:18:27Z",

                      "endTime": "2018-10-09T22:19:27Z",

                      "lossPercent": 5,

                      "latencyMs": 324

                    },

                    {

                      "startTime": "2018-10-09T22:19:27Z",

                      "endTime": "2018-10-09T22:20:27Z",

                      "lossPercent": 1,

                      "latencyMs": 43

                    },

                    {

                      "startTime": "2018-10-09T22:20:27Z",

                      "endTime": "2018-10-09T22:21:27Z",

                      "lossPercent": 0,

                      "latencyMs": 44

                    }

                  ]
              example: >-
                [

                  {

                    "startTime": "2018-10-09T22:18:27Z",

                    "endTime": "2018-10-09T22:19:27Z",

                    "lossPercent": 5,

                    "latencyMs": 324

                  },

                  {

                    "startTime": "2018-10-09T22:19:27Z",

                    "endTime": "2018-10-09T22:20:27Z",

                    "lossPercent": 1,

                    "latencyMs": 43

                  },

                  {

                    "startTime": "2018-10-09T22:20:27Z",

                    "endTime": "2018-10-09T22:21:27Z",

                    "lossPercent": 0,

                    "latencyMs": 44

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices:
    get:
      tags:
      - Devices
      summary: getNetworkDevices
      description: List the devices in a network
      operationId: getNetworkDevices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "model": "MR34",

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "lanIp": "1.2.3.4",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "beaconIdParams": {

                      "uuid": "00000000-0000-0000-0000-000000000000",

                      "major": 5,

                      "minor": 3

                    },

                    "firmware": "wireless-25-14",

                    "floorPlanId": "g_1234567"

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/{serial}/lldp_cdp:
    get:
      tags:
      - Devices
      summary: getNetworkDeviceLldp_cdp
      description: List LLDP and CDP information for a device
      operationId: getNetworkDeviceLldp_cdp
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "sourceMac": "00:11:22:33:44:55",

                    "ports": {

                      "8": {

                        "cdp": {

                          "deviceId": "e0553d8cdf53",

                          "portId": "Port 10",

                          "address": "00:11:22:33:44:55",

                          "sourcePort": "8"

                        }

                      },

                      "12": {

                        "cdp": {

                          "deviceId": "e0553d8cdf53",

                          "portId": "Port 11",

                          "address": "00:11:22:33:44:55",

                          "sourcePort": "12"

                        },

                        "lldp": {

                          "systemName": "Meraki MS350-24X - Phineas",

                          "portId": "11",

                          "managementAddress": "00:11:22:33:44:55",

                          "sourcePort": "12"

                        }

                      }

                    }

                  }
              example: >-
                {

                  "sourceMac": "00:11:22:33:44:55",

                  "ports": {

                    "8": {

                      "cdp": {

                        "deviceId": "e0553d8cdf53",

                        "portId": "Port 10",

                        "address": "00:11:22:33:44:55",

                        "sourcePort": "8"

                      }

                    },

                    "12": {

                      "cdp": {

                        "deviceId": "e0553d8cdf53",

                        "portId": "Port 11",

                        "address": "00:11:22:33:44:55",

                        "sourcePort": "12"

                      },

                      "lldp": {

                        "systemName": "Meraki MS350-24X - Phineas",

                        "portId": "11",

                        "managementAddress": "00:11:22:33:44:55",

                        "sourcePort": "12"

                      }

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/performance:
    get:
      tags:
      - Devices
      summary: getNetworkDevicePerformance
      description: Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.
      operationId: getNetworkDevicePerformance
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "perfScore": 10

                  }
              example: >-
                {

                  "perfScore": 10

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/uplink:
    get:
      tags:
      - Devices
      summary: getNetworkDeviceUplink
      description: Return the uplink information for a device.
      operationId: getNetworkDeviceUplink
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "interface": "WAN 1",

                      "status": "Active",

                      "ip": "1.2.3.4",

                      "gateway": "1.2.3.5",

                      "publicIp": "123.123.123.1",

                      "dns": "8.8.8.8, 8.8.4.4",

                      "usingStaticIp": false

                    }

                  ]
              example: >-
                [

                  {

                    "interface": "WAN 1",

                    "status": "Active",

                    "ip": "1.2.3.4",

                    "gateway": "1.2.3.5",

                    "publicIp": "123.123.123.1",

                    "dns": "8.8.8.8, 8.8.4.4",

                    "usingStaticIp": false

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/{serial}/reboot:
    post:
      tags:
      - Devices
      summary: rebootNetworkDevice
      description: Reboot a device
      operationId: rebootNetworkDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /organizations/{organizationId}/devices:
    get:
      tags:
      - Devices
      summary: getOrganizationDevices
      description: List the devices in an organization
      operationId: getOrganizationDevices
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: configurationUpdatedAfter
        in: query
        description: Filter results by whether or not the device's configuration has been updated after the given timestamp
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "serial": "Q234-ABCD-5678",

                      "model": "MR34",

                      "mac": "00:11:22:33:44:55",

                      "lanIp": "1.2.3.4",

                      "firmware": "wireless-25-14"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My AP",

                    "lat": 37.4180951010362,

                    "lng": -122.098531723022,

                    "address": "1600 Pennsylvania Ave",

                    "notes": "My AP's note",

                    "tags": " recently-added ",

                    "networkId": "N_24329156",

                    "serial": "Q234-ABCD-5678",

                    "model": "MR34",

                    "mac": "00:11:22:33:44:55",

                    "lanIp": "1.2.3.4",

                    "firmware": "wireless-25-14"

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/{serial}/remove:
    post:
      tags:
      - Devices
      summary: removeNetworkDevice
      description: Remove a single device
      operationId: removeNetworkDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/events:
    get:
      tags:
      - Events
      summary: getNetworkEvents
      description: List the events for the network
      operationId: getNetworkEvents
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: productType
        in: query
        description: The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
        style: form
        explode: true
        schema:
          type: string
      - name: includedEventTypes
        in: query
        description: A list of event types. The returned events will be filtered to only include events with these types.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: excludedEventTypes
        in: query
        description: A list of event types. The returned events will be filtered to exclude events with these types.
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: deviceMac
        in: query
        description: The MAC address of the Meraki device which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: deviceSerial
        in: query
        description: The serial of the Meraki device which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: deviceName
        in: query
        description: The name of the Meraki device which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: clientIp
        in: query
        description: The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
        style: form
        explode: true
        schema:
          type: string
      - name: clientMac
        in: query
        description: The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
        style: form
        explode: true
        schema:
          type: string
      - name: clientName
        in: query
        description: The name, or partial name, of the client which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: smDeviceMac
        in: query
        description: The MAC address of the Systems Manager device which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: smDeviceName
        in: query
        description: The name of the Systems Manager device which the list of events will be filtered with
        style: form
        explode: true
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "message": null,

                    "pageStartAt": "2018-02-11T00:00:00.090210Z",

                    "pageEndAt": "2018-02-11T00:00:00.090210Z",

                    "events": [

                      {

                        "occurredAt": "2018-02-11T00:00:00.090210Z",

                        "networkId": "N_24329156",

                        "type": "association",

                        "description": "802.11 association",

                        "clientId": "k74272e",

                        "clientDescription": "Miles's phone",

                        "deviceSerial": "Q234-ABCD-5678",

                        "deviceName": "My AP",

                        "ssidNumber": 1,

                        "ssidName": "My SSID",

                        "eventData": {

                          "radio": "1",

                          "vap": "1",

                          "client_mac": "22:33:44:55:66:77",

                          "client_ip": "1.2.3.4",

                          "channel": "36",

                          "rssi": "12",

                          "aid": "2104009183"

                        }

                      }

                    ]

                  }
              example: >-
                {

                  "message": null,

                  "pageStartAt": "2018-02-11T00:00:00.090210Z",

                  "pageEndAt": "2018-02-11T00:00:00.090210Z",

                  "events": [

                    {

                      "occurredAt": "2018-02-11T00:00:00.090210Z",

                      "networkId": "N_24329156",

                      "type": "association",

                      "description": "802.11 association",

                      "clientId": "k74272e",

                      "clientDescription": "Miles's phone",

                      "deviceSerial": "Q234-ABCD-5678",

                      "deviceName": "My AP",

                      "ssidNumber": 1,

                      "ssidName": "My SSID",

                      "eventData": {

                        "radio": "1",

                        "vap": "1",

                        "client_mac": "22:33:44:55:66:77",

                        "client_ip": "1.2.3.4",

                        "channel": "36",

                        "rssi": "12",

                        "aid": "2104009183"

                      }

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/events/eventTypes:
    get:
      tags:
      - Events
      summary: getNetworkEventsEventTypes
      description: List the event type to human-readable description
      operationId: getNetworkEventsEventTypes
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "category": "802.11",

                      "type": "association",

                      "description": "802.11 association"

                    }

                  ]
              example: >-
                [

                  {

                    "category": "802.11",

                    "type": "association",

                    "description": "802.11 association"

                  }

                ]
      deprecated: false
  /networks/{networkId}/firewalledServices/{service}:
    get:
      tags:
      - Firewalled services
      summary: getNetworkFirewalledService
      description: Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')
      operationId: getNetworkFirewalledService
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: service
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "service": "web",

                    "access": "restricted",

                    "allowedIps": [

                      "123.123.123.1"

                    ]

                  }
              example: >-
                {

                  "service": "web",

                  "access": "restricted",

                  "allowedIps": [

                    "123.123.123.1"

                  ]

                }
      deprecated: false
    put:
      tags:
      - Firewalled services
      summary: updateNetworkFirewalledService
      description: Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')
      operationId: updateNetworkFirewalledService
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: service
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkFirewalledService'
            example:
              access: restricted
              allowedIps:
              - 123.123.123.1
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "service": "web",

                    "access": "restricted",

                    "allowedIps": [

                      "123.123.123.1"

                    ]

                  }
              example: >-
                {

                  "service": "web",

                  "access": "restricted",

                  "allowedIps": [

                    "123.123.123.1"

                  ]

                }
      deprecated: false
  /networks/{networkId}/firewalledServices:
    get:
      tags:
      - Firewalled services
      summary: getNetworkFirewalledServices
      description: List the appliance services and their accessibility rules
      operationId: getNetworkFirewalledServices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "service": "web",

                      "access": "restricted",

                      "allowedIps": [

                        "123.123.123.1"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "service": "web",

                    "access": "restricted",

                    "allowedIps": [

                      "123.123.123.1"

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/floorPlans:
    post:
      tags:
      - Floorplans
      summary: createNetworkFloorPlan
      description: Upload a floor plan
      operationId: createNetworkFloorPlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkFloorPlan'
            example: {}
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }
              example: >-
                {

                  "floorPlanId": "g_1234567",

                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                  "imageExtension": "png",

                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                  "name": "HQ Floor Plan",

                  "devices": [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ],

                  "width": 100,

                  "height": 150,

                  "center": {

                    "lat": 37.770040510499996,

                    "lng": -122.38714009525

                  },

                  "bottomLeftCorner": {

                    "lat": 37.7696461495,

                    "lng": -122.3880815506

                  },

                  "bottomRightCorner": {

                    "lat": 37.771524649766654,

                    "lng": -122.38795275055205

                  },

                  "topLeftCorner": {

                    "lat": 37.769700101836364,

                    "lng": -122.3888684251381

                  },

                  "topRightCorner": {

                    "lat": 37.77157860210302,

                    "lng": -122.38873962509013

                  }

                }
      deprecated: false
    get:
      tags:
      - Floorplans
      summary: getNetworkFloorPlans
      description: List the floor plans that belong to your network
      operationId: getNetworkFloorPlans
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "floorPlanId": "g_1234567",

                      "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                      "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                      "imageExtension": "png",

                      "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                      "name": "HQ Floor Plan",

                      "devices": [

                        {

                          "name": "My AP",

                          "lat": 37.4180951010362,

                          "lng": -122.098531723022,

                          "serial": "Q234-ABCD-5678",

                          "mac": "00:11:22:33:44:55",

                          "model": "MR34",

                          "address": "1600 Pennsylvania Ave",

                          "notes": "My AP's note",

                          "lanIp": "1.2.3.4",

                          "tags": " recently-added ",

                          "networkId": "N_24329156",

                          "beaconIdParams": {

                            "uuid": "00000000-0000-0000-0000-000000000000",

                            "major": 5,

                            "minor": 3

                          },

                          "firmware": "wireless-25-14",

                          "floorPlanId": "g_1234567"

                        }

                      ],

                      "width": 100,

                      "height": 150,

                      "center": {

                        "lat": 37.770040510499996,

                        "lng": -122.38714009525

                      },

                      "bottomLeftCorner": {

                        "lat": 37.7696461495,

                        "lng": -122.3880815506

                      },

                      "bottomRightCorner": {

                        "lat": 37.771524649766654,

                        "lng": -122.38795275055205

                      },

                      "topLeftCorner": {

                        "lat": 37.769700101836364,

                        "lng": -122.3888684251381

                      },

                      "topRightCorner": {

                        "lat": 37.77157860210302,

                        "lng": -122.38873962509013

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/floorPlans/{floorPlanId}:
    get:
      tags:
      - Floorplans
      summary: getNetworkFloorPlan
      description: Find a floor plan by ID
      operationId: getNetworkFloorPlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: floorPlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }
              example: >-
                {

                  "floorPlanId": "g_1234567",

                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                  "imageExtension": "png",

                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                  "name": "HQ Floor Plan",

                  "devices": [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ],

                  "width": 100,

                  "height": 150,

                  "center": {

                    "lat": 37.770040510499996,

                    "lng": -122.38714009525

                  },

                  "bottomLeftCorner": {

                    "lat": 37.7696461495,

                    "lng": -122.3880815506

                  },

                  "bottomRightCorner": {

                    "lat": 37.771524649766654,

                    "lng": -122.38795275055205

                  },

                  "topLeftCorner": {

                    "lat": 37.769700101836364,

                    "lng": -122.3888684251381

                  },

                  "topRightCorner": {

                    "lat": 37.77157860210302,

                    "lng": -122.38873962509013

                  }

                }
      deprecated: false
    delete:
      tags:
      - Floorplans
      summary: deleteNetworkFloorPlan
      description: Destroy a floor plan
      operationId: deleteNetworkFloorPlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: floorPlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Floorplans
      summary: updateNetworkFloorPlan
      description: Update a floor plan's geolocation and other meta data
      operationId: updateNetworkFloorPlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: floorPlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkFloorPlan'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "floorPlanId": "g_1234567",

                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                    "imageExtension": "png",

                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                    "name": "HQ Floor Plan",

                    "devices": [

                      {

                        "name": "My AP",

                        "lat": 37.4180951010362,

                        "lng": -122.098531723022,

                        "serial": "Q234-ABCD-5678",

                        "mac": "00:11:22:33:44:55",

                        "model": "MR34",

                        "address": "1600 Pennsylvania Ave",

                        "notes": "My AP's note",

                        "lanIp": "1.2.3.4",

                        "tags": " recently-added ",

                        "networkId": "N_24329156",

                        "beaconIdParams": {

                          "uuid": "00000000-0000-0000-0000-000000000000",

                          "major": 5,

                          "minor": 3

                        },

                        "firmware": "wireless-25-14",

                        "floorPlanId": "g_1234567"

                      }

                    ],

                    "width": 100,

                    "height": 150,

                    "center": {

                      "lat": 37.770040510499996,

                      "lng": -122.38714009525

                    },

                    "bottomLeftCorner": {

                      "lat": 37.7696461495,

                      "lng": -122.3880815506

                    },

                    "bottomRightCorner": {

                      "lat": 37.771524649766654,

                      "lng": -122.38795275055205

                    },

                    "topLeftCorner": {

                      "lat": 37.769700101836364,

                      "lng": -122.3888684251381

                    },

                    "topRightCorner": {

                      "lat": 37.77157860210302,

                      "lng": -122.38873962509013

                    }

                  }
              example: >-
                {

                  "floorPlanId": "g_1234567",

                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",

                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",

                  "imageExtension": "png",

                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",

                  "name": "HQ Floor Plan",

                  "devices": [

                    {

                      "name": "My AP",

                      "lat": 37.4180951010362,

                      "lng": -122.098531723022,

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "model": "MR34",

                      "address": "1600 Pennsylvania Ave",

                      "notes": "My AP's note",

                      "lanIp": "1.2.3.4",

                      "tags": " recently-added ",

                      "networkId": "N_24329156",

                      "beaconIdParams": {

                        "uuid": "00000000-0000-0000-0000-000000000000",

                        "major": 5,

                        "minor": 3

                      },

                      "firmware": "wireless-25-14",

                      "floorPlanId": "g_1234567"

                    }

                  ],

                  "width": 100,

                  "height": 150,

                  "center": {

                    "lat": 37.770040510499996,

                    "lng": -122.38714009525

                  },

                  "bottomLeftCorner": {

                    "lat": 37.7696461495,

                    "lng": -122.3880815506

                  },

                  "bottomRightCorner": {

                    "lat": 37.771524649766654,

                    "lng": -122.38795275055205

                  },

                  "topLeftCorner": {

                    "lat": 37.769700101836364,

                    "lng": -122.3888684251381

                  },

                  "topRightCorner": {

                    "lat": 37.77157860210302,

                    "lng": -122.38873962509013

                  }

                }
      deprecated: false
  /networks/{networkId}/groupPolicies:
    get:
      tags:
      - Group policies
      summary: getNetworkGroupPolicies
      description: List the group policies in a network
      operationId: getNetworkGroupPolicies
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "No video streaming",

                      "groupPolicyId": "101",

                      "scheduling": {

                        "enabled": true,

                        "monday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "tuesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "wednesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "thursday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "friday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "saturday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        },

                        "sunday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        }

                      },

                      "bandwidth": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "firewallAndTrafficShaping": {

                        "settings": "custom",

                        "trafficShapingRules": [

                          {

                            "definitions": [

                              {

                                "type": "host",

                                "value": "google.com"

                              },

                              {

                                "type": "port",

                                "value": "9090"

                              },

                              {

                                "type": "ipRange",

                                "value": "192.1.0.0"

                              },

                              {

                                "type": "ipRange",

                                "value": "192.1.0.0/16"

                              },

                              {

                                "type": "ipRange",

                                "value": "10.1.0.0/16:80"

                              },

                              {

                                "type": "localNet",

                                "value": "192.168.0.0/16"

                              },

                              {

                                "type": "applicationCategory",

                                "value": {

                                  "id": "meraki:layer7/category/2",

                                  "name": "Blogging"

                                }

                              },

                              {

                                "type": "application",

                                "value": {

                                  "id": "meraki:layer7/application/133",

                                  "name": "Battle.net"

                                }

                              }

                            ],

                            "perClientBandwidthLimits": {

                              "settings": "custom",

                              "bandwidthLimits": {

                                "limitUp": 1000000,

                                "limitDown": 1000000

                              }

                            },

                            "dscpTagValue": null,

                            "pcpTagValue": null

                          }

                        ],

                        "l3FirewallRules": [

                          {

                            "comment": "Allow TCP traffic to subnet with HTTP servers.",

                            "policy": "allow",

                            "protocol": "tcp",

                            "destPort": 443,

                            "destCidr": "192.168.1.0/24"

                          }

                        ],

                        "l7FirewallRules": [

                          [

                            {

                              "policy": "deny",

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/67",

                                "name": "Xbox LIVE"

                              }

                            },

                            {

                              "policy": "deny",

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "policy": "deny",

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "policy": "deny",

                              "type": "port",

                              "value": "23"

                            },

                            {

                              "policy": "deny",

                              "type": "ipRange",

                              "value": "10.11.12.00/24"

                            },

                            {

                              "policy": "deny",

                              "type": "ipRange",

                              "value": "10.11.12.00/24:5555"

                            },

                            {

                              "policy": "deny",

                              "type": "blacklistedCountries",

                              "value": [

                                "AX",

                                "CA"

                              ]

                            },

                            {

                              "policy": "deny",

                              "type": "whitelistedCountries",

                              "value": [

                                "US"

                              ]

                            }

                          ]

                        ]

                      },

                      "contentFiltering": {

                        "allowedUrlPatterns": {

                          "settings": "network default",

                          "patterns": []

                        },

                        "blockedUrlPatterns": {

                          "settings": "append",

                          "patterns": [

                            "http://www.example.com",

                            "http://www.betting.com"

                          ]

                        },

                        "blockedUrlCategories": {

                          "settings": "override",

                          "categories": [

                            "meraki:contentFiltering/category/1",

                            "meraki:contentFiltering/category/7"

                          ]

                        }

                      },

                      "splashAuthSettings": "bypass",

                      "vlanTagging": {

                        "settings": "custom",

                        "vlanId": "1"

                      },

                      "bonjourForwarding": {

                        "settings": "custom",

                        "rules": [

                          {

                            "description": "A simple bonjour rule",

                            "vlanId": "1",

                            "services": [

                              "All Services"

                            ]

                          }

                        ]

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }

                ]
      deprecated: false
    post:
      tags:
      - Group policies
      summary: createNetworkGroupPolicy
      description: Create a group policy
      operationId: createNetworkGroupPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkGroupPolicy'
            example:
              name: No video streaming
              scheduling:
                enabled: true
                monday:
                  active: true
                  from: 9:00
                  to: 17:00
                tuesday:
                  active: true
                  from: 9:00
                  to: 17:00
                wednesday:
                  active: true
                  from: 9:00
                  to: 17:00
                thursday:
                  active: true
                  from: 9:00
                  to: 17:00
                friday:
                  active: true
                  from: 9:00
                  to: 17:00
                saturday:
                  active: false
                  from: 0:00
                  to: 24:00
                sunday:
                  active: false
                  from: 0:00
                  to: 24:00
              bandwidth:
                settings: custom
                bandwidthLimits:
                  limitUp: 1000000
                  limitDown: 1000000
              firewallAndTrafficShaping:
                settings: custom
                trafficShapingRules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: 9090
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  - type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - type: application
                    value:
                      id: meraki:layer7/application/133
                      name: Battle.net
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 
                  pcpTagValue: 
                l3FirewallRules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: 443
                  destCidr: 192.168.1.0/24
                l7FirewallRules:
                - - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: 23
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                  - policy: deny
                    type: blacklistedCountries
                    value:
                    - AX
                    - CA
                  - policy: deny
                    type: whitelistedCountries
                    value:
                    - US
              contentFiltering:
                allowedUrlPatterns:
                  settings: network default
                  patterns: []
                blockedUrlPatterns:
                  settings: append
                  patterns:
                  - http://www.example.com
                  - http://www.betting.com
                blockedUrlCategories:
                  settings: override
                  categories:
                  - meraki:contentFiltering/category/1
                  - meraki:contentFiltering/category/7
              splashAuthSettings: bypass
              vlanTagging:
                settings: custom
                vlanId: 1
              bonjourForwarding:
                settings: custom
                rules:
                - description: A simple bonjour rule
                  vlanId: 1
                  services:
                  - All Services
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }
              example: >-
                {

                  "name": "No video streaming",

                  "groupPolicyId": "101",

                  "scheduling": {

                    "enabled": true,

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  },

                  "bandwidth": {

                    "settings": "custom",

                    "bandwidthLimits": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    }

                  },

                  "firewallAndTrafficShaping": {

                    "settings": "custom",

                    "trafficShapingRules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ],

                    "l3FirewallRules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24"

                      }

                    ],

                    "l7FirewallRules": [

                      [

                        {

                          "policy": "deny",

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/67",

                            "name": "Xbox LIVE"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "policy": "deny",

                          "type": "port",

                          "value": "23"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24:5555"

                        },

                        {

                          "policy": "deny",

                          "type": "blacklistedCountries",

                          "value": [

                            "AX",

                            "CA"

                          ]

                        },

                        {

                          "policy": "deny",

                          "type": "whitelistedCountries",

                          "value": [

                            "US"

                          ]

                        }

                      ]

                    ]

                  },

                  "contentFiltering": {

                    "allowedUrlPatterns": {

                      "settings": "network default",

                      "patterns": []

                    },

                    "blockedUrlPatterns": {

                      "settings": "append",

                      "patterns": [

                        "http://www.example.com",

                        "http://www.betting.com"

                      ]

                    },

                    "blockedUrlCategories": {

                      "settings": "override",

                      "categories": [

                        "meraki:contentFiltering/category/1",

                        "meraki:contentFiltering/category/7"

                      ]

                    }

                  },

                  "splashAuthSettings": "bypass",

                  "vlanTagging": {

                    "settings": "custom",

                    "vlanId": "1"

                  },

                  "bonjourForwarding": {

                    "settings": "custom",

                    "rules": [

                      {

                        "description": "A simple bonjour rule",

                        "vlanId": "1",

                        "services": [

                          "All Services"

                        ]

                      }

                    ]

                  }

                }
      deprecated: false
  /networks/{networkId}/groupPolicies/{groupPolicyId}:
    put:
      tags:
      - Group policies
      summary: updateNetworkGroupPolicy
      description: Update a group policy
      operationId: updateNetworkGroupPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: groupPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkGroupPolicy'
            example:
              name: No video streaming
              scheduling:
                enabled: true
                monday:
                  active: true
                  from: 9:00
                  to: 17:00
                tuesday:
                  active: true
                  from: 9:00
                  to: 17:00
                wednesday:
                  active: true
                  from: 9:00
                  to: 17:00
                thursday:
                  active: true
                  from: 9:00
                  to: 17:00
                friday:
                  active: true
                  from: 9:00
                  to: 17:00
                saturday:
                  active: false
                  from: 0:00
                  to: 24:00
                sunday:
                  active: false
                  from: 0:00
                  to: 24:00
              bandwidth:
                settings: custom
                bandwidthLimits:
                  limitUp: 1000000
                  limitDown: 1000000
              firewallAndTrafficShaping:
                settings: custom
                trafficShapingRules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: 9090
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  - type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - type: application
                    value:
                      id: meraki:layer7/application/133
                      name: Battle.net
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 
                  pcpTagValue: 
                l3FirewallRules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: 443
                  destCidr: 192.168.1.0/24
                l7FirewallRules:
                - - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: 23
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                  - policy: deny
                    type: blacklistedCountries
                    value:
                    - AX
                    - CA
                  - policy: deny
                    type: whitelistedCountries
                    value:
                    - US
              contentFiltering:
                allowedUrlPatterns:
                  settings: network default
                  patterns: []
                blockedUrlPatterns:
                  settings: append
                  patterns:
                  - http://www.example.com
                  - http://www.betting.com
                blockedUrlCategories:
                  settings: override
                  categories:
                  - meraki:contentFiltering/category/1
                  - meraki:contentFiltering/category/7
              splashAuthSettings: bypass
              vlanTagging:
                settings: custom
                vlanId: 1
              bonjourForwarding:
                settings: custom
                rules:
                - description: A simple bonjour rule
                  vlanId: 1
                  services:
                  - All Services
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }
              example: >-
                {

                  "name": "No video streaming",

                  "groupPolicyId": "101",

                  "scheduling": {

                    "enabled": true,

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  },

                  "bandwidth": {

                    "settings": "custom",

                    "bandwidthLimits": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    }

                  },

                  "firewallAndTrafficShaping": {

                    "settings": "custom",

                    "trafficShapingRules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ],

                    "l3FirewallRules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24"

                      }

                    ],

                    "l7FirewallRules": [

                      [

                        {

                          "policy": "deny",

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/67",

                            "name": "Xbox LIVE"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "policy": "deny",

                          "type": "port",

                          "value": "23"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24:5555"

                        },

                        {

                          "policy": "deny",

                          "type": "blacklistedCountries",

                          "value": [

                            "AX",

                            "CA"

                          ]

                        },

                        {

                          "policy": "deny",

                          "type": "whitelistedCountries",

                          "value": [

                            "US"

                          ]

                        }

                      ]

                    ]

                  },

                  "contentFiltering": {

                    "allowedUrlPatterns": {

                      "settings": "network default",

                      "patterns": []

                    },

                    "blockedUrlPatterns": {

                      "settings": "append",

                      "patterns": [

                        "http://www.example.com",

                        "http://www.betting.com"

                      ]

                    },

                    "blockedUrlCategories": {

                      "settings": "override",

                      "categories": [

                        "meraki:contentFiltering/category/1",

                        "meraki:contentFiltering/category/7"

                      ]

                    }

                  },

                  "splashAuthSettings": "bypass",

                  "vlanTagging": {

                    "settings": "custom",

                    "vlanId": "1"

                  },

                  "bonjourForwarding": {

                    "settings": "custom",

                    "rules": [

                      {

                        "description": "A simple bonjour rule",

                        "vlanId": "1",

                        "services": [

                          "All Services"

                        ]

                      }

                    ]

                  }

                }
      deprecated: false
    delete:
      tags:
      - Group policies
      summary: deleteNetworkGroupPolicy
      description: Delete a group policy
      operationId: deleteNetworkGroupPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: groupPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    get:
      tags:
      - Group policies
      summary: getNetworkGroupPolicy
      description: Display a group policy
      operationId: getNetworkGroupPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: groupPolicyId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "No video streaming",

                    "groupPolicyId": "101",

                    "scheduling": {

                      "enabled": true,

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    },

                    "bandwidth": {

                      "settings": "custom",

                      "bandwidthLimits": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      }

                    },

                    "firewallAndTrafficShaping": {

                      "settings": "custom",

                      "trafficShapingRules": [

                        {

                          "definitions": [

                            {

                              "type": "host",

                              "value": "google.com"

                            },

                            {

                              "type": "port",

                              "value": "9090"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0"

                            },

                            {

                              "type": "ipRange",

                              "value": "192.1.0.0/16"

                            },

                            {

                              "type": "ipRange",

                              "value": "10.1.0.0/16:80"

                            },

                            {

                              "type": "localNet",

                              "value": "192.168.0.0/16"

                            },

                            {

                              "type": "applicationCategory",

                              "value": {

                                "id": "meraki:layer7/category/2",

                                "name": "Blogging"

                              }

                            },

                            {

                              "type": "application",

                              "value": {

                                "id": "meraki:layer7/application/133",

                                "name": "Battle.net"

                              }

                            }

                          ],

                          "perClientBandwidthLimits": {

                            "settings": "custom",

                            "bandwidthLimits": {

                              "limitUp": 1000000,

                              "limitDown": 1000000

                            }

                          },

                          "dscpTagValue": null,

                          "pcpTagValue": null

                        }

                      ],

                      "l3FirewallRules": [

                        {

                          "comment": "Allow TCP traffic to subnet with HTTP servers.",

                          "policy": "allow",

                          "protocol": "tcp",

                          "destPort": 443,

                          "destCidr": "192.168.1.0/24"

                        }

                      ],

                      "l7FirewallRules": [

                        [

                          {

                            "policy": "deny",

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/67",

                              "name": "Xbox LIVE"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "policy": "deny",

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "policy": "deny",

                            "type": "port",

                            "value": "23"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24"

                          },

                          {

                            "policy": "deny",

                            "type": "ipRange",

                            "value": "10.11.12.00/24:5555"

                          },

                          {

                            "policy": "deny",

                            "type": "blacklistedCountries",

                            "value": [

                              "AX",

                              "CA"

                            ]

                          },

                          {

                            "policy": "deny",

                            "type": "whitelistedCountries",

                            "value": [

                              "US"

                            ]

                          }

                        ]

                      ]

                    },

                    "contentFiltering": {

                      "allowedUrlPatterns": {

                        "settings": "network default",

                        "patterns": []

                      },

                      "blockedUrlPatterns": {

                        "settings": "append",

                        "patterns": [

                          "http://www.example.com",

                          "http://www.betting.com"

                        ]

                      },

                      "blockedUrlCategories": {

                        "settings": "override",

                        "categories": [

                          "meraki:contentFiltering/category/1",

                          "meraki:contentFiltering/category/7"

                        ]

                      }

                    },

                    "splashAuthSettings": "bypass",

                    "vlanTagging": {

                      "settings": "custom",

                      "vlanId": "1"

                    },

                    "bonjourForwarding": {

                      "settings": "custom",

                      "rules": [

                        {

                          "description": "A simple bonjour rule",

                          "vlanId": "1",

                          "services": [

                            "All Services"

                          ]

                        }

                      ]

                    }

                  }
              example: >-
                {

                  "name": "No video streaming",

                  "groupPolicyId": "101",

                  "scheduling": {

                    "enabled": true,

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  },

                  "bandwidth": {

                    "settings": "custom",

                    "bandwidthLimits": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    }

                  },

                  "firewallAndTrafficShaping": {

                    "settings": "custom",

                    "trafficShapingRules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ],

                    "l3FirewallRules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24"

                      }

                    ],

                    "l7FirewallRules": [

                      [

                        {

                          "policy": "deny",

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/67",

                            "name": "Xbox LIVE"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "policy": "deny",

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "policy": "deny",

                          "type": "port",

                          "value": "23"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24"

                        },

                        {

                          "policy": "deny",

                          "type": "ipRange",

                          "value": "10.11.12.00/24:5555"

                        },

                        {

                          "policy": "deny",

                          "type": "blacklistedCountries",

                          "value": [

                            "AX",

                            "CA"

                          ]

                        },

                        {

                          "policy": "deny",

                          "type": "whitelistedCountries",

                          "value": [

                            "US"

                          ]

                        }

                      ]

                    ]

                  },

                  "contentFiltering": {

                    "allowedUrlPatterns": {

                      "settings": "network default",

                      "patterns": []

                    },

                    "blockedUrlPatterns": {

                      "settings": "append",

                      "patterns": [

                        "http://www.example.com",

                        "http://www.betting.com"

                      ]

                    },

                    "blockedUrlCategories": {

                      "settings": "override",

                      "categories": [

                        "meraki:contentFiltering/category/1",

                        "meraki:contentFiltering/category/7"

                      ]

                    }

                  },

                  "splashAuthSettings": "bypass",

                  "vlanTagging": {

                    "settings": "custom",

                    "vlanId": "1"

                  },

                  "bonjourForwarding": {

                    "settings": "custom",

                    "rules": [

                      {

                        "description": "A simple bonjour rule",

                        "vlanId": "1",

                        "services": [

                          "All Services"

                        ]

                      }

                    ]

                  }

                }
      deprecated: false
  /networks/{networkId}/httpServers:
    post:
      tags:
      - HTTP servers
      summary: createNetworkHttpServer
      description: Add an HTTP server to a network
      operationId: createNetworkHttpServer
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkHttpServer'
            example:
              name: My HTTP server
              url: https://www.example.com/webhooks
              sharedSecret: foobar
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }
              example: >-
                {

                  "id": "ABC123",

                  "networkId": "N_123",

                  "name": "My HTTP server",

                  "url": "https://www.example.com/webhooks",

                  "sharedSecret": "foobar"

                }
      deprecated: false
    get:
      tags:
      - HTTP servers
      summary: getNetworkHttpServers
      description: List the HTTP servers for a network
      operationId: getNetworkHttpServers
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "ABC123",

                      "networkId": "N_123",

                      "name": "My HTTP server",

                      "url": "https://www.example.com/webhooks",

                      "sharedSecret": "foobar"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }

                ]
      deprecated: false
  /networks/{networkId}/httpServers/{id}:
    delete:
      tags:
      - HTTP servers
      summary: deleteNetworkHttpServer
      description: Delete an HTTP server from a network
      operationId: deleteNetworkHttpServer
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - HTTP servers
      summary: updateNetworkHttpServer
      description: Update an HTTP server
      operationId: updateNetworkHttpServer
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkHttpServer'
            example:
              name: My HTTP server
              url: https://www.example.com/webhooks
              sharedSecret: foobar
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }
              example: >-
                {

                  "id": "ABC123",

                  "networkId": "N_123",

                  "name": "My HTTP server",

                  "url": "https://www.example.com/webhooks",

                  "sharedSecret": "foobar"

                }
      deprecated: false
    get:
      tags:
      - HTTP servers
      summary: getNetworkHttpServer
      description: Return an HTTP server for a network
      operationId: getNetworkHttpServer
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "ABC123",

                    "networkId": "N_123",

                    "name": "My HTTP server",

                    "url": "https://www.example.com/webhooks",

                    "sharedSecret": "foobar"

                  }
              example: >-
                {

                  "id": "ABC123",

                  "networkId": "N_123",

                  "name": "My HTTP server",

                  "url": "https://www.example.com/webhooks",

                  "sharedSecret": "foobar"

                }
      deprecated: false
  /networks/{networkId}/httpServers/webhookTests/{id}:
    get:
      tags:
      - HTTP servers
      summary: getNetworkHttpServersWebhookTest
      description: Return the status of a webhook test for a network
      operationId: getNetworkHttpServersWebhookTest
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "url": "https://www.example.com/path",

                    "status": "delivered"

                  }
              example: >-
                {

                  "id": "1234",

                  "url": "https://www.example.com/path",

                  "status": "delivered"

                }
      deprecated: false
  /networks/{networkId}/httpServers/webhookTests:
    post:
      tags:
      - HTTP servers
      summary: createNetworkHttpServersWebhookTest
      description: Send a test webhook for a network
      operationId: createNetworkHttpServersWebhookTest
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkHttpServersWebhookTest'
            example:
              url: https://www.example.com/path
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "url": "https://www.example.com/path",

                    "status": "enqueued"

                  }
              example: >-
                {

                  "id": "1234",

                  "url": "https://www.example.com/path",

                  "status": "enqueued"

                }
      deprecated: false
  /networks/{networkId}/security/intrusionSettings:
    get:
      tags:
      - Intrusion settings
      summary: getNetworkSecurityIntrusionSettings
      description: Returns all supported intrusion settings for an MX network
      operationId: getNetworkSecurityIntrusionSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "prevention",

                    "idsRulesets": "balanced",

                    "protectedNetworks": {

                      "useDefault": false,

                      "includedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8",

                        "169.254.0.0/16",

                        "172.16.0.0/12"

                      ],

                      "excludedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8"

                      ]

                    }

                  }
              example: >-
                {

                  "mode": "prevention",

                  "idsRulesets": "balanced",

                  "protectedNetworks": {

                    "useDefault": false,

                    "includedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8",

                      "169.254.0.0/16",

                      "172.16.0.0/12"

                    ],

                    "excludedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8"

                    ]

                  }

                }
      deprecated: false
    put:
      tags:
      - Intrusion settings
      summary: updateNetworkSecurityIntrusionSettings
      description: Set the supported intrusion settings for an MX network
      operationId: updateNetworkSecurityIntrusionSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSecurityIntrusionSettings'
            example:
              mode: prevention
              idsRulesets: balanced
              protectedNetworks:
                useDefault: false
                includedCidr:
                - 10.0.0.0/8
                - 127.0.0.0/8
                - 169.254.0.0/16
                - 172.16.0.0/12
                excludedCidr:
                - 10.0.0.0/8
                - 127.0.0.0/8
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "prevention",

                    "idsRulesets": "balanced",

                    "protectedNetworks": {

                      "useDefault": false,

                      "includedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8",

                        "169.254.0.0/16",

                        "172.16.0.0/12"

                      ],

                      "excludedCidr": [

                        "10.0.0.0/8",

                        "127.0.0.0/8"

                      ]

                    }

                  }
              example: >-
                {

                  "mode": "prevention",

                  "idsRulesets": "balanced",

                  "protectedNetworks": {

                    "useDefault": false,

                    "includedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8",

                      "169.254.0.0/16",

                      "172.16.0.0/12"

                    ],

                    "excludedCidr": [

                      "10.0.0.0/8",

                      "127.0.0.0/8"

                    ]

                  }

                }
      deprecated: false
  /organizations/{organizationId}/security/intrusionSettings:
    get:
      tags:
      - Intrusion settings
      summary: getOrganizationSecurityIntrusionSettings
      description: Returns all supported intrusion settings for an organization
      operationId: getOrganizationSecurityIntrusionSettings
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "whitelistedRules": [

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                        "message": "SQL sa login failed"

                      },

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                      }

                    ]

                  }
              example: >-
                {

                  "whitelistedRules": [

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                      "message": "SQL sa login failed"

                    },

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Intrusion settings
      summary: updateOrganizationSecurityIntrusionSettings
      description: Sets supported intrusion settings for an organization
      operationId: updateOrganizationSecurityIntrusionSettings
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationSecurityIntrusionSettings'
            example:
              whitelistedRules:
              - ruleId: meraki:intrusion/snort/GID/01/SID/688
                message: SQL sa login failed
              - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "whitelistedRules": [

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                        "message": "SQL sa login failed"

                      },

                      {

                        "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                        "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                      }

                    ]

                  }
              example: >-
                {

                  "whitelistedRules": [

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",

                      "message": "SQL sa login failed"

                    },

                    {

                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",

                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/licenses/moveSeats:
    post:
      tags:
      - Licenses
      summary: moveOrganizationLicensesSeats
      description: Move SM seats to another organization
      operationId: moveOrganizationLicensesSeats
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveOrganizationLicensesSeats'
            example:
              destOrganizationId: 2930418
              licenseId: 1234
              seatCount: 20
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destOrganizationId": "2930418",

                    "licenseId": "1234",

                    "seatCount": 20

                  }
              example: >-
                {

                  "destOrganizationId": "2930418",

                  "licenseId": "1234",

                  "seatCount": 20

                }
      deprecated: false
  /organizations/{organizationId}/licenses/{licenseId}:
    get:
      tags:
      - Licenses
      summary: getOrganizationLicense
      description: Display a license
      operationId: getOrganizationLicense
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: licenseId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "licenseType": "MX64-ENT",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "deviceSerial": "Q234-ABCD-5678",

                    "networkId": "N_24329156",

                    "state": "active",

                    "seatCount": null,

                    "totalDurationInDays": 425,

                    "durationInDays": 365,

                    "permanentlyQueuedLicenses": [

                      {

                        "id": "5678",

                        "licenseType": "MX64-ENT",

                        "licenseKey": "Z21234567890",

                        "orderNumber": "4C1234567",

                        "durationInDays": 60

                      }

                    ],

                    "claimDate": "2019-08-29T12:40:10Z",

                    "activationDate": "2019-09-01T15:01:46Z",

                    "expirationDate": "2020-10-30T15:01:46Z"

                  }
              example: >-
                {

                  "id": "1234",

                  "licenseType": "MX64-ENT",

                  "licenseKey": "Z21234567890",

                  "orderNumber": "4C1234567",

                  "deviceSerial": "Q234-ABCD-5678",

                  "networkId": "N_24329156",

                  "state": "active",

                  "seatCount": null,

                  "totalDurationInDays": 425,

                  "durationInDays": 365,

                  "permanentlyQueuedLicenses": [

                    {

                      "id": "5678",

                      "licenseType": "MX64-ENT",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "durationInDays": 60

                    }

                  ],

                  "claimDate": "2019-08-29T12:40:10Z",

                  "activationDate": "2019-09-01T15:01:46Z",

                  "expirationDate": "2020-10-30T15:01:46Z"

                }
      deprecated: false
    put:
      tags:
      - Licenses
      summary: updateOrganizationLicense
      description: Update a license
      operationId: updateOrganizationLicense
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: licenseId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationLicense'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "licenseType": "MX64-ENT",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "deviceSerial": "Q234-ABCD-5678",

                    "networkId": "N_24329156",

                    "state": "active",

                    "seatCount": null,

                    "totalDurationInDays": 425,

                    "durationInDays": 365,

                    "permanentlyQueuedLicenses": [

                      {

                        "id": "5678",

                        "licenseType": "MX64-ENT",

                        "licenseKey": "Z21234567890",

                        "orderNumber": "4C1234567",

                        "durationInDays": 60

                      }

                    ],

                    "claimDate": "2019-08-29T12:40:10Z",

                    "activationDate": "2019-09-01T15:01:46Z",

                    "expirationDate": "2020-10-30T15:01:46Z"

                  }
              example: >-
                {

                  "id": "1234",

                  "licenseType": "MX64-ENT",

                  "licenseKey": "Z21234567890",

                  "orderNumber": "4C1234567",

                  "deviceSerial": "Q234-ABCD-5678",

                  "networkId": "N_24329156",

                  "state": "active",

                  "seatCount": null,

                  "totalDurationInDays": 425,

                  "durationInDays": 365,

                  "permanentlyQueuedLicenses": [

                    {

                      "id": "5678",

                      "licenseType": "MX64-ENT",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "durationInDays": 60

                    }

                  ],

                  "claimDate": "2019-08-29T12:40:10Z",

                  "activationDate": "2019-09-01T15:01:46Z",

                  "expirationDate": "2020-10-30T15:01:46Z"

                }
      deprecated: false
  /organizations/{organizationId}/licenses/renewSeats:
    post:
      tags:
      - Licenses
      summary: renewOrganizationLicensesSeats
      description: Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license
      operationId: renewOrganizationLicensesSeats
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/renewOrganizationLicensesSeats'
            example:
              licenseIdToRenew: 123
              unusedLicenseId: 1234
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "resultingLicenses": [

                      {

                        "id": "1234",

                        "licenseType": "SME",

                        "licenseKey": "Z21234567890",

                        "orderNumber": "4C1234567",

                        "deviceSerial": null,

                        "networkId": "N_24329156",

                        "state": "active",

                        "seatCount": 25,

                        "totalDurationInDays": 365,

                        "durationInDays": 365,

                        "permanentlyQueuedLicenses": [],

                        "claimDate": "2019-08-29T12:40:10Z",

                        "activationDate": "2019-09-01T15:01:46Z",

                        "expirationDate": "2020-08-31T15:01:46Z"

                      }

                    ]

                  }
              example: >-
                {

                  "resultingLicenses": [

                    {

                      "id": "1234",

                      "licenseType": "SME",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "deviceSerial": null,

                      "networkId": "N_24329156",

                      "state": "active",

                      "seatCount": 25,

                      "totalDurationInDays": 365,

                      "durationInDays": 365,

                      "permanentlyQueuedLicenses": [],

                      "claimDate": "2019-08-29T12:40:10Z",

                      "activationDate": "2019-09-01T15:01:46Z",

                      "expirationDate": "2020-08-31T15:01:46Z"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/licenses/assignSeats:
    post:
      tags:
      - Licenses
      summary: assignOrganizationLicensesSeats
      description: Assign SM seats to a network. This will increase the managed SM device limit of the network
      operationId: assignOrganizationLicensesSeats
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assignOrganizationLicensesSeats'
            example:
              licenseId: 1234
              networkId: N_24329156
              seatCount: 20
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "resultingLicenses": [

                      {

                        "id": "1234",

                        "licenseType": "SME",

                        "licenseKey": "Z21234567890",

                        "orderNumber": "4C1234567",

                        "deviceSerial": null,

                        "networkId": "N_24329156",

                        "state": "active",

                        "seatCount": 25,

                        "totalDurationInDays": 365,

                        "durationInDays": 365,

                        "permanentlyQueuedLicenses": [],

                        "claimDate": "2019-08-29T12:40:10Z",

                        "activationDate": "2019-09-01T15:01:46Z",

                        "expirationDate": "2020-08-31T15:01:46Z"

                      }

                    ]

                  }
              example: >-
                {

                  "resultingLicenses": [

                    {

                      "id": "1234",

                      "licenseType": "SME",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "deviceSerial": null,

                      "networkId": "N_24329156",

                      "state": "active",

                      "seatCount": 25,

                      "totalDurationInDays": 365,

                      "durationInDays": 365,

                      "permanentlyQueuedLicenses": [],

                      "claimDate": "2019-08-29T12:40:10Z",

                      "activationDate": "2019-09-01T15:01:46Z",

                      "expirationDate": "2020-08-31T15:01:46Z"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/licenses:
    get:
      tags:
      - Licenses
      summary: getOrganizationLicenses
      description: List the licenses for an organization
      operationId: getOrganizationLicenses
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: deviceSerial
        in: query
        description: Filter the licenses to those assigned to a particular device
        style: form
        explode: true
        schema:
          type: string
      - name: networkId
        in: query
        description: Filter the licenses to those assigned in a particular network
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'unused', 'unusedActive' or 'recentlyQueued'
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/state'
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "licenseType": "MX64-ENT",

                      "licenseKey": "Z21234567890",

                      "orderNumber": "4C1234567",

                      "deviceSerial": "Q234-ABCD-5678",

                      "networkId": "N_24329156",

                      "state": "active",

                      "seatCount": null,

                      "totalDurationInDays": 425,

                      "durationInDays": 365,

                      "permanentlyQueuedLicenses": [

                        {

                          "id": "5678",

                          "licenseType": "MX64-ENT",

                          "licenseKey": "Z21234567890",

                          "orderNumber": "4C1234567",

                          "durationInDays": 60

                        }

                      ],

                      "claimDate": "2019-08-29T12:40:10Z",

                      "activationDate": "2019-09-01T15:01:46Z",

                      "expirationDate": "2020-10-30T15:01:46Z"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "licenseType": "MX64-ENT",

                    "licenseKey": "Z21234567890",

                    "orderNumber": "4C1234567",

                    "deviceSerial": "Q234-ABCD-5678",

                    "networkId": "N_24329156",

                    "state": "active",

                    "seatCount": null,

                    "totalDurationInDays": 425,

                    "durationInDays": 365,

                    "permanentlyQueuedLicenses": [

                      {

                        "id": "5678",

                        "licenseType": "MX64-ENT",

                        "licenseKey": "Z21234567890",

                        "orderNumber": "4C1234567",

                        "durationInDays": 60

                      }

                    ],

                    "claimDate": "2019-08-29T12:40:10Z",

                    "activationDate": "2019-09-01T15:01:46Z",

                    "expirationDate": "2020-10-30T15:01:46Z"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/licenses/move:
    post:
      tags:
      - Licenses
      summary: moveOrganizationLicenses
      description: Move licenses to another organization. This will also move any devices that the licenses are assigned to
      operationId: moveOrganizationLicenses
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveOrganizationLicenses'
            example:
              destOrganizationId: 2930418
              licenseIds:
              - 123
              - 456
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destOrganizationId": "2930418",

                    "licenseIds": [

                      "123",

                      "456"

                    ]

                  }
              example: >-
                {

                  "destOrganizationId": "2930418",

                  "licenseIds": [

                    "123",

                    "456"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/linkAggregations/{linkAggregationId}:
    delete:
      tags:
      - Link aggregations
      summary: deleteNetworkSwitchLinkAggregation
      description: Split a link aggregation group into separate ports
      operationId: deleteNetworkSwitchLinkAggregation
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: linkAggregationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Link aggregations
      summary: updateNetworkSwitchLinkAggregation
      description: Update a link aggregation group
      operationId: updateNetworkSwitchLinkAggregation
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: linkAggregationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchLinkAggregation'
            example:
              id: NDU2N18yXzM=
              switchPorts:
              - serial: Q234-ABCD-0001
                portId: 1
              - serial: Q234-ABCD-0002
                portId: 2
              - serial: Q234-ABCD-0003
                portId: 3
              - serial: Q234-ABCD-0004
                portId: 4
              - serial: Q234-ABCD-0005
                portId: 5
              - serial: Q234-ABCD-0006
                portId: 6
              - serial: Q234-ABCD-0007
                portId: 7
              - serial: Q234-ABCD-0008
                portId: 8
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "NDU2N18yXzM=",

                    "switchPorts": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "portId": "1"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "portId": "2"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "portId": "3"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "portId": "4"

                      },

                      {

                        "serial": "Q234-ABCD-0005",

                        "portId": "5"

                      },

                      {

                        "serial": "Q234-ABCD-0006",

                        "portId": "6"

                      },

                      {

                        "serial": "Q234-ABCD-0007",

                        "portId": "7"

                      },

                      {

                        "serial": "Q234-ABCD-0008",

                        "portId": "8"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "NDU2N18yXzM=",

                  "switchPorts": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "portId": "1"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "portId": "2"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "portId": "3"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "portId": "4"

                    },

                    {

                      "serial": "Q234-ABCD-0005",

                      "portId": "5"

                    },

                    {

                      "serial": "Q234-ABCD-0006",

                      "portId": "6"

                    },

                    {

                      "serial": "Q234-ABCD-0007",

                      "portId": "7"

                    },

                    {

                      "serial": "Q234-ABCD-0008",

                      "portId": "8"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/linkAggregations:
    get:
      tags:
      - Link aggregations
      summary: getNetworkSwitchLinkAggregations
      description: List link aggregation groups
      operationId: getNetworkSwitchLinkAggregations
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "NDU2N18yXzM=",

                      "switchPorts": [

                        {

                          "serial": "Q234-ABCD-0001",

                          "portId": "1"

                        },

                        {

                          "serial": "Q234-ABCD-0002",

                          "portId": "2"

                        },

                        {

                          "serial": "Q234-ABCD-0003",

                          "portId": "3"

                        },

                        {

                          "serial": "Q234-ABCD-0004",

                          "portId": "4"

                        },

                        {

                          "serial": "Q234-ABCD-0005",

                          "portId": "5"

                        },

                        {

                          "serial": "Q234-ABCD-0006",

                          "portId": "6"

                        },

                        {

                          "serial": "Q234-ABCD-0007",

                          "portId": "7"

                        },

                        {

                          "serial": "Q234-ABCD-0008",

                          "portId": "8"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "NDU2N18yXzM=",

                    "switchPorts": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "portId": "1"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "portId": "2"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "portId": "3"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "portId": "4"

                      },

                      {

                        "serial": "Q234-ABCD-0005",

                        "portId": "5"

                      },

                      {

                        "serial": "Q234-ABCD-0006",

                        "portId": "6"

                      },

                      {

                        "serial": "Q234-ABCD-0007",

                        "portId": "7"

                      },

                      {

                        "serial": "Q234-ABCD-0008",

                        "portId": "8"

                      }

                    ]

                  }

                ]
      deprecated: false
    post:
      tags:
      - Link aggregations
      summary: createNetworkSwitchLinkAggregation
      description: Create a link aggregation group
      operationId: createNetworkSwitchLinkAggregation
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSwitchLinkAggregation'
            example:
              switchPorts:
              - serial: Q234-ABCD-0001
                portId: 1
              - serial: Q234-ABCD-0002
                portId: 2
              - serial: Q234-ABCD-0003
                portId: 3
              - serial: Q234-ABCD-0004
                portId: 4
              - serial: Q234-ABCD-0005
                portId: 5
              - serial: Q234-ABCD-0006
                portId: 6
              - serial: Q234-ABCD-0007
                portId: 7
              - serial: Q234-ABCD-0008
                portId: 8
        required: false
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "NDU2N18yXzM=",

                    "switchPorts": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "portId": "1"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "portId": "2"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "portId": "3"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "portId": "4"

                      },

                      {

                        "serial": "Q234-ABCD-0005",

                        "portId": "5"

                      },

                      {

                        "serial": "Q234-ABCD-0006",

                        "portId": "6"

                      },

                      {

                        "serial": "Q234-ABCD-0007",

                        "portId": "7"

                      },

                      {

                        "serial": "Q234-ABCD-0008",

                        "portId": "8"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "NDU2N18yXzM=",

                  "switchPorts": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "portId": "1"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "portId": "2"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "portId": "3"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "portId": "4"

                    },

                    {

                      "serial": "Q234-ABCD-0005",

                      "portId": "5"

                    },

                    {

                      "serial": "Q234-ABCD-0006",

                      "portId": "6"

                    },

                    {

                      "serial": "Q234-ABCD-0007",

                      "portId": "7"

                    },

                    {

                      "serial": "Q234-ABCD-0008",

                      "portId": "8"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/cellularGateway/settings/dhcp:
    put:
      tags:
      - MG DHCP settings
      summary: updateNetworkCellularGatewaySettingsDhcp
      description: Update common DHCP settings of MGs
      operationId: updateNetworkCellularGatewaySettingsDhcp
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCellularGatewaySettingsDhcp'
            example:
              dhcpLeaseTime: 1 hour
              dnsNameservers: custom
              dnsCustomNameservers:
              - 172.16.2.111
              - 172.16.2.30
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "dhcpLeaseTime": "1 hour",

                    "dnsNameservers": "custom",

                    "dnsCustomNameservers": [

                      "172.16.2.111",

                      "172.16.2.30"

                    ]

                  }
              example: >-
                {

                  "dhcpLeaseTime": "1 hour",

                  "dnsNameservers": "custom",

                  "dnsCustomNameservers": [

                    "172.16.2.111",

                    "172.16.2.30"

                  ]

                }
      deprecated: false
    get:
      tags:
      - MG DHCP settings
      summary: getNetworkCellularGatewaySettingsDhcp
      description: List common DHCP settings of MGs
      operationId: getNetworkCellularGatewaySettingsDhcp
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "dhcpLeaseTime": "1 hour",

                    "dnsNameservers": "custom",

                    "dnsCustomNameservers": [

                      "172.16.2.111",

                      "172.16.2.30"

                    ]

                  }
              example: >-
                {

                  "dhcpLeaseTime": "1 hour",

                  "dnsNameservers": "custom",

                  "dnsCustomNameservers": [

                    "172.16.2.111",

                    "172.16.2.30"

                  ]

                }
      deprecated: false
  /devices/{serial}/cellularGateway/settings:
    put:
      tags:
      - MG LAN settings
      summary: updateDeviceCellularGatewaySettings
      description: Update the LAN Settings for a single MG.
      operationId: updateDeviceCellularGatewaySettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceCellularGatewaySettings'
            example:
              deviceName: name of the MG
              deviceLanIp: 192.168.0.33
              deviceSubnet: 192.168.0.32/27
              fixedIpAssignments:
              - mac: 0b:00:00:00:00:ac
                name: server 1
                ip: 192.168.0.10
              - mac: 0b:00:00:00:00:ab
                name: server 2
                ip: 192.168.0.20
              reservedIpRanges:
              - start: 192.168.1.0
                end: 192.168.1.1
                comment: A reserved IP range
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "deviceName": "name of the MG",

                    "deviceLanIp": "192.168.0.33",

                    "deviceSubnet": "192.168.0.32/27",

                    "fixedIpAssignments": [

                      {

                        "mac": "0b:00:00:00:00:ac",

                        "name": "server 1",

                        "ip": "192.168.0.10"

                      },

                      {

                        "mac": "0b:00:00:00:00:ab",

                        "name": "server 2",

                        "ip": "192.168.0.20"

                      }

                    ],

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: >-
                {

                  "deviceName": "name of the MG",

                  "deviceLanIp": "192.168.0.33",

                  "deviceSubnet": "192.168.0.32/27",

                  "fixedIpAssignments": [

                    {

                      "mac": "0b:00:00:00:00:ac",

                      "name": "server 1",

                      "ip": "192.168.0.10"

                    },

                    {

                      "mac": "0b:00:00:00:00:ab",

                      "name": "server 2",

                      "ip": "192.168.0.20"

                    }

                  ],

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - MG LAN settings
      summary: getDeviceCellularGatewaySettings
      description: Show the LAN Settings of a MG
      operationId: getDeviceCellularGatewaySettings
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "deviceName": "name of the MG",

                    "deviceLanIp": "192.168.0.33",

                    "deviceSubnet": "192.168.0.32/27",

                    "fixedIpAssignments": [

                      {

                        "mac": "0b:00:00:00:00:ac",

                        "name": "server 1",

                        "ip": "192.168.0.10"

                      },

                      {

                        "mac": "0b:00:00:00:00:ab",

                        "name": "server 2",

                        "ip": "192.168.0.20"

                      }

                    ],

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: >-
                {

                  "deviceName": "name of the MG",

                  "deviceLanIp": "192.168.0.33",

                  "deviceSubnet": "192.168.0.32/27",

                  "fixedIpAssignments": [

                    {

                      "mac": "0b:00:00:00:00:ac",

                      "name": "server 1",

                      "ip": "192.168.0.10"

                    },

                    {

                      "mac": "0b:00:00:00:00:ab",

                      "name": "server 2",

                      "ip": "192.168.0.20"

                    }

                  ],

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/cellularGateway/settings/connectivityMonitoringDestinations:
    get:
      tags:
      - MG connectivity monitoring destinations
      summary: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      description: Return the connectivity testing destinations for an MG network
      operationId: getNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destinations": [

                      {

                        "ip": "8.8.8.8",

                        "description": "Google",

                        "default": false

                      },

                      {

                        "ip": "1.23.45.67",

                        "description": "test description",

                        "default": true

                      },

                      {

                        "ip": "9.8.7.6",

                        "description": null,

                        "default": false

                      }

                    ]

                  }
              example: >-
                {

                  "destinations": [

                    {

                      "ip": "8.8.8.8",

                      "description": "Google",

                      "default": false

                    },

                    {

                      "ip": "1.23.45.67",

                      "description": "test description",

                      "default": true

                    },

                    {

                      "ip": "9.8.7.6",

                      "description": null,

                      "default": false

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MG connectivity monitoring destinations
      summary: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      description: Update the connectivity testing destinations for an MG network
      operationId: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations'
            example:
              destinations:
              - ip: 8.8.8.8
                description: Google
                default: false
              - ip: 1.23.45.67
                description: test description
                default: true
              - ip: 9.8.7.6
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "destinations": [

                      {

                        "ip": "8.8.8.8",

                        "description": "Google",

                        "default": false

                      },

                      {

                        "ip": "1.23.45.67",

                        "description": "test description",

                        "default": true

                      },

                      {

                        "ip": "9.8.7.6",

                        "description": null,

                        "default": false

                      }

                    ]

                  }
              example: >-
                {

                  "destinations": [

                    {

                      "ip": "8.8.8.8",

                      "description": "Google",

                      "default": false

                    },

                    {

                      "ip": "1.23.45.67",

                      "description": "test description",

                      "default": true

                    },

                    {

                      "ip": "9.8.7.6",

                      "description": null,

                      "default": false

                    }

                  ]

                }
      deprecated: false
  /devices/{serial}/cellularGateway/settings/portForwardingRules:
    get:
      tags:
      - MG port forwarding rules
      summary: getDeviceCellularGatewaySettingsPortForwardingRules
      description: Returns the port forwarding rules for a single MG.
      operationId: getDeviceCellularGatewaySettingsPortForwardingRules
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test",

                        "access": "any",

                        "publicPort": "11-12",

                        "localPort": "4",

                        "uplink": "both",

                        "protocol": "tcp"

                      },

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test 2",

                        "access": "restricted",

                        "allowedIps": [

                          "10.10.10.10",

                          "10.10.10.11"

                        ],

                        "publicPort": "99",

                        "localPort": "5",

                        "uplink": "both",

                        "protocol": "tcp"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test",

                      "access": "any",

                      "publicPort": "11-12",

                      "localPort": "4",

                      "uplink": "both",

                      "protocol": "tcp"

                    },

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test 2",

                      "access": "restricted",

                      "allowedIps": [

                        "10.10.10.10",

                        "10.10.10.11"

                      ],

                      "publicPort": "99",

                      "localPort": "5",

                      "uplink": "both",

                      "protocol": "tcp"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MG port forwarding rules
      summary: updateDeviceCellularGatewaySettingsPortForwardingRules
      description: Updates the port forwarding rules for a single MG.
      operationId: updateDeviceCellularGatewaySettingsPortForwardingRules
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceCellularGatewaySettingsPortForwardingRules'
            example:
              rules:
              - lanIp: 172.31.128.5
                name: test
                access: any
                publicPort: 11-12
                localPort: 4
                uplink: both
                protocol: tcp
              - lanIp: 172.31.128.5
                name: test 2
                access: restricted
                allowedIps:
                - 10.10.10.10
                - 10.10.10.11
                publicPort: 99
                localPort: 5
                uplink: both
                protocol: tcp
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test",

                        "access": "any",

                        "publicPort": "11-12",

                        "localPort": "4",

                        "uplink": "both",

                        "protocol": "tcp"

                      },

                      {

                        "lanIp": "172.31.128.5",

                        "name": "test 2",

                        "access": "restricted",

                        "allowedIps": [

                          "10.10.10.10",

                          "10.10.10.11"

                        ],

                        "publicPort": "99",

                        "localPort": "5",

                        "uplink": "both",

                        "protocol": "tcp"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test",

                      "access": "any",

                      "publicPort": "11-12",

                      "localPort": "4",

                      "uplink": "both",

                      "protocol": "tcp"

                    },

                    {

                      "lanIp": "172.31.128.5",

                      "name": "test 2",

                      "access": "restricted",

                      "allowedIps": [

                        "10.10.10.10",

                        "10.10.10.11"

                      ],

                      "publicPort": "99",

                      "localPort": "5",

                      "uplink": "both",

                      "protocol": "tcp"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/cellularGateway/settings/subnetPool:
    get:
      tags:
      - MG subnet pool settings
      summary: getNetworkCellularGatewaySettingsSubnetPool
      description: Return the subnet pool and mask configured for MGs in the network.
      operationId: getNetworkCellularGatewaySettingsSubnetPool
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "cidr": "192.168.0.0/16",

                    "mask": "24",

                    "subnets": [

                      {

                        "serial": "AAAA-AAAA-AAAA",

                        "name": "my first MG",

                        "applianceIp": "192.168.0.1",

                        "subnet": "192.168.0.0/24"

                      },

                      {

                        "serial": "BBBB-BBBB-BBBB",

                        "name": "my second MG",

                        "applianceIp": "192.168.0.33",

                        "subnet": "192.168.0.32/24"

                      }

                    ]

                  }
              example: >-
                {

                  "cidr": "192.168.0.0/16",

                  "mask": "24",

                  "subnets": [

                    {

                      "serial": "AAAA-AAAA-AAAA",

                      "name": "my first MG",

                      "applianceIp": "192.168.0.1",

                      "subnet": "192.168.0.0/24"

                    },

                    {

                      "serial": "BBBB-BBBB-BBBB",

                      "name": "my second MG",

                      "applianceIp": "192.168.0.33",

                      "subnet": "192.168.0.32/24"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MG subnet pool settings
      summary: updateNetworkCellularGatewaySettingsSubnetPool
      description: Update the subnet pool and mask configuration for MGs in the network.
      operationId: updateNetworkCellularGatewaySettingsSubnetPool
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCellularGatewaySettingsSubnetPool'
            example:
              cidr: 192.168.0.0/16
              mask: 24
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "cidr": "192.168.0.0/16",

                    "mask": "24",

                    "subnets": [

                      {

                        "serial": "AAAA-AAAA-AAAA",

                        "name": "my first MG",

                        "applianceIp": "192.168.0.1",

                        "subnet": "192.168.0.0/24"

                      },

                      {

                        "serial": "BBBB-BBBB-BBBB",

                        "name": "my second MG",

                        "applianceIp": "192.168.0.33",

                        "subnet": "192.168.0.32/24"

                      }

                    ]

                  }
              example: >-
                {

                  "cidr": "192.168.0.0/16",

                  "mask": "24",

                  "subnets": [

                    {

                      "serial": "AAAA-AAAA-AAAA",

                      "name": "my first MG",

                      "applianceIp": "192.168.0.1",

                      "subnet": "192.168.0.0/24"

                    },

                    {

                      "serial": "BBBB-BBBB-BBBB",

                      "name": "my second MG",

                      "applianceIp": "192.168.0.33",

                      "subnet": "192.168.0.32/24"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/cellularGateway/settings/uplink:
    get:
      tags:
      - MG uplink settings
      summary: getNetworkCellularGatewaySettingsUplink
      description: Returns the uplink settings for your MG network.
      operationId: getNetworkCellularGatewaySettingsUplink
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "bandwidthLimits": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }
              example: >-
                {

                  "bandwidthLimits": {

                    "limitUp": 51200,

                    "limitDown": 51200

                  }

                }
      deprecated: false
    put:
      tags:
      - MG uplink settings
      summary: updateNetworkCellularGatewaySettingsUplink
      description: Updates the uplink settings for your MG network.
      operationId: updateNetworkCellularGatewaySettingsUplink
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCellularGatewaySettingsUplink'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "bandwidthLimits": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }
              example: >-
                {

                  "bandwidthLimits": {

                    "limitUp": 51200,

                    "limitDown": 51200

                  }

                }
      deprecated: false
  /networks/{networkId}/ssids/{number}/l3FirewallRules:
    put:
      tags:
      - MR L3 firewall
      summary: updateNetworkSsidL3FirewallRules
      description: Update the L3 firewall rules of an SSID on an MR network
      operationId: updateNetworkSsidL3FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSsidL3FirewallRules'
            example:
              rules:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: 443
                destCidr: 192.168.1.0/24
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24"

                  }

                ]
      deprecated: false
    get:
      tags:
      - MR L3 firewall
      summary: getNetworkSsidL3FirewallRules
      description: Return the L3 firewall rules for an SSID on an MR network
      operationId: getNetworkSsidL3FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24"

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24"

                  }

                ]
      deprecated: false
  /devices/{serial}/camera/analytics/overview:
    get:
      tags:
      - MV Sense
      summary: getDeviceCameraAnalyticsOverview
      description: Returns an overview of aggregate analytics data for a timespan
      operationId: getDeviceCameraAnalyticsOverview
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: objectType
        in: query
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/objectType'
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "zoneId": 0,

                      "entrances": 254,

                      "averageCount": 5

                    }

                  ]
              example: >-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "zoneId": 0,

                    "entrances": 254,

                    "averageCount": 5

                  }

                ]
      deprecated: false
  /devices/{serial}/camera/analytics/recent:
    get:
      tags:
      - MV Sense
      summary: getDeviceCameraAnalyticsRecent
      description: Returns most recent record for analytics zones
      operationId: getDeviceCameraAnalyticsRecent
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: objectType
        in: query
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/objectType'
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "zoneId": 0,

                      "entrances": 10,

                      "averageCount": 2.54

                    }

                  ]
              example: >-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "zoneId": 0,

                    "entrances": 10,

                    "averageCount": 2.54

                  }

                ]
      deprecated: false
  /devices/{serial}/camera/analytics/live:
    get:
      tags:
      - MV Sense
      summary: getDeviceCameraAnalyticsLive
      description: Returns live state from camera of analytics zones
      operationId: getDeviceCameraAnalyticsLive
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ts": "2018-08-15T18:32:38.123Z",

                    "zones": {

                      "0": {

                        "person": 0

                      }

                    }

                  }
              example: >-
                {

                  "ts": "2018-08-15T18:32:38.123Z",

                  "zones": {

                    "0": {

                      "person": 0

                    }

                  }

                }
      deprecated: false
  /devices/{serial}/camera/analytics/zones/{zoneId}/history:
    get:
      tags:
      - MV Sense
      summary: getDeviceCameraAnalyticsZoneHistory
      description: Return historical records for analytic zones
      operationId: getDeviceCameraAnalyticsZoneHistory
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: zoneId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: resolution
        in: query
        description: 'The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.'
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: objectType
        in: query
        description: '[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].'
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/objectType'
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "startTs": "2018-08-15T18:32:38.123Z",

                      "endTs": "2018-08-15T18:33:38.123Z",

                      "entrances": 5,

                      "averageCount": 1.5

                    }

                  ]
              example: >-
                [

                  {

                    "startTs": "2018-08-15T18:32:38.123Z",

                    "endTs": "2018-08-15T18:33:38.123Z",

                    "entrances": 5,

                    "averageCount": 1.5

                  }

                ]
      deprecated: false
  /devices/{serial}/camera/analytics/zones:
    get:
      tags:
      - MV Sense
      summary: getDeviceCameraAnalyticsZones
      description: Returns all configured analytic zones for this camera
      operationId: getDeviceCameraAnalyticsZones
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "0",

                      "type": "occupancy",

                      "label": "Full Frame",

                      "regionOfInterest": {

                        "x0": "0.00",

                        "y0": "0.00",

                        "x1": "1.00",

                        "y1": "1.00"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "id": "0",

                    "type": "occupancy",

                    "label": "Full Frame",

                    "regionOfInterest": {

                      "x0": "0.00",

                      "y0": "0.00",

                      "x1": "1.00",

                      "y1": "1.00"

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/oneToOneNatRules:
    get:
      tags:
      - MX 1:1 NAT rules
      summary: getNetworkOneToOneNatRules
      description: Return the 1:1 NAT mapping rules for an MX network
      operationId: getNetworkOneToOneNatRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "name": "Service behind NAT",

                        "lanIp": "192.168.128.22",

                        "publicIp": "146.12.3.33",

                        "uplink": "internet1",

                        "allowedInbound": [

                          {

                            "protocol": "tcp",

                            "destinationPorts": [

                              "80"

                            ],

                            "allowedIps": [

                              "10.82.112.0/24",

                              "10.82.0.0/16"

                            ]

                          },

                          {

                            "protocol": "udp",

                            "destinationPorts": [

                              "8080"

                            ],

                            "allowedIps": [

                              "10.81.110.5",

                              "10.81.0.0/16"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "name": "Service behind NAT",

                      "lanIp": "192.168.128.22",

                      "publicIp": "146.12.3.33",

                      "uplink": "internet1",

                      "allowedInbound": [

                        {

                          "protocol": "tcp",

                          "destinationPorts": [

                            "80"

                          ],

                          "allowedIps": [

                            "10.82.112.0/24",

                            "10.82.0.0/16"

                          ]

                        },

                        {

                          "protocol": "udp",

                          "destinationPorts": [

                            "8080"

                          ],

                          "allowedIps": [

                            "10.81.110.5",

                            "10.81.0.0/16"

                          ]

                        }

                      ]

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MX 1:1 NAT rules
      summary: updateNetworkOneToOneNatRules
      description: Set the 1:1 NAT mapping rules for an MX network
      operationId: updateNetworkOneToOneNatRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkOneToOneNatRules'
            example:
              rules:
              - name: Service behind NAT
                lanIp: 192.168.128.22
                publicIp: 146.12.3.33
                uplink: internet1
                allowedInbound:
                - protocol: tcp
                  destinationPorts:
                  - 80
                  allowedIps:
                  - 10.82.112.0/24
                  - 10.82.0.0/16
                - protocol: udp
                  destinationPorts:
                  - 8080
                  allowedIps:
                  - 10.81.110.5
                  - 10.81.0.0/16
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "name": "Service behind NAT",

                        "lanIp": "192.168.128.22",

                        "publicIp": "146.12.3.33",

                        "uplink": "internet1",

                        "allowedInbound": [

                          {

                            "protocol": "tcp",

                            "destinationPorts": [

                              "80"

                            ],

                            "allowedIps": [

                              "10.82.112.0/24",

                              "10.82.0.0/16"

                            ]

                          },

                          {

                            "protocol": "udp",

                            "destinationPorts": [

                              "8080"

                            ],

                            "allowedIps": [

                              "10.81.110.5",

                              "10.81.0.0/16"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "name": "Service behind NAT",

                      "lanIp": "192.168.128.22",

                      "publicIp": "146.12.3.33",

                      "uplink": "internet1",

                      "allowedInbound": [

                        {

                          "protocol": "tcp",

                          "destinationPorts": [

                            "80"

                          ],

                          "allowedIps": [

                            "10.82.112.0/24",

                            "10.82.0.0/16"

                          ]

                        },

                        {

                          "protocol": "udp",

                          "destinationPorts": [

                            "8080"

                          ],

                          "allowedIps": [

                            "10.81.110.5",

                            "10.81.0.0/16"

                          ]

                        }

                      ]

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/oneToManyNatRules:
    get:
      tags:
      - MX 1:Many NAT rules
      summary: getNetworkOneToManyNatRules
      description: Return the 1:Many NAT mapping rules for an MX network
      operationId: getNetworkOneToManyNatRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "publicIp": "146.11.11.13",

                        "uplink": "internet1",

                        "portRules": [

                          {

                            "name": "Rule 1",

                            "protocol": "tcp",

                            "publicPort": "9443",

                            "localIp": "192.168.128.1",

                            "localPort": "443",

                            "allowedIps": [

                              "any"

                            ]

                          },

                          {

                            "name": "Rule 2",

                            "protocol": "tcp",

                            "publicPort": "8080",

                            "localIp": "192.168.128.1",

                            "localPort": "80",

                            "allowedIps": [

                              "10.82.110.0/24",

                              "10.82.111.0/24"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "publicIp": "146.11.11.13",

                      "uplink": "internet1",

                      "portRules": [

                        {

                          "name": "Rule 1",

                          "protocol": "tcp",

                          "publicPort": "9443",

                          "localIp": "192.168.128.1",

                          "localPort": "443",

                          "allowedIps": [

                            "any"

                          ]

                        },

                        {

                          "name": "Rule 2",

                          "protocol": "tcp",

                          "publicPort": "8080",

                          "localIp": "192.168.128.1",

                          "localPort": "80",

                          "allowedIps": [

                            "10.82.110.0/24",

                            "10.82.111.0/24"

                          ]

                        }

                      ]

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MX 1:Many NAT rules
      summary: updateNetworkOneToManyNatRules
      description: Set the 1:Many NAT mapping rules for an MX network
      operationId: updateNetworkOneToManyNatRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkOneToManyNatRules'
            example:
              rules:
              - publicIp: 146.11.11.13
                uplink: internet1
                portRules:
                - name: Rule 1
                  protocol: tcp
                  publicPort: 9443
                  localIp: 192.168.128.1
                  localPort: 443
                  allowedIps:
                  - any
                - name: Rule 2
                  protocol: tcp
                  publicPort: 8080
                  localIp: 192.168.128.1
                  localPort: 80
                  allowedIps:
                  - 10.82.110.0/24
                  - 10.82.111.0/24
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "publicIp": "146.11.11.13",

                        "uplink": "internet1",

                        "portRules": [

                          {

                            "name": "Rule 1",

                            "protocol": "tcp",

                            "publicPort": "9443",

                            "localIp": "192.168.128.1",

                            "localPort": "443",

                            "allowedIps": [

                              "any"

                            ]

                          },

                          {

                            "name": "Rule 2",

                            "protocol": "tcp",

                            "publicPort": "8080",

                            "localIp": "192.168.128.1",

                            "localPort": "80",

                            "allowedIps": [

                              "10.82.110.0/24",

                              "10.82.111.0/24"

                            ]

                          }

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "publicIp": "146.11.11.13",

                      "uplink": "internet1",

                      "portRules": [

                        {

                          "name": "Rule 1",

                          "protocol": "tcp",

                          "publicPort": "9443",

                          "localIp": "192.168.128.1",

                          "localPort": "443",

                          "allowedIps": [

                            "any"

                          ]

                        },

                        {

                          "name": "Rule 2",

                          "protocol": "tcp",

                          "publicPort": "8080",

                          "localIp": "192.168.128.1",

                          "localPort": "80",

                          "allowedIps": [

                            "10.82.110.0/24",

                            "10.82.111.0/24"

                          ]

                        }

                      ]

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/l3FirewallRules:
    get:
      tags:
      - MX L3 firewall
      summary: getNetworkL3FirewallRules
      description: Return the L3 firewall rules for an MX network
      operationId: getNetworkL3FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
    put:
      tags:
      - MX L3 firewall
      summary: updateNetworkL3FirewallRules
      description: Update the L3 firewall rules of an MX network
      operationId: updateNetworkL3FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkL3FirewallRules'
            example:
              rules:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: 443
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
  /networks/{networkId}/l7FirewallRules/applicationCategories:
    get:
      tags:
      - MX L7 application categories
      summary: getNetworkL7FirewallRulesApplicationCategories
      description: Return the L7 firewall application categories and their associated applications for an MX network
      operationId: getNetworkL7FirewallRulesApplicationCategories
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "applicationCategories": [

                        {

                          "id": "meraki:layer7/category/24",

                          "name": "Advertising",

                          "applications": [

                            {

                              "id": "meraki:layer7/application/5",

                              "name": "Advertising.com"

                            },

                            {

                              "id": "meraki:layer7/application/0",

                              "name": "AppNexus"

                            },

                            {

                              "id": "meraki:layer7/application/1",

                              "name": "Brightroll"

                            }

                          ]

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "applicationCategories": [

                      {

                        "id": "meraki:layer7/category/24",

                        "name": "Advertising",

                        "applications": [

                          {

                            "id": "meraki:layer7/application/5",

                            "name": "Advertising.com"

                          },

                          {

                            "id": "meraki:layer7/application/0",

                            "name": "AppNexus"

                          },

                          {

                            "id": "meraki:layer7/application/1",

                            "name": "Brightroll"

                          }

                        ]

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/l7FirewallRules:
    put:
      tags:
      - MX L7 firewall
      summary: updateNetworkL7FirewallRules
      description: Update the MX L7 firewall rules for an MX network
      operationId: updateNetworkL7FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkL7FirewallRules'
            example:
              rules:
              - policy: deny
                type: application
                value:
                  id: meraki:layer7/application/67
                  name: Xbox LIVE
              - policy: deny
                type: applicationCategory
                value:
                  id: meraki:layer7/category/2
                  name: Blogging
              - policy: deny
                type: host
                value: google.com
              - policy: deny
                type: port
                value: 23
              - policy: deny
                type: ipRange
                value: 10.11.12.00/24
              - policy: deny
                type: ipRange
                value: 10.11.12.00/24:5555
              - policy: deny
                type: blacklistedCountries
                value:
                - AX
                - CA
              - policy: deny
                type: whitelistedCountries
                value:
                - US
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "policy": "deny",

                      "type": "application",

                      "value": {

                        "id": "meraki:layer7/application/67",

                        "name": "Xbox LIVE"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "applicationCategory",

                      "value": {

                        "id": "meraki:layer7/category/2",

                        "name": "Blogging"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "host",

                      "value": "google.com"

                    },

                    {

                      "policy": "deny",

                      "type": "port",

                      "value": "23"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24:5555"

                    },

                    {

                      "policy": "deny",

                      "type": "blacklistedCountries",

                      "value": [

                        "AX",

                        "CA"

                      ]

                    },

                    {

                      "policy": "deny",

                      "type": "whitelistedCountries",

                      "value": [

                        "US"

                      ]

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - MX L7 firewall
      summary: getNetworkL7FirewallRules
      description: List the MX L7 firewall rules for an MX network
      operationId: getNetworkL7FirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "policy": "deny",

                        "type": "application",

                        "value": {

                          "id": "meraki:layer7/application/67",

                          "name": "Xbox LIVE"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "applicationCategory",

                        "value": {

                          "id": "meraki:layer7/category/2",

                          "name": "Blogging"

                        }

                      },

                      {

                        "policy": "deny",

                        "type": "host",

                        "value": "google.com"

                      },

                      {

                        "policy": "deny",

                        "type": "port",

                        "value": "23"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24"

                      },

                      {

                        "policy": "deny",

                        "type": "ipRange",

                        "value": "10.11.12.00/24:5555"

                      },

                      {

                        "policy": "deny",

                        "type": "blacklistedCountries",

                        "value": [

                          "AX",

                          "CA"

                        ]

                      },

                      {

                        "policy": "deny",

                        "type": "whitelistedCountries",

                        "value": [

                          "US"

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "policy": "deny",

                      "type": "application",

                      "value": {

                        "id": "meraki:layer7/application/67",

                        "name": "Xbox LIVE"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "applicationCategory",

                      "value": {

                        "id": "meraki:layer7/category/2",

                        "name": "Blogging"

                      }

                    },

                    {

                      "policy": "deny",

                      "type": "host",

                      "value": "google.com"

                    },

                    {

                      "policy": "deny",

                      "type": "port",

                      "value": "23"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24"

                    },

                    {

                      "policy": "deny",

                      "type": "ipRange",

                      "value": "10.11.12.00/24:5555"

                    },

                    {

                      "policy": "deny",

                      "type": "blacklistedCountries",

                      "value": [

                        "AX",

                        "CA"

                      ]

                    },

                    {

                      "policy": "deny",

                      "type": "whitelistedCountries",

                      "value": [

                        "US"

                      ]

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/appliancePorts/{appliancePortId}:
    get:
      tags:
      - MX VLAN ports
      summary: getNetworkAppliancePort
      description: Return per-port VLAN settings for a single MX port.
      operationId: getNetworkAppliancePort
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: appliancePortId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 1,

                    "enabled": true,

                    "type": "access",

                    "dropUntaggedTraffic": false,

                    "vlan": 3,

                    "accessPolicy": "open"

                  }
              example: >-
                {

                  "number": 1,

                  "enabled": true,

                  "type": "access",

                  "dropUntaggedTraffic": false,

                  "vlan": 3,

                  "accessPolicy": "open"

                }
      deprecated: false
    put:
      tags:
      - MX VLAN ports
      summary: updateNetworkAppliancePort
      description: Update the per-port VLAN settings for a single MX port.
      operationId: updateNetworkAppliancePort
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: appliancePortId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkAppliancePort'
            example:
              enabled: true
              type: access
              dropUntaggedTraffic: false
              vlan: 3
              accessPolicy: open
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 1,

                    "enabled": true,

                    "type": "access",

                    "dropUntaggedTraffic": false,

                    "vlan": 3,

                    "accessPolicy": "open"

                  }
              example: >-
                {

                  "number": 1,

                  "enabled": true,

                  "type": "access",

                  "dropUntaggedTraffic": false,

                  "vlan": 3,

                  "accessPolicy": "open"

                }
      deprecated: false
  /networks/{networkId}/appliancePorts:
    get:
      tags:
      - MX VLAN ports
      summary: getNetworkAppliancePorts
      description: List per-port VLAN settings for all ports of a MX.
      operationId: getNetworkAppliancePorts
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "number": 1,

                      "enabled": true,

                      "type": "access",

                      "dropUntaggedTraffic": false,

                      "vlan": 3,

                      "accessPolicy": "open"

                    }

                  ]
              example: >-
                [

                  {

                    "number": 1,

                    "enabled": true,

                    "type": "access",

                    "dropUntaggedTraffic": false,

                    "vlan": 3,

                    "accessPolicy": "open"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/vpnFirewallRules:
    get:
      tags:
      - MX VPN firewall
      summary: getOrganizationVpnFirewallRules
      description: Return the firewall rules for an organization's site-to-site VPN
      operationId: getOrganizationVpnFirewallRules
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
    put:
      tags:
      - MX VPN firewall
      summary: updateOrganizationVpnFirewallRules
      description: Update the firewall rules of an organization's site-to-site VPN
      operationId: updateOrganizationVpnFirewallRules
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationVpnFirewallRules'
            example:
              rules:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: 443
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
  /networks/{networkId}/cellularFirewallRules:
    put:
      tags:
      - MX cellular firewall
      summary: updateNetworkCellularFirewallRules
      description: Update the cellular firewall rules of an MX network
      operationId: updateNetworkCellularFirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkCellularFirewallRules'
            example:
              rules:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: 443
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
    get:
      tags:
      - MX cellular firewall
      summary: getNetworkCellularFirewallRules
      description: Return the cellular firewall rules for an MX network
      operationId: getNetworkCellularFirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ]
              example: >-
                [

                  {

                    "comment": "Allow TCP traffic to subnet with HTTP servers.",

                    "policy": "allow",

                    "protocol": "tcp",

                    "destPort": 443,

                    "destCidr": "192.168.1.0/24",

                    "srcPort": "Any",

                    "srcCidr": "Any",

                    "syslogEnabled": false

                  }

                ]
      deprecated: false
  /networks/{networkId}/appliance/firewall/inboundFirewallRules:
    put:
      tags:
      - MX inbound firewall
      summary: updateNetworkApplianceFirewallInboundFirewallRules
      description: Update the inbound firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundFirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkApplianceFirewallInboundFirewallRules'
            example:
              rules:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: 443
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24",

                        "srcPort": "Any",

                        "srcCidr": "Any",

                        "syslogEnabled": false

                      }

                    ],

                    "syslogDefaultRule": true

                  }
              example: >-
                {

                  "rules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ],

                  "syslogDefaultRule": true

                }
      deprecated: false
    get:
      tags:
      - MX inbound firewall
      summary: getNetworkApplianceFirewallInboundFirewallRules
      description: Return the inbound firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "comment": "Allow TCP traffic to subnet with HTTP servers.",

                        "policy": "allow",

                        "protocol": "tcp",

                        "destPort": 443,

                        "destCidr": "192.168.1.0/24",

                        "srcPort": "Any",

                        "srcCidr": "Any",

                        "syslogEnabled": false

                      }

                    ],

                    "syslogDefaultRule": true

                  }
              example: >-
                {

                  "rules": [

                    {

                      "comment": "Allow TCP traffic to subnet with HTTP servers.",

                      "policy": "allow",

                      "protocol": "tcp",

                      "destPort": 443,

                      "destCidr": "192.168.1.0/24",

                      "srcPort": "Any",

                      "srcCidr": "Any",

                      "syslogEnabled": false

                    }

                  ],

                  "syslogDefaultRule": true

                }
      deprecated: false
  /networks/{networkId}/portForwardingRules:
    get:
      tags:
      - MX port forwarding rules
      summary: getNetworkPortForwardingRules
      description: Return the port forwarding rules for an MX network
      operationId: getNetworkPortForwardingRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "lanIp": "192.168.128.1",

                        "allowedIps": [

                          "any"

                        ],

                        "name": "Description of Port Forwarding Rule",

                        "protocol": "tcp",

                        "publicPort": "8100-8101",

                        "localPort": "442-443",

                        "uplink": "both"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "lanIp": "192.168.128.1",

                      "allowedIps": [

                        "any"

                      ],

                      "name": "Description of Port Forwarding Rule",

                      "protocol": "tcp",

                      "publicPort": "8100-8101",

                      "localPort": "442-443",

                      "uplink": "both"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MX port forwarding rules
      summary: updateNetworkPortForwardingRules
      description: Update the port forwarding rules for an MX network
      operationId: updateNetworkPortForwardingRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkPortForwardingRules'
            example:
              rules:
              - lanIp: 192.168.128.1
                allowedIps:
                - any
                name: Description of Port Forwarding Rule
                protocol: tcp
                publicPort: 8100-8101
                localPort: 442-443
                uplink: both
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "lanIp": "192.168.128.1",

                        "allowedIps": [

                          "any"

                        ],

                        "name": "Description of Port Forwarding Rule",

                        "protocol": "tcp",

                        "publicPort": "8100-8101",

                        "localPort": "442-443",

                        "uplink": "both"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "lanIp": "192.168.128.1",

                      "allowedIps": [

                        "any"

                      ],

                      "name": "Description of Port Forwarding Rule",

                      "protocol": "tcp",

                      "publicPort": "8100-8101",

                      "localPort": "442-443",

                      "uplink": "both"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/staticRoutes/{staticRouteId}:
    get:
      tags:
      - MX static routes
      summary: getNetworkStaticRoute
      description: Return a static route for an MX or teleworker network
      operationId: getNetworkStaticRoute
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: staticRouteId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                  "networkId": "N_24329156",

                  "enabled": true,

                  "name": "My route",

                  "subnet": "192.168.1.0/24",

                  "gatewayIp": "1.2.3.5",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - MX static routes
      summary: updateNetworkStaticRoute
      description: Update a static route for an MX or teleworker network
      operationId: updateNetworkStaticRoute
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: staticRouteId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkStaticRoute'
            example:
              name: My route
              subnet: 192.168.1.0/24
              fixedIpAssignments:
                22:33:44:55:66:77:
                  ip: 1.2.3.4
                  name: Some client name
              reservedIpRanges:
              - start: 192.168.1.0
                end: 192.168.1.1
                comment: A reserved IP range
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                  "networkId": "N_24329156",

                  "enabled": true,

                  "name": "My route",

                  "subnet": "192.168.1.0/24",

                  "gatewayIp": "1.2.3.5",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ]

                }
      deprecated: false
    delete:
      tags:
      - MX static routes
      summary: deleteNetworkStaticRoute
      description: Delete a static route from an MX or teleworker network
      operationId: deleteNetworkStaticRoute
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: staticRouteId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/staticRoutes:
    post:
      tags:
      - MX static routes
      summary: createNetworkStaticRoute
      description: Add a static route for an MX or teleworker network
      operationId: createNetworkStaticRoute
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkStaticRoute'
            example:
              name: My route
              subnet: 192.168.1.0/24
              gatewayIp: 1.2.3.5
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {},

                    "reservedIpRanges": []

                  }
              example: >-
                {

                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                  "networkId": "N_24329156",

                  "enabled": true,

                  "name": "My route",

                  "subnet": "192.168.1.0/24",

                  "gatewayIp": "1.2.3.5",

                  "fixedIpAssignments": {},

                  "reservedIpRanges": []

                }
      deprecated: false
    get:
      tags:
      - MX static routes
      summary: getNetworkStaticRoutes
      description: List the static routes for an MX or teleworker network
      operationId: getNetworkStaticRoutes
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                      "networkId": "N_24329156",

                      "enabled": true,

                      "name": "My route",

                      "subnet": "192.168.1.0/24",

                      "gatewayIp": "1.2.3.5",

                      "fixedIpAssignments": {

                        "22:33:44:55:66:77": {

                          "ip": "1.2.3.4",

                          "name": "Some client name"

                        }

                      },

                      "reservedIpRanges": [

                        {

                          "start": "192.168.1.0",

                          "end": "192.168.1.1",

                          "comment": "A reserved IP range"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",

                    "networkId": "N_24329156",

                    "enabled": true,

                    "name": "My route",

                    "subnet": "192.168.1.0/24",

                    "gatewayIp": "1.2.3.5",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/swapWarmSpare:
    post:
      tags:
      - MX warm spare settings
      summary: swapNetworkWarmspare
      description: Swap MX primary and warm spare appliances
      operationId: swapNetworkWarmspare
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/warmSpareSettings:
    get:
      tags:
      - MX warm spare settings
      summary: getNetworkWarmSpareSettings
      description: Return MX warm spare settings
      operationId: getNetworkWarmSpareSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "enabled": true,

                    "primarySerial": "Q234-ABCD-5678",

                    "spareSerial": "Q234-ABCD-5678",

                    "uplinkMode": "virtual",

                    "wan1": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.1.0/24"

                    },

                    "wan2": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.128.0/24"

                    }

                  }
              example: >-
                {

                  "enabled": true,

                  "primarySerial": "Q234-ABCD-5678",

                  "spareSerial": "Q234-ABCD-5678",

                  "uplinkMode": "virtual",

                  "wan1": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.1.0/24"

                  },

                  "wan2": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.128.0/24"

                  }

                }
      deprecated: false
    put:
      tags:
      - MX warm spare settings
      summary: updateNetworkWarmSpareSettings
      description: Update MX warm spare settings
      operationId: updateNetworkWarmSpareSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkWarmSpareSettings'
            example:
              enabled: true
              spareSerial: Q234-ABCD-5678
              uplinkMode: virtual
              virtualIp1: 1.2.3.4
              virtualIp2: 1.2.3.4
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "enabled": true,

                    "primarySerial": "Q234-ABCD-5678",

                    "spareSerial": "Q234-ABCD-5678",

                    "uplinkMode": "virtual",

                    "wan1": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.1.0/24"

                    },

                    "wan2": {

                      "ip": "1.2.3.4",

                      "subnet": "192.168.128.0/24"

                    }

                  }
              example: >-
                {

                  "enabled": true,

                  "primarySerial": "Q234-ABCD-5678",

                  "spareSerial": "Q234-ABCD-5678",

                  "uplinkMode": "virtual",

                  "wan1": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.1.0/24"

                  },

                  "wan2": {

                    "ip": "1.2.3.4",

                    "subnet": "192.168.128.0/24"

                  }

                }
      deprecated: false
  /networks/{networkId}/security/malwareSettings:
    get:
      tags:
      - Malware settings
      summary: getNetworkSecurityMalwareSettings
      description: Returns all supported malware settings for an MX network
      operationId: getNetworkSecurityMalwareSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "enabled",

                    "allowedUrls": [

                      {

                        "url": "example.org",

                        "comment": "allow example.org"

                      },

                      {

                        "url": "help.com.au",

                        "comment": "allow help.com.au"

                      }

                    ],

                    "allowedFiles": [

                      {

                        "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                        "comment": "allow ZIP file"

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "enabled",

                  "allowedUrls": [

                    {

                      "url": "example.org",

                      "comment": "allow example.org"

                    },

                    {

                      "url": "help.com.au",

                      "comment": "allow help.com.au"

                    }

                  ],

                  "allowedFiles": [

                    {

                      "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                      "comment": "allow ZIP file"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Malware settings
      summary: updateNetworkSecurityMalwareSettings
      description: Set the supported malware settings for an MX network
      operationId: updateNetworkSecurityMalwareSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSecurityMalwareSettings'
            example:
              mode: enabled
              allowedUrls:
              - url: example.org
                comment: allow example.org
              - url: help.com.au
                comment: allow help.com.au
              allowedFiles:
              - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                comment: allow ZIP file
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "enabled",

                    "allowedUrls": [

                      {

                        "url": "example.org",

                        "comment": "allow example.org"

                      },

                      {

                        "url": "help.com.au",

                        "comment": "allow help.com.au"

                      }

                    ],

                    "allowedFiles": [

                      {

                        "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                        "comment": "allow ZIP file"

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "enabled",

                  "allowedUrls": [

                    {

                      "url": "example.org",

                      "comment": "allow example.org"

                    },

                    {

                      "url": "help.com.au",

                      "comment": "allow help.com.au"

                    }

                  ],

                  "allowedFiles": [

                    {

                      "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",

                      "comment": "allow ZIP file"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/managementInterfaceSettings:
    get:
      tags:
      - Management interface settings
      summary: getNetworkDeviceManagementInterfaceSettings
      description: Return the management interface settings for a device
      operationId: getNetworkDeviceManagementInterfaceSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ddnsHostnames": {

                      "activeDdnsHostname": "mx1-sample.dynamic-m.com",

                      "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",

                      "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"

                    },

                    "wan1": {

                      "wanEnabled": "not configured",

                      "usingStaticIp": true,

                      "staticIp": "1.2.3.4",

                      "staticSubnetMask": "255.255.255.0",

                      "staticGatewayIp": "1.2.3.1",

                      "staticDns": [

                        "1.2.3.2",

                        "1.2.3.3"

                      ],

                      "vlan": 7

                    },

                    "wan2": {

                      "wanEnabled": "enabled",

                      "usingStaticIp": false,

                      "vlan": 2

                    }

                  }
              example: >-
                {

                  "ddnsHostnames": {

                    "activeDdnsHostname": "mx1-sample.dynamic-m.com",

                    "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",

                    "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"

                  },

                  "wan1": {

                    "wanEnabled": "not configured",

                    "usingStaticIp": true,

                    "staticIp": "1.2.3.4",

                    "staticSubnetMask": "255.255.255.0",

                    "staticGatewayIp": "1.2.3.1",

                    "staticDns": [

                      "1.2.3.2",

                      "1.2.3.3"

                    ],

                    "vlan": 7

                  },

                  "wan2": {

                    "wanEnabled": "enabled",

                    "usingStaticIp": false,

                    "vlan": 2

                  }

                }
      deprecated: false
    put:
      tags:
      - Management interface settings
      summary: updateNetworkDeviceManagementInterfaceSettings
      description: Update the management interface settings for a device
      operationId: updateNetworkDeviceManagementInterfaceSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkDeviceManagementInterfaceSettings'
            example:
              wan1:
                wanEnabled: not configured
                usingStaticIp: true
                staticIp: 1.2.3.4
                staticSubnetMask: 255.255.255.0
                staticGatewayIp: 1.2.3.1
                staticDns:
                - 1.2.3.2
                - 1.2.3.3
                vlan: 7
              wan2:
                wanEnabled: enabled
                usingStaticIp: false
                vlan: 2
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "wan1": {

                      "wanEnabled": "not configured",

                      "usingStaticIp": true,

                      "staticIp": "1.2.3.4",

                      "staticSubnetMask": "255.255.255.0",

                      "staticGatewayIp": "1.2.3.1",

                      "staticDns": [

                        "1.2.3.2",

                        "1.2.3.3"

                      ],

                      "vlan": 7

                    },

                    "wan2": {

                      "wanEnabled": "enabled",

                      "usingStaticIp": false,

                      "vlan": 2

                    }

                  }
              example: >-
                {

                  "wan1": {

                    "wanEnabled": "not configured",

                    "usingStaticIp": true,

                    "staticIp": "1.2.3.4",

                    "staticSubnetMask": "255.255.255.0",

                    "staticGatewayIp": "1.2.3.1",

                    "staticDns": [

                      "1.2.3.2",

                      "1.2.3.3"

                    ],

                    "vlan": 7

                  },

                  "wan2": {

                    "wanEnabled": "enabled",

                    "usingStaticIp": false,

                    "vlan": 2

                  }

                }
      deprecated: false
  /networks/{networkId}/merakiAuthUsers:
    get:
      tags:
      - Meraki auth users
      summary: getNetworkMerakiAuthUsers
      description: List the splash or RADIUS users configured under Meraki Authentication for a network
      operationId: getNetworkMerakiAuthUsers
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "aGlAaGkuY29t",

                      "email": "miles@meraki.com",

                      "name": "Miles Meraki",

                      "createdAt": 1518365681,

                      "accountType": "Guest",

                      "authorizations": [

                        {

                          "authorizedZone": "Store WiFi",

                          "expiresAt": 1526087474,

                          "authorizedByName": "Miles Meraki",

                          "authorizedByEmail": "miles@meraki.com"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "aGlAaGkuY29t",

                    "email": "miles@meraki.com",

                    "name": "Miles Meraki",

                    "createdAt": 1518365681,

                    "accountType": "Guest",

                    "authorizations": [

                      {

                        "authorizedZone": "Store WiFi",

                        "expiresAt": 1526087474,

                        "authorizedByName": "Miles Meraki",

                        "authorizedByEmail": "miles@meraki.com"

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}:
    get:
      tags:
      - Meraki auth users
      summary: getNetworkMerakiAuthUser
      description: Return the Meraki Auth splash or RADIUS user
      operationId: getNetworkMerakiAuthUser
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: merakiAuthUserId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "aGlAaGkuY29t",

                    "email": "miles@meraki.com",

                    "name": "Miles Meraki",

                    "createdAt": 1518365681,

                    "accountType": "Guest",

                    "authorizations": [

                      {

                        "authorizedZone": "Store WiFi",

                        "expiresAt": 1526087474,

                        "authorizedByName": "Miles Meraki",

                        "authorizedByEmail": "miles@meraki.com"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "aGlAaGkuY29t",

                  "email": "miles@meraki.com",

                  "name": "Miles Meraki",

                  "createdAt": 1518365681,

                  "accountType": "Guest",

                  "authorizations": [

                    {

                      "authorizedZone": "Store WiFi",

                      "expiresAt": 1526087474,

                      "authorizedByName": "Miles Meraki",

                      "authorizedByEmail": "miles@meraki.com"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/insight/monitoredMediaServers:
    post:
      tags:
      - Monitored media servers
      summary: createOrganizationInsightMonitoredMediaServer
      description: Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.
      operationId: createOrganizationInsightMonitoredMediaServer
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationInsightMonitoredMediaServer'
            example:
              name: Sample VoIP Provider
              address: 123.123.123.1
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "name": "Sample VoIP Provider",

                    "address": "123.123.123.1"

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "name": "Sample VoIP Provider",

                  "address": "123.123.123.1"

                }
      deprecated: false
    get:
      tags:
      - Monitored media servers
      summary: getOrganizationInsightMonitoredMediaServers
      description: List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServers
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1284392014819",

                      "name": "Sample VoIP Provider",

                      "address": "123.123.123.1"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1284392014819",

                    "name": "Sample VoIP Provider",

                    "address": "123.123.123.1"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}:
    get:
      tags:
      - Monitored media servers
      summary: getOrganizationInsightMonitoredMediaServer
      description: Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServer
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "name": "Sample VoIP Provider",

                    "address": "123.123.123.1"

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "name": "Sample VoIP Provider",

                  "address": "123.123.123.1"

                }
      deprecated: false
    delete:
      tags:
      - Monitored media servers
      summary: deleteOrganizationInsightMonitoredMediaServer
      description: Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.
      operationId: deleteOrganizationInsightMonitoredMediaServer
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Monitored media servers
      summary: updateOrganizationInsightMonitoredMediaServer
      description: Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      operationId: updateOrganizationInsightMonitoredMediaServer
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: monitoredMediaServerId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationInsightMonitoredMediaServer'
            example:
              name: Sample VoIP Provider
              address: 123.123.123.1
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "name": "Sample VoIP Provider",

                    "address": "123.123.123.1"

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "name": "Sample VoIP Provider",

                  "address": "123.123.123.1"

                }
      deprecated: false
  /networks/{networkId}/sm/targetGroups/{targetGroupId}:
    delete:
      tags:
      - Named tag scope
      summary: deleteNetworkSmTargetGroup
      description: Delete a target group from a network
      operationId: deleteNetworkSmTargetGroup
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: targetGroupId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Named tag scope
      summary: updateNetworkSmTargetGroup
      description: Update a target group
      operationId: updateNetworkSmTargetGroup
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: targetGroupId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSmTargetGroup'
            example:
              name: My target group
              scope: none
              tags: '[]'
              type: devices
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "My target group",

                    "scope": "none",

                    "tags": "[]",

                    "type": "devices"

                  }
              example: >-
                {

                  "name": "My target group",

                  "scope": "none",

                  "tags": "[]",

                  "type": "devices"

                }
      deprecated: false
    get:
      tags:
      - Named tag scope
      summary: getNetworkSmTargetGroup
      description: Return a target group
      operationId: getNetworkSmTargetGroup
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: targetGroupId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: withDetails
        in: query
        description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "My target group",

                    "scope": "none",

                    "tags": "[]",

                    "type": "devices"

                  }
              example: >-
                {

                  "name": "My target group",

                  "scope": "none",

                  "tags": "[]",

                  "type": "devices"

                }
      deprecated: false
  /networks/{networkId}/sm/targetGroups:
    post:
      tags:
      - Named tag scope
      summary: createNetworkSmTargetGroup
      description: Add a target group
      operationId: createNetworkSmTargetGroup
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSmTargetGroup'
            example:
              name: My target group
              scope: none
              tags: '[]'
              type: devices
        required: false
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "name": "My target group",

                    "scope": "none",

                    "tags": "[]",

                    "type": "devices"

                  }
              example: >-
                {

                  "name": "My target group",

                  "scope": "none",

                  "tags": "[]",

                  "type": "devices"

                }
      deprecated: false
    get:
      tags:
      - Named tag scope
      summary: getNetworkSmTargetGroups
      description: List the target groups in this network
      operationId: getNetworkSmTargetGroups
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: withDetails
        in: query
        description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My target group",

                      "scope": "none",

                      "tags": "[]",

                      "type": "devices"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My target group",

                    "scope": "none",

                    "tags": "[]",

                    "type": "devices"

                  }

                ]
      deprecated: false
  /networks/{networkId}/netflowSettings:
    put:
      tags:
      - NetFlow settings
      summary: updateNetworkNetflowSettings
      description: Update the NetFlow traffic reporting settings for a network
      operationId: updateNetworkNetflowSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkNetflowSettings'
            example:
              reportingEnabled: true
              collectorIp: 1.2.3.4
              collectorPort: 443
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "reportingEnabled": true,

                    "collectorIp": "1.2.3.4",

                    "collectorPort": 443

                  }
              example: >-
                {

                  "reportingEnabled": true,

                  "collectorIp": "1.2.3.4",

                  "collectorPort": 443

                }
      deprecated: false
    get:
      tags:
      - NetFlow settings
      summary: getNetworkNetflowSettings
      description: Return the NetFlow traffic reporting settings for a network
      operationId: getNetworkNetflowSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "reportingEnabled": true,

                    "collectorIp": "1.2.3.4",

                    "collectorPort": 443

                  }
              example: >-
                {

                  "reportingEnabled": true,

                  "collectorIp": "1.2.3.4",

                  "collectorPort": 443

                }
      deprecated: false
  /organizations/{organizationId}/networks/combine:
    post:
      tags:
      - Networks
      summary: combineOrganizationNetworks
      description: Combine multiple networks into a single network
      operationId: combineOrganizationNetworks
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/combineOrganizationNetworks'
            example:
              name: Long Island Office
              networkIds:
              - N_1234
              - N_5678
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "resultingNetwork": {

                      "id": "L_123456",

                      "organizationId": "2930418",

                      "name": "Long Island Office",

                      "timeZone": "America/Los_Angeles",

                      "tags": " tag1 tag2 ",

                      "type": "combined",

                      "productTypes": [

                        "appliance",

                        "switch",

                        "wireless"

                      ],

                      "disableMyMerakiCom": false,

                      "enrollmentString": "long-island-office"

                    }

                  }
              example: >-
                {

                  "resultingNetwork": {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }

                }
      deprecated: false
  /networks/{networkId}:
    put:
      tags:
      - Networks
      summary: updateNetwork
      description: Update a network
      operationId: updateNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetwork'
            example:
              name: Long Island Office
              timeZone: America/Los_Angeles
              tags: ' tag1 tag2 '
              disableMyMerakiCom: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }
              example: >-
                {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }
      deprecated: false
    get:
      tags:
      - Networks
      summary: getNetwork
      description: Return a network
      operationId: getNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }
              example: >-
                {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }
      deprecated: false
    delete:
      tags:
      - Networks
      summary: deleteNetwork
      description: Delete a network
      operationId: deleteNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/siteToSiteVpn:
    put:
      tags:
      - Networks
      summary: updateNetworkSiteToSiteVpn
      description: Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.
      operationId: updateNetworkSiteToSiteVpn
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSiteToSiteVpn'
            example:
              mode: spoke
              hubs:
              - hubId: N_4901849
                useDefaultRoute: true
              - hubId: N_1892489
                useDefaultRoute: false
              subnets:
              - localSubnet: 192.168.1.0/24
                useVpn: true
              - localSubnet: 192.168.128.0/24
                useVpn: true
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "spoke",

                    "hubs": [

                      {

                        "hubId": "N_4901849",

                        "useDefaultRoute": true

                      },

                      {

                        "hubId": "N_1892489",

                        "useDefaultRoute": false

                      }

                    ],

                    "subnets": [

                      {

                        "localSubnet": "192.168.1.0/24",

                        "useVpn": true

                      },

                      {

                        "localSubnet": "192.168.128.0/24",

                        "useVpn": true

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "spoke",

                  "hubs": [

                    {

                      "hubId": "N_4901849",

                      "useDefaultRoute": true

                    },

                    {

                      "hubId": "N_1892489",

                      "useDefaultRoute": false

                    }

                  ],

                  "subnets": [

                    {

                      "localSubnet": "192.168.1.0/24",

                      "useVpn": true

                    },

                    {

                      "localSubnet": "192.168.128.0/24",

                      "useVpn": true

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Networks
      summary: getNetworkSiteToSiteVpn
      description: Return the site-to-site VPN settings of a network. Only valid for MX networks.
      operationId: getNetworkSiteToSiteVpn
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "spoke",

                    "hubs": [

                      {

                        "hubId": "N_4901849",

                        "useDefaultRoute": true

                      },

                      {

                        "hubId": "N_1892489",

                        "useDefaultRoute": false

                      }

                    ],

                    "subnets": [

                      {

                        "localSubnet": "192.168.1.0/24",

                        "useVpn": true

                      },

                      {

                        "localSubnet": "192.168.128.0/24",

                        "useVpn": true

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "spoke",

                  "hubs": [

                    {

                      "hubId": "N_4901849",

                      "useDefaultRoute": true

                    },

                    {

                      "hubId": "N_1892489",

                      "useDefaultRoute": false

                    }

                  ],

                  "subnets": [

                    {

                      "localSubnet": "192.168.1.0/24",

                      "useVpn": true

                    },

                    {

                      "localSubnet": "192.168.128.0/24",

                      "useVpn": true

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/split:
    post:
      tags:
      - Networks
      summary: splitNetwork
      description: Split a combined network into individual networks for each type of device
      operationId: splitNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "resultingNetworks": [

                      {

                        "id": "N_1234",

                        "organizationId": "2930418",

                        "name": "Long Island Office - switch",

                        "timeZone": "America/Los_Angeles",

                        "tags": " tag1 tag2 ",

                        "type": "switch",

                        "productTypes": [

                          "switch"

                        ],

                        "disableMyMerakiCom": false,

                        "enrollmentString": "long-island-office"

                      },

                      {

                        "id": "N_5678",

                        "organizationId": "2930418",

                        "name": "Long Island Office - wireless",

                        "timeZone": "America/Los_Angeles",

                        "tags": " tag1 tag2 ",

                        "type": "wireless",

                        "productTypes": [

                          "wireless"

                        ],

                        "disableMyMerakiCom": false,

                        "enrollmentString": "long-island-office"

                      }

                    ]

                  }
              example: >-
                {

                  "resultingNetworks": [

                    {

                      "id": "N_1234",

                      "organizationId": "2930418",

                      "name": "Long Island Office - switch",

                      "timeZone": "America/Los_Angeles",

                      "tags": " tag1 tag2 ",

                      "type": "switch",

                      "productTypes": [

                        "switch"

                      ],

                      "disableMyMerakiCom": false,

                      "enrollmentString": "long-island-office"

                    },

                    {

                      "id": "N_5678",

                      "organizationId": "2930418",

                      "name": "Long Island Office - wireless",

                      "timeZone": "America/Los_Angeles",

                      "tags": " tag1 tag2 ",

                      "type": "wireless",

                      "productTypes": [

                        "wireless"

                      ],

                      "disableMyMerakiCom": false,

                      "enrollmentString": "long-island-office"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/unbind:
    post:
      tags:
      - Networks
      summary: unbindNetwork
      description: Unbind a network from a template.
      operationId: unbindNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
      deprecated: false
  /organizations/{organizationId}/networks:
    get:
      tags:
      - Networks
      summary: getOrganizationNetworks
      description: List the networks in an organization
      operationId: getOrganizationNetworks
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: configTemplateId
        in: query
        description: An optional parameter that is the ID of a config template. Will return all networks bound to that template.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: array
                description: Successful operation
                items:
                  $ref: '#/components/schemas/Network'
                example: >-
                  [

                    {

                      "id": "L_123456",

                      "organizationId": "2930418",

                      "name": "Long Island Office",

                      "timeZone": "America/Los_Angeles",

                      "tags": " tag1 tag2 ",

                      "type": "combined",

                      "productTypes": [

                        "appliance",

                        "switch",

                        "wireless"

                      ],

                      "disableMyMerakiCom": false,

                      "enrollmentString": "long-island-office"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }

                ]
      deprecated: false
    post:
      tags:
      - Networks
      summary: createOrganizationNetwork
      description: Create a network
      operationId: createOrganizationNetwork
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationNetwork'
            example:
              name: Long Island Office
              timeZone: America/Los_Angeles
              tags: ' tag1 tag2 '
              disableMyMerakiCom: false
              type: appliance switch camera
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "L_123456",

                    "organizationId": "2930418",

                    "name": "Long Island Office",

                    "timeZone": "America/Los_Angeles",

                    "tags": " tag1 tag2 ",

                    "type": "combined",

                    "productTypes": [

                      "appliance",

                      "switch",

                      "wireless"

                    ],

                    "disableMyMerakiCom": false,

                    "enrollmentString": "long-island-office"

                  }
              example: >-
                {

                  "id": "L_123456",

                  "organizationId": "2930418",

                  "name": "Long Island Office",

                  "timeZone": "America/Los_Angeles",

                  "tags": " tag1 tag2 ",

                  "type": "combined",

                  "productTypes": [

                    "appliance",

                    "switch",

                    "wireless"

                  ],

                  "disableMyMerakiCom": false,

                  "enrollmentString": "long-island-office"

                }
      deprecated: false
  /networks/{networkId}/bind:
    post:
      tags:
      - Networks
      summary: bindNetwork
      description: Bind a network to a template.
      operationId: bindNetwork
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bindNetwork'
            example:
              configTemplateId: N_23952905
              autoBind: false
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/accessPolicies:
    get:
      tags:
      - Networks
      summary: getNetworkAccessPolicies
      description: List the access policies for this network. Only valid for MS networks.
      operationId: getNetworkAccessPolicies
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "number": 1,

                      "name": "My access policy",

                      "accessType": "8021.x",

                      "guestVlan": 3700,

                      "radiusServers": [

                        {

                          "ip": "1.2.3.4",

                          "port": 1337

                        },

                        {

                          "ip": "2.3.4.5",

                          "port": 1337

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "number": 1,

                    "name": "My access policy",

                    "accessType": "8021.x",

                    "guestVlan": 3700,

                    "radiusServers": [

                      {

                        "ip": "1.2.3.4",

                        "port": 1337

                      },

                      {

                        "ip": "2.3.4.5",

                        "port": 1337

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/traffic:
    get:
      tags:
      - Networks
      summary: getNetworkTraffic
      description: >2
            The traffic analysis data for this network.
            <a href="https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.
      operationId: getNetworkTraffic
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
          example: 604800
      - name: deviceType
        in: query
        description: >2
              Filter the data by device type: combined (default), wireless, switch, appliance.
              When using combined, for each rule the data will come from the device type with the most usage.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "application": "Gmail",

                      "destination": null,

                      "protocol": "TCP",

                      "port": 443,

                      "sent": 138.0,

                      "recv": 61.0,

                      "numClients": 7,

                      "activeTime": 77000,

                      "flows": 300

                    }

                  ]
              example: >-
                [

                  {

                    "application": "Gmail",

                    "destination": null,

                    "protocol": "TCP",

                    "port": 443,

                    "sent": 138.0,

                    "recv": 61.0,

                    "numClients": 7,

                    "activeTime": 77000,

                    "flows": 300

                  }

                ]
      deprecated: false
  /networks/{networkId}/airMarshal:
    get:
      tags:
      - Networks
      summary: getNetworkAirMarshal
      description: List Air Marshal scan results from a network
      operationId: getNetworkAirMarshal
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ssid": "linksys",

                      "bssids": [

                        {

                          "bssid": "00:11:22:33:44:55",

                          "contained": false,

                          "detectedBy": [

                            {

                              "device": "Q234-ABCD-5678",

                              "rssi": 17

                            }

                          ]

                        }

                      ],

                      "channels": [

                        36,

                        40

                      ],

                      "firstSeen": 1518365681,

                      "lastSeen": 1526087474,

                      "wiredMacs": [

                        "00:11:22:33:44:55"

                      ],

                      "wiredVlans": [

                        0,

                        108

                      ],

                      "wiredLastSeen": 1526087474

                    }

                  ]
              example: >-
                [

                  {

                    "ssid": "linksys",

                    "bssids": [

                      {

                        "bssid": "00:11:22:33:44:55",

                        "contained": false,

                        "detectedBy": [

                          {

                            "device": "Q234-ABCD-5678",

                            "rssi": 17

                          }

                        ]

                      }

                    ],

                    "channels": [

                      36,

                      40

                    ],

                    "firstSeen": 1518365681,

                    "lastSeen": 1526087474,

                    "wiredMacs": [

                      "00:11:22:33:44:55"

                    ],

                    "wiredVlans": [

                      0,

                      108

                    ],

                    "wiredLastSeen": 1526087474

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/openapiSpec:
    get:
      tags:
      - OpenAPI Spec
      summary: getOrganizationOpenapiSpec
      description: Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON
      operationId: getOrganizationOpenapiSpec
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "swagger": "2.0",

                    "info": {

                      "version": "v0",

                      "title": "Meraki Dashboard API",

                      "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"

                    },

                    "paths": {

                      "/organizations": {

                        "get": {

                          "description": "List the organizations that the user has privileges on",

                          "operationId": "getOrganizations",

                          "responses": {

                            "200": {

                              "description": "Successful operation",

                              "examples": {

                                "application/json": [

                                  {

                                    "id": "2930418",

                                    "name": "My organization"

                                  }

                                ]

                              }

                            }

                          }

                        }

                      }

                    }

                  }
              example: >-
                {

                  "swagger": "2.0",

                  "info": {

                    "version": "v0",

                    "title": "Meraki Dashboard API",

                    "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"

                  },

                  "paths": {

                    "/organizations": {

                      "get": {

                        "description": "List the organizations that the user has privileges on",

                        "operationId": "getOrganizations",

                        "responses": {

                          "200": {

                            "description": "Successful operation",

                            "examples": {

                              "application/json": [

                                {

                                  "id": "2930418",

                                  "name": "My organization"

                                }

                              ]

                            }

                          }

                        }

                      }

                    }

                  }

                }
      deprecated: false
  /organizations/{organizationId}:
    put:
      tags:
      - Organizations
      summary: updateOrganization
      description: Update an organization
      operationId: updateOrganization
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganization'
            example:
              name: My organization
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }
              example: >-
                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }
      deprecated: false
    delete:
      tags:
      - Organizations
      summary: deleteOrganization
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    get:
      tags:
      - Organizations
      summary: getOrganization
      description: Return an organization
      operationId: getOrganization
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }
              example: >-
                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }
      deprecated: false
  /organizations:
    post:
      tags:
      - Organizations
      summary: createOrganization
      description: Create a new organization
      operationId: createOrganization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganization'
            example:
              name: My organization
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }
              example: >-
                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }
      deprecated: false
    get:
      tags:
      - Organizations
      summary: getOrganizations
      description: List the organizations that the user has privileges on
      operationId: getOrganizations
      parameters: []
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
                example: >-
                  [

                    {

                      "id": "2930418",

                      "name": "My organization",

                      "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/clone:
    post:
      tags:
      - Organizations
      summary: cloneOrganization
      description: Create a new organization by cloning the addressed organization
      operationId: cloneOrganization
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloneOrganization'
            example:
              name: My organization
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "2930418",

                    "name": "My organization",

                    "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                  }
              example: >-
                {

                  "id": "2930418",

                  "name": "My organization",

                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"

                }
      deprecated: false
  /organizations/{organizationId}/inventory:
    get:
      tags:
      - Organizations
      summary: getOrganizationInventory
      description: Return the inventory for an organization
      operationId: getOrganizationInventory
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: includeLicenseInfo
        in: query
        description: When this parameter is true, each entity in the response will include the license expiration date of the device (if any). Only applies to organizations that support per-device licensing. Defaults to false.
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "mac": "00:11:22:33:44:55",

                      "serial": "Q234-ABCD-5678",

                      "networkId": "N_24329156",

                      "model": "MR34",

                      "claimedAt": 1518365681.0,

                      "publicIp": "123.123.123.1",

                      "name": "My AP"

                    }

                  ]
              example: >-
                [

                  {

                    "mac": "00:11:22:33:44:55",

                    "serial": "Q234-ABCD-5678",

                    "networkId": "N_24329156",

                    "model": "MR34",

                    "claimedAt": 1518365681.0,

                    "publicIp": "123.123.123.1",

                    "name": "My AP"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/claim:
    post:
      tags:
      - Organizations
      summary: claimOrganization
      description: Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.
      operationId: claimOrganization
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/claimOrganization'
            example:
              orders:
              - 4CXXXXXXX
              serials:
              - Q234-ABCD-5678
              licenses:
              - key: Z2XXXXXXXXXX
                mode: addDevices
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "orders": [

                      "4CXXXXXXX"

                    ],

                    "serials": [

                      "Q234-ABCD-5678"

                    ],

                    "licenses": [

                      {

                        "key": "Z2XXXXXXXXXX",

                        "mode": "addDevices"

                      }

                    ]

                  }
              example: >-
                {

                  "orders": [

                    "4CXXXXXXX"

                  ],

                  "serials": [

                    "Q234-ABCD-5678"

                  ],

                  "licenses": [

                    {

                      "key": "Z2XXXXXXXXXX",

                      "mode": "addDevices"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/thirdPartyVPNPeers:
    put:
      tags:
      - Organizations
      summary: updateOrganizationThirdPartyVPNPeers
      description: Update the third party VPN peers for an organization
      operationId: updateOrganizationThirdPartyVPNPeers
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationThirdPartyVPNPeers'
            example:
              peers:
              - name: My peer 1
                publicIp: 123.123.123.1
                privateSubnets:
                - 192.168.1.0/24
                - 192.168.128.0/24
                secret: asdf1234
                ipsecPolicies:
                  ikeCipherAlgo:
                  - tripledes
                  ikeAuthAlgo:
                  - sha1
                  ikeDiffieHellmanGroup:
                  - group2
                  ikeLifetime: 28800
                  childCipherAlgo:
                  - aes128
                  childAuthAlgo:
                  - sha1
                  childPfsGroup:
                  - disabled
                  childLifetime: 28800
              - name: My peer 2
                publicIp: 123.123.123.2
                remoteId: miles@meraki.com
                privateSubnets:
                - 192.168.2.0/24
                - 192.168.129.0/24
                secret: asdf56785678567856785678
                ipsecPoliciesPreset: default
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My peer 1",

                      "publicIp": "123.123.123.1",

                      "privateSubnets": [

                        "192.168.1.0/24",

                        "192.168.128.0/24"

                      ],

                      "secret": "asdf1234",

                      "ipsecPolicies": {

                        "ikeCipherAlgo": [

                          "tripledes"

                        ],

                        "ikeAuthAlgo": [

                          "sha1"

                        ],

                        "ikeDiffieHellmanGroup": [

                          "group2"

                        ],

                        "ikeLifetime": 28800,

                        "childCipherAlgo": [

                          "aes128"

                        ],

                        "childAuthAlgo": [

                          "sha1"

                        ],

                        "childPfsGroup": [

                          "disabled"

                        ],

                        "childLifetime": 28800

                      }

                    },

                    {

                      "name": "My peer 2",

                      "publicIp": "123.123.123.2",

                      "remoteId": "miles@meraki.com",

                      "privateSubnets": [

                        "192.168.2.0/24",

                        "192.168.129.0/24"

                      ],

                      "secret": "asdf56785678567856785678",

                      "ipsecPoliciesPreset": "default"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My peer 1",

                    "publicIp": "123.123.123.1",

                    "privateSubnets": [

                      "192.168.1.0/24",

                      "192.168.128.0/24"

                    ],

                    "secret": "asdf1234",

                    "ipsecPolicies": {

                      "ikeCipherAlgo": [

                        "tripledes"

                      ],

                      "ikeAuthAlgo": [

                        "sha1"

                      ],

                      "ikeDiffieHellmanGroup": [

                        "group2"

                      ],

                      "ikeLifetime": 28800,

                      "childCipherAlgo": [

                        "aes128"

                      ],

                      "childAuthAlgo": [

                        "sha1"

                      ],

                      "childPfsGroup": [

                        "disabled"

                      ],

                      "childLifetime": 28800

                    }

                  },

                  {

                    "name": "My peer 2",

                    "publicIp": "123.123.123.2",

                    "remoteId": "miles@meraki.com",

                    "privateSubnets": [

                      "192.168.2.0/24",

                      "192.168.129.0/24"

                    ],

                    "secret": "asdf56785678567856785678",

                    "ipsecPoliciesPreset": "default"

                  }

                ]
      deprecated: false
    get:
      tags:
      - Organizations
      summary: getOrganizationThirdPartyVPNPeers
      description: Return the third party VPN peers for an organization
      operationId: getOrganizationThirdPartyVPNPeers
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My peer 1",

                      "publicIp": "123.123.123.1",

                      "privateSubnets": [

                        "192.168.1.0/24",

                        "192.168.128.0/24"

                      ],

                      "secret": "asdf1234",

                      "ipsecPolicies": {

                        "ikeCipherAlgo": [

                          "tripledes"

                        ],

                        "ikeAuthAlgo": [

                          "sha1"

                        ],

                        "ikeDiffieHellmanGroup": [

                          "group2"

                        ],

                        "ikeLifetime": 28800,

                        "childCipherAlgo": [

                          "aes128"

                        ],

                        "childAuthAlgo": [

                          "sha1"

                        ],

                        "childPfsGroup": [

                          "disabled"

                        ],

                        "childLifetime": 28800

                      }

                    },

                    {

                      "name": "My peer 2",

                      "publicIp": "123.123.123.2",

                      "remoteId": "miles@meraki.com",

                      "privateSubnets": [

                        "192.168.2.0/24",

                        "192.168.129.0/24"

                      ],

                      "secret": "asdf56785678567856785678",

                      "ipsecPoliciesPreset": "default"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My peer 1",

                    "publicIp": "123.123.123.1",

                    "privateSubnets": [

                      "192.168.1.0/24",

                      "192.168.128.0/24"

                    ],

                    "secret": "asdf1234",

                    "ipsecPolicies": {

                      "ikeCipherAlgo": [

                        "tripledes"

                      ],

                      "ikeAuthAlgo": [

                        "sha1"

                      ],

                      "ikeDiffieHellmanGroup": [

                        "group2"

                      ],

                      "ikeLifetime": 28800,

                      "childCipherAlgo": [

                        "aes128"

                      ],

                      "childAuthAlgo": [

                        "sha1"

                      ],

                      "childPfsGroup": [

                        "disabled"

                      ],

                      "childLifetime": 28800

                    }

                  },

                  {

                    "name": "My peer 2",

                    "publicIp": "123.123.123.2",

                    "remoteId": "miles@meraki.com",

                    "privateSubnets": [

                      "192.168.2.0/24",

                      "192.168.129.0/24"

                    ],

                    "secret": "asdf56785678567856785678",

                    "ipsecPoliciesPreset": "default"

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/licenseState:
    get:
      tags:
      - Organizations
      summary: getOrganizationLicenseState
      description: Return an overview of the license state for an organization
      operationId: getOrganizationLicenseState
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "status": "OK",

                    "expirationDate": "Feb 8, 2020 UTC",

                    "licensedDeviceCounts": {

                      "MS": 100

                    }

                  }
              example: >-
                {

                  "status": "OK",

                  "expirationDate": "Feb 8, 2020 UTC",

                  "licensedDeviceCounts": {

                    "MS": 100

                  }

                }
      deprecated: false
  /organizations/{organizationId}/uplinksLossAndLatency:
    get:
      tags:
      - Organizations
      summary: getOrganizationUplinksLossAndLatency
      description: Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
      operationId: getOrganizationUplinksLossAndLatency
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: uplink
        in: query
        description: Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/uplink'
      - name: ip
        in: query
        description: Optional filter for a specific destination IP. Default will return all destination IPs.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "networkId": "N_12345",

                      "serial": "Q2AB-CDEF-GHIJ",

                      "uplink": "wan1",

                      "ip": "8.8.8.8",

                      "timeSeries": [

                        {

                          "ts": "2019-01-31T18:46:13Z",

                          "lossPercent": 5.3,

                          "latencyMs": 194.9

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "networkId": "N_12345",

                    "serial": "Q2AB-CDEF-GHIJ",

                    "uplink": "wan1",

                    "ip": "8.8.8.8",

                    "timeSeries": [

                      {

                        "ts": "2019-01-31T18:46:13Z",

                        "lossPercent": 5.3,

                        "latencyMs": 194.9

                      }

                    ]

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/deviceStatuses:
    get:
      tags:
      - Organizations
      summary: getOrganizationDeviceStatuses
      description: List the status of every Meraki device in the organization
      operationId: getOrganizationDeviceStatuses
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My AP",

                      "serial": "Q234-ABCD-5678",

                      "mac": "00:11:22:33:44:55",

                      "status": "online",

                      "lanIp": "1.2.3.4",

                      "publicIp": "123.123.123.1",

                      "networkId": "N_24329156"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My AP",

                    "serial": "Q234-ABCD-5678",

                    "mac": "00:11:22:33:44:55",

                    "status": "online",

                    "lanIp": "1.2.3.4",

                    "publicIp": "123.123.123.1",

                    "networkId": "N_24329156"

                  }

                ]
      deprecated: false
  /networks/{networkId}/pii/requests/{requestId}:
    get:
      tags:
      - PII
      summary: getNetworkPiiRequest
      description: >-
        Return a PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests/{requestId}

        ```
      operationId: getNetworkPiiRequest
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: requestId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "organizationWide": false,

                    "networkId": "N_1234",

                    "type": "delete",

                    "mac": "00:77:00:77:00:77",

                    "datasets": "['usage', 'events']",

                    "status": "Completed",

                    "createdAt": 1524692227,

                    "completedAt": 1524702227

                  }
              example: >-
                {

                  "id": "1234",

                  "organizationWide": false,

                  "networkId": "N_1234",

                  "type": "delete",

                  "mac": "00:77:00:77:00:77",

                  "datasets": "['usage', 'events']",

                  "status": "Completed",

                  "createdAt": 1524692227,

                  "completedAt": 1524702227

                }
      deprecated: false
    delete:
      tags:
      - PII
      summary: deleteNetworkPiiRequest
      description: >-
        Delete a restrict processing PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests/{requestId}

        ```
      operationId: deleteNetworkPiiRequest
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: requestId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/pii/smDevicesForKey:
    get:
      tags:
      - PII
      summary: getNetworkPiiSmDevicesForKey
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smDevicesForKey

        ```
      operationId: getNetworkPiiSmDevicesForKey
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: username
        in: query
        description: The username of a Systems Manager user
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: The email of a network user account or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: mac
        in: query
        description: The MAC of a network client device or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: serial
        in: query
        description: The serial of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: imei
        in: query
        description: The IMEI of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: bluetoothMac
        in: query
        description: The MAC of a Bluetooth client
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "N_1234": [

                      "1099541095293",

                      "8348382288234"

                    ]

                  }
              example: >-
                {

                  "N_1234": [

                    "1099541095293",

                    "8348382288234"

                  ]

                }
      deprecated: false
  /networks/{networkId}/pii/requests:
    get:
      tags:
      - PII
      summary: getNetworkPiiRequests
      description: >-
        List the PII requests for this network or organization


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests

        ```
      operationId: getNetworkPiiRequests
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "organizationWide": false,

                      "networkId": "N_1234",

                      "type": "delete",

                      "mac": "00:77:00:77:00:77",

                      "datasets": "['usage', 'events']",

                      "status": "Completed",

                      "createdAt": 1524692227,

                      "completedAt": 1524702227

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "organizationWide": false,

                    "networkId": "N_1234",

                    "type": "delete",

                    "mac": "00:77:00:77:00:77",

                    "datasets": "['usage', 'events']",

                    "status": "Completed",

                    "createdAt": 1524692227,

                    "completedAt": 1524702227

                  }

                ]
      deprecated: false
    post:
      tags:
      - PII
      summary: createNetworkPiiRequest
      description: >-
        Submit a new delete or restrict processing PII request


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/requests

        ```
      operationId: createNetworkPiiRequest
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkPiiRequest'
            example:
              type: delete
              datasets:
              - usage
              - events
              mac: 00:77:00:77:00:77
        required: false
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "organizationWide": false,

                    "networkId": "N_1234",

                    "type": "delete",

                    "mac": "00:77:00:77:00:77",

                    "datasets": "['usage', 'events']",

                    "status": "Not visible in Dashboard; database deletion in process",

                    "createdAt": 1524692227,

                    "completedAt": null

                  }
              example: >-
                {

                  "id": "1234",

                  "organizationWide": false,

                  "networkId": "N_1234",

                  "type": "delete",

                  "mac": "00:77:00:77:00:77",

                  "datasets": "['usage', 'events']",

                  "status": "Not visible in Dashboard; database deletion in process",

                  "createdAt": 1524692227,

                  "completedAt": null

                }
      deprecated: false
  /networks/{networkId}/pii/piiKeys:
    get:
      tags:
      - PII
      summary: getNetworkPiiPiiKeys
      description: >-
        List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key "0" containing the applicable keys.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/piiKeys

        ```
      operationId: getNetworkPiiPiiKeys
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: username
        in: query
        description: The username of a Systems Manager user
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: The email of a network user account or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: mac
        in: query
        description: The MAC of a network client device or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: serial
        in: query
        description: The serial of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: imei
        in: query
        description: The IMEI of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: bluetoothMac
        in: query
        description: The MAC of a Bluetooth client
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "N_1234": {

                      "macs": [

                        "00:77:00:77:00:77"

                      ],

                      "emails": [

                        "fake@example.com"

                      ],

                      "usernames": [

                        "fakename"

                      ],

                      "serials": [

                        "abcd1234"

                      ],

                      "imeis": [

                        "990000862471854"

                      ],

                      "bluetoothMacs": [

                        "00:77:00:77:00:77"

                      ]

                    }

                  }
              example: >-
                {

                  "N_1234": {

                    "macs": [

                      "00:77:00:77:00:77"

                    ],

                    "emails": [

                      "fake@example.com"

                    ],

                    "usernames": [

                      "fakename"

                    ],

                    "serials": [

                      "abcd1234"

                    ],

                    "imeis": [

                      "990000862471854"

                    ],

                    "bluetoothMacs": [

                      "00:77:00:77:00:77"

                    ]

                  }

                }
      deprecated: false
  /networks/{networkId}/pii/smOwnersForKey:
    get:
      tags:
      - PII
      summary: getNetworkPiiSmOwnersForKey
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smOwnersForKey

        ```
      operationId: getNetworkPiiSmOwnersForKey
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: username
        in: query
        description: The username of a Systems Manager user
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: The email of a network user account or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: mac
        in: query
        description: The MAC of a network client device or a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: serial
        in: query
        description: The serial of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: imei
        in: query
        description: The IMEI of a Systems Manager device
        style: form
        explode: true
        schema:
          type: string
      - name: bluetoothMac
        in: query
        description: The MAC of a Bluetooth client
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "N_1234": [

                      "1099541095293"

                    ]

                  }
              example: >-
                {

                  "N_1234": [

                    "1099541095293"

                  ]

                }
      deprecated: false
  /networks/{networkId}/wireless/rfProfiles/{rfProfileId}:
    put:
      tags:
      - Radio settings
      summary: updateNetworkWirelessRfProfile
      description: Updates specified RF profile for this network
      operationId: updateNetworkWirelessRfProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: rfProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkWirelessRfProfile'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Some Custom RF Profile",

                  "clientBalancingEnabled": true,

                  "minBitrateType": "band",

                  "bandSelectionType": "ap",

                  "apSelectionSettings": {

                    "bandOperationMode": "dual",

                    "bandSteeringEnabled": true

                  },

                  "twoFourGhzSettings": {

                    "maxPower": 30,

                    "minPower": 5,

                    "minBitrate": 11,

                    "rxsop": null,

                    "validAutoChannels": [

                      1,

                      6,

                      11

                    ],

                    "axEnabled": true

                  },

                  "fiveGhzSettings": {

                    "maxPower": 30,

                    "minPower": 8,

                    "minBitrate": 12,

                    "rxsop": null,

                    "validAutoChannels": [

                      36,

                      40,

                      44,

                      48,

                      52,

                      56,

                      60,

                      64,

                      100,

                      104,

                      108,

                      112,

                      116,

                      120,

                      124,

                      128,

                      132,

                      136,

                      140,

                      144,

                      149,

                      153,

                      157,

                      161,

                      165

                    ],

                    "channelWidth": "auto"

                  }

                }
      deprecated: false
    delete:
      tags:
      - Radio settings
      summary: deleteNetworkWirelessRfProfile
      description: Delete a RF Profile
      operationId: deleteNetworkWirelessRfProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: rfProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    get:
      tags:
      - Radio settings
      summary: getNetworkWirelessRfProfile
      description: Return a RF profile
      operationId: getNetworkWirelessRfProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: rfProfileId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Some Custom RF Profile",

                  "clientBalancingEnabled": true,

                  "minBitrateType": "band",

                  "bandSelectionType": "ap",

                  "apSelectionSettings": {

                    "bandOperationMode": "dual",

                    "bandSteeringEnabled": true

                  },

                  "twoFourGhzSettings": {

                    "maxPower": 30,

                    "minPower": 5,

                    "minBitrate": 11,

                    "rxsop": null,

                    "validAutoChannels": [

                      1,

                      6,

                      11

                    ],

                    "axEnabled": true

                  },

                  "fiveGhzSettings": {

                    "maxPower": 30,

                    "minPower": 8,

                    "minBitrate": 12,

                    "rxsop": null,

                    "validAutoChannels": [

                      36,

                      40,

                      44,

                      48,

                      52,

                      56,

                      60,

                      64,

                      100,

                      104,

                      108,

                      112,

                      116,

                      120,

                      124,

                      128,

                      132,

                      136,

                      140,

                      144,

                      149,

                      153,

                      157,

                      161,

                      165

                    ],

                    "channelWidth": "auto"

                  }

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/wireless/radioSettings:
    get:
      tags:
      - Radio settings
      summary: getNetworkDeviceWirelessRadioSettings
      description: Return the radio settings of a device
      operationId: getNetworkDeviceWirelessRadioSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "serial": "Q234-ABCD-5678",

                    "rfProfileId": "1234"

                  }
              example: >-
                {

                  "serial": "Q234-ABCD-5678",

                  "rfProfileId": "1234"

                }
      deprecated: false
    put:
      tags:
      - Radio settings
      summary: updateNetworkDeviceWirelessRadioSettings
      description: Update the radio settings of a device
      operationId: updateNetworkDeviceWirelessRadioSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkDeviceWirelessRadioSettings'
            example:
              rfProfileId: 1234
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "serial": "Q234-ABCD-5678",

                    "rfProfileId": "1234"

                  }
              example: >-
                {

                  "serial": "Q234-ABCD-5678",

                  "rfProfileId": "1234"

                }
      deprecated: false
  /networks/{networkId}/wireless/rfProfiles:
    get:
      tags:
      - Radio settings
      summary: getNetworkWirelessRfProfiles
      description: List the non-basic RF profiles for this network
      operationId: getNetworkWirelessRfProfiles
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: includeTemplateProfiles
        in: query
        description: >2
              If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template
              should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Some Custom RF Profile",

                      "clientBalancingEnabled": true,

                      "minBitrateType": "band",

                      "bandSelectionType": "ap",

                      "apSelectionSettings": {

                        "bandOperationMode": "dual",

                        "bandSteeringEnabled": true

                      },

                      "twoFourGhzSettings": {

                        "maxPower": 30,

                        "minPower": 5,

                        "minBitrate": 11,

                        "rxsop": null,

                        "validAutoChannels": [

                          1,

                          6,

                          11

                        ],

                        "axEnabled": true

                      },

                      "fiveGhzSettings": {

                        "maxPower": 30,

                        "minPower": 8,

                        "minBitrate": 12,

                        "rxsop": null,

                        "validAutoChannels": [

                          36,

                          40,

                          44,

                          48,

                          52,

                          56,

                          60,

                          64,

                          100,

                          104,

                          108,

                          112,

                          116,

                          120,

                          124,

                          128,

                          132,

                          136,

                          140,

                          144,

                          149,

                          153,

                          157,

                          161,

                          165

                        ],

                        "channelWidth": "auto"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }

                ]
      deprecated: false
    post:
      tags:
      - Radio settings
      summary: createNetworkWirelessRfProfile
      description: Creates new RF profile for this network
      operationId: createNetworkWirelessRfProfile
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkWirelessRfProfile'
            example: {}
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Some Custom RF Profile",

                    "clientBalancingEnabled": true,

                    "minBitrateType": "band",

                    "bandSelectionType": "ap",

                    "apSelectionSettings": {

                      "bandOperationMode": "dual",

                      "bandSteeringEnabled": true

                    },

                    "twoFourGhzSettings": {

                      "maxPower": 30,

                      "minPower": 5,

                      "minBitrate": 11,

                      "rxsop": null,

                      "validAutoChannels": [

                        1,

                        6,

                        11

                      ],

                      "axEnabled": true

                    },

                    "fiveGhzSettings": {

                      "maxPower": 30,

                      "minPower": 8,

                      "minBitrate": 12,

                      "rxsop": null,

                      "validAutoChannels": [

                        36,

                        40,

                        44,

                        48,

                        52,

                        56,

                        60,

                        64,

                        100,

                        104,

                        108,

                        112,

                        116,

                        120,

                        124,

                        128,

                        132,

                        136,

                        140,

                        144,

                        149,

                        153,

                        157,

                        161,

                        165

                      ],

                      "channelWidth": "auto"

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Some Custom RF Profile",

                  "clientBalancingEnabled": true,

                  "minBitrateType": "band",

                  "bandSelectionType": "ap",

                  "apSelectionSettings": {

                    "bandOperationMode": "dual",

                    "bandSteeringEnabled": true

                  },

                  "twoFourGhzSettings": {

                    "maxPower": 30,

                    "minPower": 5,

                    "minBitrate": 11,

                    "rxsop": null,

                    "validAutoChannels": [

                      1,

                      6,

                      11

                    ],

                    "axEnabled": true

                  },

                  "fiveGhzSettings": {

                    "maxPower": 30,

                    "minPower": 8,

                    "minBitrate": 12,

                    "rxsop": null,

                    "validAutoChannels": [

                      36,

                      40,

                      44,

                      48,

                      52,

                      56,

                      60,

                      64,

                      100,

                      104,

                      108,

                      112,

                      116,

                      120,

                      124,

                      128,

                      132,

                      136,

                      140,

                      144,

                      149,

                      153,

                      157,

                      161,

                      165

                    ],

                    "channelWidth": "auto"

                  }

                }
      deprecated: false
  /organizations/{organizationId}/samlRoles:
    post:
      tags:
      - SAML roles
      summary: createOrganizationSamlRole
      description: Create a SAML role
      operationId: createOrganizationSamlRole
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrganizationSamlRole'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "TEdJIEN1c3RvbWVy",

                    "role": "myrole",

                    "orgAccess": "none",

                    "networks": [

                      {

                        "id": "N_1234",

                        "access": "full"

                      }

                    ],

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "TEdJIEN1c3RvbWVy",

                  "role": "myrole",

                  "orgAccess": "none",

                  "networks": [

                    {

                      "id": "N_1234",

                      "access": "full"

                    }

                  ],

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - SAML roles
      summary: getOrganizationSamlRoles
      description: List the SAML roles for this organization
      operationId: getOrganizationSamlRoles
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "TEdJIEN1c3RvbWVy",

                      "role": "myrole",

                      "orgAccess": "none",

                      "networks": [

                        {

                          "id": "N_1234",

                          "access": "full"

                        }

                      ],

                      "tags": [

                        {

                          "tag": "west",

                          "access": "read-only"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "TEdJIEN1c3RvbWVy",

                    "role": "myrole",

                    "orgAccess": "none",

                    "networks": [

                      {

                        "id": "N_1234",

                        "access": "full"

                      }

                    ],

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ]

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/samlRoles/{samlRoleId}:
    get:
      tags:
      - SAML roles
      summary: getOrganizationSamlRole
      description: Return a SAML role
      operationId: getOrganizationSamlRole
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: samlRoleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "TEdJIEN1c3RvbWVy",

                    "role": "myrole",

                    "orgAccess": "none",

                    "networks": [

                      {

                        "id": "N_1234",

                        "access": "full"

                      }

                    ],

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "TEdJIEN1c3RvbWVy",

                  "role": "myrole",

                  "orgAccess": "none",

                  "networks": [

                    {

                      "id": "N_1234",

                      "access": "full"

                    }

                  ],

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ]

                }
      deprecated: false
    delete:
      tags:
      - SAML roles
      summary: deleteOrganizationSamlRole
      description: Remove a SAML role
      operationId: deleteOrganizationSamlRole
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: samlRoleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - SAML roles
      summary: updateOrganizationSamlRole
      description: Update a SAML role
      operationId: updateOrganizationSamlRole
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: samlRoleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationSamlRole'
            example: {}
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "TEdJIEN1c3RvbWVy",

                    "role": "myrole",

                    "orgAccess": "none",

                    "networks": [

                      {

                        "id": "N_1234",

                        "access": "full"

                      }

                    ],

                    "tags": [

                      {

                        "tag": "west",

                        "access": "read-only"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "TEdJIEN1c3RvbWVy",

                  "role": "myrole",

                  "orgAccess": "none",

                  "networks": [

                    {

                      "id": "N_1234",

                      "access": "full"

                    }

                  ],

                  "tags": [

                    {

                      "tag": "west",

                      "access": "read-only"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/sm/profiles:
    get:
      tags:
      - SM
      summary: getNetworkSmProfiles
      description: List all the profiles in the network
      operationId: getNetworkSmProfiles
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/SmProfile'
                description: Successful operation
                example: >-
                  {

                    "profiles": [

                      {

                        "id": "1234",

                        "payload_display_name": "API Profile",

                        "payload_identifier": "com.meraki.sm.1",

                        "payload_description": "API docs test",

                        "scope": "some",

                        "tags": [

                          "tag1",

                          "tag2"

                        ],

                        "wifis": [],

                        "payload_types": [

                          "Privacy",

                          "Document"

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "profiles": [

                    {

                      "id": "1234",

                      "payload_display_name": "API Profile",

                      "payload_identifier": "com.meraki.sm.1",

                      "payload_description": "API docs test",

                      "scope": "some",

                      "tags": [

                        "tag1",

                        "tag2"

                      ],

                      "wifis": [],

                      "payload_types": [

                        "Privacy",

                        "Document"

                      ]

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/sm/user/{userId}/softwares:
    get:
      tags:
      - SM
      summary: getNetworkSmUserSoftwares
      description: Get a list of softwares associated with a user
      operationId: getNetworkSmUserSoftwares
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "appId": "1234",

                      "bundleSize": null,

                      "createdAt": "2018-02-11T00:00:00Z",

                      "deviceId": "1234",

                      "dynamicSize": null,

                      "id": "1284392014819",

                      "identifier": "com.test.app",

                      "installedAt": "2018-05-12T00:00:00Z",

                      "toInstall": null,

                      "iosRedemptionCode": null,

                      "isManaged": true,

                      "itunesId": null,

                      "licenseKey": null,

                      "name": "My app",

                      "path": "/Path/to/app.app",

                      "redemptionCode": null,

                      "shortVersion": null,

                      "status": null,

                      "toUninstall": false,

                      "uninstalledAt": null,

                      "updatedAt": "2018-05-12T00:00:00Z",

                      "vendor": "Apple",

                      "version": "0.1"

                    }

                  ]
              example: >-
                [

                  {

                    "appId": "1234",

                    "bundleSize": null,

                    "createdAt": "2018-02-11T00:00:00Z",

                    "deviceId": "1234",

                    "dynamicSize": null,

                    "id": "1284392014819",

                    "identifier": "com.test.app",

                    "installedAt": "2018-05-12T00:00:00Z",

                    "toInstall": null,

                    "iosRedemptionCode": null,

                    "isManaged": true,

                    "itunesId": null,

                    "licenseKey": null,

                    "name": "My app",

                    "path": "/Path/to/app.app",

                    "redemptionCode": null,

                    "shortVersion": null,

                    "status": null,

                    "toUninstall": false,

                    "uninstalledAt": null,

                    "updatedAt": "2018-05-12T00:00:00Z",

                    "vendor": "Apple",

                    "version": "0.1"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/devices/checkin:
    put:
      tags:
      - SM
      summary: checkinNetworkSmDevices
      description: Force check-in a set of devices
      operationId: checkinNetworkSmDevices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkinNetworkSmDevices'
            example:
              ids: '"1284392014819"'
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/deviceProfiles:
    get:
      tags:
      - SM
      summary: getNetworkSmDeviceProfiles
      description: Get the profiles associated with a device
      operationId: getNetworkSmDeviceProfiles
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "deviceId": "1234",

                      "id": "1284392014819",

                      "isEncrypted": true,

                      "isManaged": true,

                      "profileData": {},

                      "profileIdentifier": "com.test.app",

                      "name": "My profile",

                      "version": "0.0.1"

                    }

                  ]
              example: >-
                [

                  {

                    "deviceId": "1234",

                    "id": "1284392014819",

                    "isEncrypted": true,

                    "isManaged": true,

                    "profileData": {},

                    "profileIdentifier": "com.test.app",

                    "name": "My profile",

                    "version": "0.0.1"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/networkAdapters:
    get:
      tags:
      - SM
      summary: getNetworkSmNetworkAdapters
      description: List the network adapters of a device
      operationId: getNetworkSmNetworkAdapters
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "dhcpServer": "123.123.123.1",

                      "dnsServer": "8.8.8.8, 8.8.4.4",

                      "gateway": "1.2.3.5",

                      "id": "1284392014819",

                      "ip": "1.2.3.4",

                      "mac": "00:11:22:33:44:55",

                      "name": "en0",

                      "subnet": "255.255.255.0"

                    }

                  ]
              example: >-
                [

                  {

                    "dhcpServer": "123.123.123.1",

                    "dnsServer": "8.8.8.8, 8.8.4.4",

                    "gateway": "1.2.3.5",

                    "id": "1284392014819",

                    "ip": "1.2.3.4",

                    "mac": "00:11:22:33:44:55",

                    "name": "en0",

                    "subnet": "255.255.255.0"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/app/polaris:
    get:
      tags:
      - SM
      summary: getNetworkSmAppPolaris
      description: Get details for a Cisco Polaris app if it exists
      operationId: getNetworkSmAppPolaris
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: bundleId
        in: query
        description: The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app
        style: form
        explode: true
        schema:
          type: string
          example: com.cisco.polaris
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "app_id": "123456",

                    "bundle_id": "com.cisco.polaris",

                    "scope": "withAny",

                    "tags": " tag1 tag2 ",

                    "prevent_auto_install": true,

                    "uses_vpp": true

                  }
              example: >-
                {

                  "app_id": "123456",

                  "bundle_id": "com.cisco.polaris",

                  "scope": "withAny",

                  "tags": " tag1 tag2 ",

                  "prevent_auto_install": true,

                  "uses_vpp": true

                }
      deprecated: false
    post:
      tags:
      - SM
      summary: createNetworkSmAppPolaris
      description: Create a new Polaris app
      operationId: createNetworkSmAppPolaris
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSmAppPolaris'
            example:
              scope: withAny, tag1, tag2
              manifestUrl: https://website.com/assets/manifest.plist
              preventAutoInstall: true
              usesVPP: true
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true,

                    "app_id": "123456",

                    "bundle_id": "com.cisco.polaris",

                    "scope": "withAny",

                    "tags": " tag1 tag2 ",

                    "prevent_auto_install": true,

                    "uses_vpp": true

                  }
              example: >-
                {

                  "success": true,

                  "app_id": "123456",

                  "bundle_id": "com.cisco.polaris",

                  "scope": "withAny",

                  "tags": " tag1 tag2 ",

                  "prevent_auto_install": true,

                  "uses_vpp": true

                }
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/cellularUsageHistory:
    get:
      tags:
      - SM
      summary: getNetworkSmCellularUsageHistory
      description: Return the client's daily cellular data usage history. Usage data is in kilobytes.
      operationId: getNetworkSmCellularUsageHistory
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "sent": 138.0,

                    "recv": 61.0,

                    "ts": 1526087474

                  }
              example: >-
                {

                  "sent": 138.0,

                  "recv": 61.0,

                  "ts": 1526087474

                }
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/certs:
    get:
      tags:
      - SM
      summary: getNetworkSmCerts
      description: List the certs on a device
      operationId: getNetworkSmCerts
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "My Cert",

                      "notValidAfter": "May 12, 2018",

                      "notValidBefore": "Feb 11, 2018",

                      "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",

                      "deviceId": "1234",

                      "issuer": "",

                      "subject": "",

                      "id": "15"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "My Cert",

                    "notValidAfter": "May 12, 2018",

                    "notValidBefore": "Feb 11, 2018",

                    "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",

                    "deviceId": "1234",

                    "issuer": "",

                    "subject": "",

                    "id": "15"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/app/polaris/{appId}:
    put:
      tags:
      - SM
      summary: updateNetworkSmAppPolaris
      description: Update an existing Polaris app
      operationId: updateNetworkSmAppPolaris
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: appId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSmAppPolaris'
            example:
              scope: withAny, tag1, tag2
              preventAutoInstall: true
              usesVPP: true
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true,

                    "app_id": "123456",

                    "bundle_id": "com.cisco.polaris",

                    "scope": "withAny",

                    "tags": " tag1 tag2 ",

                    "prevent_auto_install": true,

                    "uses_vpp": true

                  }
              example: >-
                {

                  "success": true,

                  "app_id": "123456",

                  "bundle_id": "com.cisco.polaris",

                  "scope": "withAny",

                  "tags": " tag1 tag2 ",

                  "prevent_auto_install": true,

                  "uses_vpp": true

                }
      deprecated: false
    delete:
      tags:
      - SM
      summary: deleteNetworkSmAppPolaris
      description: Delete a Cisco Polaris app
      operationId: deleteNetworkSmAppPolaris
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: appId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/sm/user/{userId}/deviceProfiles:
    get:
      tags:
      - SM
      summary: getNetworkSmUserDeviceProfiles
      description: Get the profiles associated with a user
      operationId: getNetworkSmUserDeviceProfiles
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: userId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "deviceId": "1234",

                      "id": "1284392014819",

                      "isEncrypted": true,

                      "isManaged": true,

                      "profileData": {},

                      "profileIdentifier": "com.test.app",

                      "name": "My profile",

                      "version": "0.0.1"

                    }

                  ]
              example: >-
                [

                  {

                    "deviceId": "1234",

                    "id": "1284392014819",

                    "isEncrypted": true,

                    "isManaged": true,

                    "profileData": {},

                    "profileIdentifier": "com.test.app",

                    "name": "My profile",

                    "version": "0.0.1"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/users:
    get:
      tags:
      - SM
      summary: getNetworkSmUsers
      description: List the owners in an SM network with various specified fields and filters
      operationId: getNetworkSmUsers
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: ids
        in: query
        description: Filter users by id(s). Multiple ids can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: usernames
        in: query
        description: Filter users by username(s). Multiple usernames can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: emails
        in: query
        description: Filter users by email(s). Multiple emails can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        description: Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmUser'
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "email": "miles@meraki.com",

                      "fullName": "Miles Meraki",

                      "username": "",

                      "hasPassword": false,

                      "tags": [

                        "tag1",

                        "tag2"

                      ],

                      "adGroups": [],

                      "asmGroups": [],

                      "isExternal": false,

                      "displayName": "Miles Meraki <miles@meraki.com>",

                      "hasIdentityCertificate": false,

                      "userThumbnail": "https://s3.amazonaws.com/image.extension"

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "email": "miles@meraki.com",

                    "fullName": "Miles Meraki",

                    "username": "",

                    "hasPassword": false,

                    "tags": [

                      "tag1",

                      "tag2"

                    ],

                    "adGroups": [],

                    "asmGroups": [],

                    "isExternal": false,

                    "displayName": "Miles Meraki <miles@meraki.com>",

                    "hasIdentityCertificate": false,

                    "userThumbnail": "https://s3.amazonaws.com/image.extension"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/softwares:
    get:
      tags:
      - SM
      summary: getNetworkSmSoftwares
      description: Get a list of softwares associated with a device
      operationId: getNetworkSmSoftwares
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "appId": "1234",

                      "bundleSize": null,

                      "createdAt": "2018-02-11T00:00:00Z",

                      "deviceId": "1234",

                      "dynamicSize": null,

                      "id": "1284392014819",

                      "identifier": "com.test.app",

                      "installedAt": "2018-05-12T00:00:00Z",

                      "toInstall": null,

                      "iosRedemptionCode": null,

                      "isManaged": true,

                      "itunesId": null,

                      "licenseKey": null,

                      "name": "My app",

                      "path": "/Path/to/app.app",

                      "redemptionCode": null,

                      "shortVersion": null,

                      "status": null,

                      "toUninstall": false,

                      "uninstalledAt": null,

                      "updatedAt": "2018-05-12T00:00:00Z",

                      "vendor": "Apple",

                      "version": "0.1"

                    }

                  ]
              example: >-
                [

                  {

                    "appId": "1234",

                    "bundleSize": null,

                    "createdAt": "2018-02-11T00:00:00Z",

                    "deviceId": "1234",

                    "dynamicSize": null,

                    "id": "1284392014819",

                    "identifier": "com.test.app",

                    "installedAt": "2018-05-12T00:00:00Z",

                    "toInstall": null,

                    "iosRedemptionCode": null,

                    "isManaged": true,

                    "itunesId": null,

                    "licenseKey": null,

                    "name": "My app",

                    "path": "/Path/to/app.app",

                    "redemptionCode": null,

                    "shortVersion": null,

                    "status": null,

                    "toUninstall": false,

                    "uninstalledAt": null,

                    "updatedAt": "2018-05-12T00:00:00Z",

                    "vendor": "Apple",

                    "version": "0.1"

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/restrictions:
    get:
      tags:
      - SM
      summary: getNetworkSmRestrictions
      description: List the restrictions on a device
      operationId: getNetworkSmRestrictions
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "profile": "com.meraki.sm.1",

                      "restrictions": {

                        "myRestriction": {

                          "value": true

                        }

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "profile": "com.meraki.sm.1",

                    "restrictions": {

                      "myRestriction": {

                        "value": true

                      }

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/wlanLists:
    get:
      tags:
      - SM
      summary: getNetworkSmWlanLists
      description: List the saved SSID names on a device
      operationId: getNetworkSmWlanLists
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "createdAt": "2018-02-11T00:00:00Z",

                      "id": "1284392014819",

                      "xml": "Preferred networks on en0:"

                    }

                  ]
              example: >-
                [

                  {

                    "createdAt": "2018-02-11T00:00:00Z",

                    "id": "1284392014819",

                    "xml": "Preferred networks on en0:"

                  }

                ]
      deprecated: false
  /networks/{network_id}/sm/{id}/deviceCommandLogs:
    get:
      tags:
      - SM
      summary: getNetworkSmDeviceCommandLogs
      description: >2
            Return historical records of commands sent to Systems Manager devices.
            <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated
            by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out
            of any reports.</p>
      operationId: getNetworkSmDeviceCommandLogs
      parameters:
      - name: network_id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "action": "UpdateProfile",

                      "name": "My profile",

                      "details": "{}",

                      "dashboardUser": "Miles Meraki",

                      "ts": 1526087474.0

                    }

                  ]
              example: >-
                [

                  {

                    "action": "UpdateProfile",

                    "name": "My profile",

                    "details": "{}",

                    "dashboardUser": "Miles Meraki",

                    "ts": 1526087474.0

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}:
    get:
      tags:
      - SM
      summary: getNetworkSmBypassActivationLockAttempt
      description: Bypass activation lock attempt status
      operationId: getNetworkSmBypassActivationLockAttempt
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: attemptId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "status": "complete",

                    "data": {

                      "38290139892": {

                        "success": true

                      },

                      "2090938209": {

                        "success": false,

                        "errors": [

                          "Activation lock bypass code not known for this device"

                        ]

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "status": "complete",

                  "data": {

                    "38290139892": {

                      "success": true

                    },

                    "2090938209": {

                      "success": false,

                      "errors": [

                        "Activation lock bypass code not known for this device"

                      ]

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/sm/device/{deviceId}/refreshDetails:
    post:
      tags:
      - SM
      summary: refreshNetworkSmDeviceDetails
      description: Refresh the details of a device
      operationId: refreshNetworkSmDeviceDetails
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/sm/devices/move:
    put:
      tags:
      - SM
      summary: moveNetworkSmDevices
      description: Move a set of devices to a new network
      operationId: moveNetworkSmDevices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveNetworkSmDevices'
            example:
              ids: '"1284392014819"'
              newNetwork: N_24329156
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{network_id}/sm/devices/lock:
    put:
      tags:
      - SM
      summary: lockNetworkSmDevices
      description: Lock a set of devices
      operationId: lockNetworkSmDevices
      parameters:
      - name: network_id
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lockNetworkSmDevices'
            example:
              ids: '"1284392014819"'
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/sm/device/fields:
    put:
      tags:
      - SM
      summary: updateNetworkSmDeviceFields
      description: Modify the fields of a device
      operationId: updateNetworkSmDeviceFields
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSmDeviceFields'
            example:
              id: 1284392014819
              deviceFields:
                name: Miles's phone
                notes: Here's some info about my device
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": [

                      {

                        "id": "1284392014819",

                        "serial": "F5XKHEBX",

                        "wifiMac": "00:11:22:33:44:55",

                        "name": "Miles's phone",

                        "notes": "Here's some info about my device"

                      }

                    ]

                  }
              example: >-
                {

                  "success": [

                    {

                      "id": "1284392014819",

                      "serial": "F5XKHEBX",

                      "wifiMac": "00:11:22:33:44:55",

                      "name": "Miles's phone",

                      "notes": "Here's some info about my device"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/sm/{deviceId}/securityCenters:
    get:
      tags:
      - SM
      summary: getNetworkSmSecurityCenters
      description: List the security centers on a device
      operationId: getNetworkSmSecurityCenters
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "isRooted": true,

                      "hasAntiVirus": true,

                      "antiVirusName": "meraki_av",

                      "isFireWallEnabled": true,

                      "hasFireWallInstalled": true,

                      "fireWallName": "meraki_fw",

                      "isDiskEncrypted": true,

                      "isAutoLoginDisabled": true,

                      "id": "1284392014819",

                      "runningProcs": "/software,/software_2"

                    }

                  ]
              example: >-
                [

                  {

                    "isRooted": true,

                    "hasAntiVirus": true,

                    "antiVirusName": "meraki_av",

                    "isFireWallEnabled": true,

                    "hasFireWallInstalled": true,

                    "fireWallName": "meraki_fw",

                    "isDiskEncrypted": true,

                    "isAutoLoginDisabled": true,

                    "id": "1284392014819",

                    "runningProcs": "/software,/software_2"

                  }

                ]
      deprecated: false
  /networks/{network_id}/sm/{id}/connectivity:
    get:
      tags:
      - SM
      summary: getNetworkSmConnectivity
      description: Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
      operationId: getNetworkSmConnectivity
      parameters:
      - name: network_id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmConnectivity'
                description: Successful operation
                example: >-
                  [

                    {

                      "firstSeenAt": 1518365681.0,

                      "lastSeenAt": 1526087474.0

                    }

                  ]
              example: >-
                [

                  {

                    "firstSeenAt": 1518365681.0,

                    "lastSeenAt": 1526087474.0

                  }

                ]
      deprecated: false
  /networks/{network_id}/sm/{id}/performanceHistory:
    get:
      tags:
      - SM
      summary: getNetworkSmPerformanceHistory
      description: Return historical records of various Systems Manager client metrics for desktop devices.
      operationId: getNetworkSmPerformanceHistory
      parameters:
      - name: network_id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "cpuPercentUsed": 0.95,

                      "memFree": 1024,

                      "memWired": 4096,

                      "memActive": 1024,

                      "memInactive": 2048,

                      "networkSent": 512,

                      "networkReceived": 512,

                      "swapUsed": 768,

                      "diskUsage": {

                        "c": {

                          "used": 2048,

                          "space": 9096

                        }

                      },

                      "ts": 1526087474.0

                    }

                  ]
              example: >-
                [

                  {

                    "cpuPercentUsed": 0.95,

                    "memFree": 1024,

                    "memWired": 4096,

                    "memActive": 1024,

                    "memInactive": 2048,

                    "networkSent": 512,

                    "networkReceived": 512,

                    "swapUsed": 768,

                    "diskUsage": {

                      "c": {

                        "used": 2048,

                        "space": 9096

                      }

                    },

                    "ts": 1526087474.0

                  }

                ]
      deprecated: false
  /networks/{networkId}/sm/devices/{deviceId}/unenroll:
    post:
      tags:
      - SM
      summary: unenrollNetworkSmDevice
      description: Unenroll a device
      operationId: unenrollNetworkSmDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: deviceId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/sm/bypassActivationLockAttempts:
    post:
      tags:
      - SM
      summary: createNetworkSmBypassActivationLockAttempt
      description: Bypass activation lock attempt
      operationId: createNetworkSmBypassActivationLockAttempt
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSmBypassActivationLockAttempt'
            example:
              ids:
              - 1284392014819
              - 2983092129865
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "status": "pending",

                    "data": {}

                  }
              example: >-
                {

                  "id": "1234",

                  "status": "pending",

                  "data": {}

                }
      deprecated: false
  /networks/{networkId}/sm/device/wipe:
    put:
      tags:
      - SM
      summary: wipeNetworkSmDevice
      description: Wipe a device
      operationId: wipeNetworkSmDevice
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/wipeNetworkSmDevice'
            example:
              id: 1284392014819
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": true

                  }
              example: >-
                {

                  "success": true

                }
      deprecated: false
  /networks/{networkId}/sm/devices/tags:
    put:
      tags:
      - SM
      summary: updateNetworkSmDevicesTags
      description: Add, delete, or update the tags of a set of devices
      operationId: updateNetworkSmDevicesTags
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSmDevicesTags'
            example:
              scope: withAny, old_tag
              updateAction: add
              tags: tag1,tag2
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "success": [

                      {

                        "id": "1284392014819",

                        "serial": "F5XKHEBX",

                        "wifiMac": "00:11:22:33:44:55",

                        "tags": [

                          "tag1",

                          "tag2"

                        ]

                      }

                    ]

                  }
              example: >-
                {

                  "success": [

                    {

                      "id": "1284392014819",

                      "serial": "F5XKHEBX",

                      "wifiMac": "00:11:22:33:44:55",

                      "tags": [

                        "tag1",

                        "tag2"

                      ]

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/sm/devices:
    get:
      tags:
      - SM
      summary: getNetworkSmDevices
      description: List the devices enrolled in an SM network with various specified fields and filters
      operationId: getNetworkSmDevices
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: fields
        in: query
        description: >-
          Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.
              The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
              systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
              ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
              simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
              isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
              hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.
        style: form
        explode: true
        schema:
          type: string
      - name: wifiMacs
        in: query
        description: Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: serials
        in: query
        description: Filter devices by serial(s). Multiple serials can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: ids
        in: query
        description: Filter devices by id(s). Multiple ids can be passed in as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        description: Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.
        style: form
        explode: true
        schema:
          type: string
      - name: batchSize
        in: query
        description: Number of devices to return, 1000 is the default as well as the max.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: batchToken
        in: query
        description: >-
          If the network has more devices than the batch size, a batch token will be returned
              as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.
              Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in
              with the original request. Additional parameters passed in with the batchToken will be ignored.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/SmDevice'
                description: Successful operation
                example: >-
                  {

                    "devices": [

                      {

                        "id": "1284392014819",

                        "name": "Miles's phone",

                        "tags": [

                          "tag1",

                          "tag2"

                        ],

                        "ssid": "My SSID",

                        "wifiMac": "00:11:22:33:44:55",

                        "osName": "iOS 9.3.5",

                        "systemModel": "iPhone",

                        "uuid": "3d990628ede4c628d52",

                        "serialNumber": "F5XKHEBX",

                        "ip": "1.2.3.4"

                      }

                    ],

                    "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"

                  }
              example: >-
                {

                  "devices": [

                    {

                      "id": "1284392014819",

                      "name": "Miles's phone",

                      "tags": [

                        "tag1",

                        "tag2"

                      ],

                      "ssid": "My SSID",

                      "wifiMac": "00:11:22:33:44:55",

                      "osName": "iOS 9.3.5",

                      "systemModel": "iPhone",

                      "uuid": "3d990628ede4c628d52",

                      "serialNumber": "F5XKHEBX",

                      "ip": "1.2.3.4"

                    }

                  ],

                  "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"

                }
      deprecated: false
  /networks/{network_id}/sm/{id}/desktopLogs:
    get:
      tags:
      - SM
      summary: getNetworkSmDesktopLogs
      description: Return historical records of various Systems Manager network connection details for desktop devices.
      operationId: getNetworkSmDesktopLogs
      parameters:
      - name: network_id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: id
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "measuredAt": 1526087474.0,

                      "user": "milesmeraki",

                      "networkDevice": "NIC",

                      "networkDriver": "Driver",

                      "wifiChannel": "11",

                      "wifiAuth": "wpa-psk",

                      "wifiBssid": "00:11:22:33:44:55",

                      "wifiSsid": "ssid",

                      "wifiRssi": "-11",

                      "wifiNoise": "-99",

                      "dhcpServer": "1.2.3.4",

                      "ip": "1.2.3.4",

                      "networkMTU": "1500",

                      "subnet": "192.168.1.0/24",

                      "gateway": "1.2.3.5",

                      "publicIP": "123.123.123.1",

                      "dnsServer": "8",

                      "ts": 1526087474.0

                    }

                  ]
              example: >-
                [

                  {

                    "measuredAt": 1526087474.0,

                    "user": "milesmeraki",

                    "networkDevice": "NIC",

                    "networkDriver": "Driver",

                    "wifiChannel": "11",

                    "wifiAuth": "wpa-psk",

                    "wifiBssid": "00:11:22:33:44:55",

                    "wifiSsid": "ssid",

                    "wifiRssi": "-11",

                    "wifiNoise": "-99",

                    "dhcpServer": "1.2.3.4",

                    "ip": "1.2.3.4",

                    "networkMTU": "1500",

                    "subnet": "192.168.1.0/24",

                    "gateway": "1.2.3.5",

                    "publicIP": "123.123.123.1",

                    "dnsServer": "8",

                    "ts": 1526087474.0

                  }

                ]
      deprecated: false
  /networks/{networkId}/snmpSettings:
    get:
      tags:
      - SNMP settings
      summary: getNetworkSnmpSettings
      description: Return the SNMP settings for a network
      operationId: getNetworkSnmpSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "access": "users",

                    "users": [

                      {

                        "username": "AzureDiamond",

                        "passphrase": "hunter2"

                      }

                    ]

                  }
              example: >-
                {

                  "access": "users",

                  "users": [

                    {

                      "username": "AzureDiamond",

                      "passphrase": "hunter2"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - SNMP settings
      summary: updateNetworkSnmpSettings
      description: Update the SNMP settings for a network
      operationId: updateNetworkSnmpSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSnmpSettings'
            example:
              access: users
              users:
              - username: AzureDiamond
                passphrase: hunter2
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "access": "users",

                    "users": [

                      {

                        "username": "AzureDiamond",

                        "passphrase": "hunter2"

                      }

                    ]

                  }
              example: >-
                {

                  "access": "users",

                  "users": [

                    {

                      "username": "AzureDiamond",

                      "passphrase": "hunter2"

                    }

                  ]

                }
      deprecated: false
  /organizations/{organizationId}/snmp:
    get:
      tags:
      - SNMP settings
      summary: getOrganizationSnmp
      description: Return the SNMP settings for an organization
      operationId: getOrganizationSnmp
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "v2cEnabled": false,

                    "v3Enabled": true,

                    "v3AuthMode": "SHA",

                    "v3PrivMode": "AES128",

                    "peerIps": "123.123.123.1",

                    "hostname": "n1.meraki.com",

                    "port": 443

                  }
              example: >-
                {

                  "v2cEnabled": false,

                  "v3Enabled": true,

                  "v3AuthMode": "SHA",

                  "v3PrivMode": "AES128",

                  "peerIps": "123.123.123.1",

                  "hostname": "n1.meraki.com",

                  "port": 443

                }
      deprecated: false
    put:
      tags:
      - SNMP settings
      summary: updateOrganizationSnmp
      description: Update the SNMP settings for an organization
      operationId: updateOrganizationSnmp
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrganizationSnmp'
            example:
              v2cEnabled: false
              v3Enabled: true
              v3AuthMode: SHA
              v3PrivMode: AES128
              peerIps: 123.123.123.1
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "v2cEnabled": false,

                    "v3Enabled": true,

                    "v3AuthMode": "SHA",

                    "v3PrivMode": "AES128",

                    "peerIps": "123.123.123.1",

                    "hostname": "n1.meraki.com",

                    "port": 443

                  }
              example: >-
                {

                  "v2cEnabled": false,

                  "v3Enabled": true,

                  "v3AuthMode": "SHA",

                  "v3PrivMode": "AES128",

                  "peerIps": "123.123.123.1",

                  "hostname": "n1.meraki.com",

                  "port": 443

                }
      deprecated: false
  /networks/{networkId}/ssids/{number}:
    get:
      tags:
      - SSIDs
      summary: getNetworkSsid
      description: Return a single SSID
      operationId: getNetworkSsid
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 0,

                    "name": "My SSID",

                    "enabled": true,

                    "splashPage": "Click-through splash page",

                    "ssidAdminAccessible": false,

                    "authMode": "8021x-radius",

                    "encryptionMode": "wpa-eap",

                    "wpaEncryptionMode": "WPA2 only",

                    "radiusServers": [

                      {

                        "host": "0.0.0.0",

                        "port": 3000

                      }

                    ],

                    "radiusAccountingEnabled": false,

                    "radiusEnabled": true,

                    "radiusAttributeForGroupPolicies": "Filter-Id",

                    "radiusFailoverPolicy": "null",

                    "radiusLoadBalancingPolicy": "null",

                    "ipAssignmentMode": "NAT mode",

                    "adminSplashUrl": "http://example.com",

                    "splashTimeout": "30 minutes",

                    "walledGardenEnabled": true,

                    "walledGardenRanges": "example.com",

                    "minBitrate": 11,

                    "bandSelection": "5 GHz band only",

                    "perClientBandwidthLimitUp": 0,

                    "perClientBandwidthLimitDown": 0

                  }
              example: >-
                {

                  "number": 0,

                  "name": "My SSID",

                  "enabled": true,

                  "splashPage": "Click-through splash page",

                  "ssidAdminAccessible": false,

                  "authMode": "8021x-radius",

                  "encryptionMode": "wpa-eap",

                  "wpaEncryptionMode": "WPA2 only",

                  "radiusServers": [

                    {

                      "host": "0.0.0.0",

                      "port": 3000

                    }

                  ],

                  "radiusAccountingEnabled": false,

                  "radiusEnabled": true,

                  "radiusAttributeForGroupPolicies": "Filter-Id",

                  "radiusFailoverPolicy": "null",

                  "radiusLoadBalancingPolicy": "null",

                  "ipAssignmentMode": "NAT mode",

                  "adminSplashUrl": "http://example.com",

                  "splashTimeout": "30 minutes",

                  "walledGardenEnabled": true,

                  "walledGardenRanges": "example.com",

                  "minBitrate": 11,

                  "bandSelection": "5 GHz band only",

                  "perClientBandwidthLimitUp": 0,

                  "perClientBandwidthLimitDown": 0

                }
      deprecated: false
    put:
      tags:
      - SSIDs
      summary: updateNetworkSsid
      description: Update the attributes of an SSID
      operationId: updateNetworkSsid
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSsid'
            example:
              name: My SSID
              enabled: true
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 0,

                    "name": "My SSID",

                    "enabled": true,

                    "splashPage": "Click-through splash page",

                    "ssidAdminAccessible": false,

                    "authMode": "8021x-radius",

                    "encryptionMode": "wpa-eap",

                    "wpaEncryptionMode": "WPA2 only",

                    "radiusServers": [

                      {

                        "host": "0.0.0.0",

                        "port": 3000

                      }

                    ],

                    "radiusAccountingEnabled": false,

                    "radiusEnabled": true,

                    "radiusAttributeForGroupPolicies": "Filter-Id",

                    "radiusFailoverPolicy": "null",

                    "radiusLoadBalancingPolicy": "null",

                    "ipAssignmentMode": "NAT mode",

                    "adminSplashUrl": "http://example.com",

                    "splashTimeout": "30 minutes",

                    "walledGardenEnabled": true,

                    "walledGardenRanges": "example.com",

                    "minBitrate": 11,

                    "bandSelection": "5 GHz band only",

                    "perClientBandwidthLimitUp": 0,

                    "perClientBandwidthLimitDown": 0

                  }
              example: >-
                {

                  "number": 0,

                  "name": "My SSID",

                  "enabled": true,

                  "splashPage": "Click-through splash page",

                  "ssidAdminAccessible": false,

                  "authMode": "8021x-radius",

                  "encryptionMode": "wpa-eap",

                  "wpaEncryptionMode": "WPA2 only",

                  "radiusServers": [

                    {

                      "host": "0.0.0.0",

                      "port": 3000

                    }

                  ],

                  "radiusAccountingEnabled": false,

                  "radiusEnabled": true,

                  "radiusAttributeForGroupPolicies": "Filter-Id",

                  "radiusFailoverPolicy": "null",

                  "radiusLoadBalancingPolicy": "null",

                  "ipAssignmentMode": "NAT mode",

                  "adminSplashUrl": "http://example.com",

                  "splashTimeout": "30 minutes",

                  "walledGardenEnabled": true,

                  "walledGardenRanges": "example.com",

                  "minBitrate": 11,

                  "bandSelection": "5 GHz band only",

                  "perClientBandwidthLimitUp": 0,

                  "perClientBandwidthLimitDown": 0

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/wireless/status:
    get:
      tags:
      - SSIDs
      summary: getNetworkDeviceWirelessStatus
      description: Return the SSID statuses of an access point
      operationId: getNetworkDeviceWirelessStatus
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "basicServiceSets": [

                      {

                        "ssidName": "My SSID",

                        "ssidNumber": 0,

                        "enabled": true,

                        "band": "2.4 GHz",

                        "bssid": "8A:15:04:00:00:00",

                        "channel": 11,

                        "channelWidth": "20 MHz",

                        "power": "18 dBm",

                        "visible": true,

                        "broadcasting": true

                      },

                      {

                        "ssidName": "My SSID",

                        "ssidNumber": 0,

                        "enabled": true,

                        "band": "5 GHz",

                        "bssid": "8A:15:14:00:00:00",

                        "channel": 149,

                        "channelWidth": "80 MHz",

                        "power": "18 dBm",

                        "visible": true,

                        "broadcasting": true

                      }

                    ]

                  }
              example: >-
                {

                  "basicServiceSets": [

                    {

                      "ssidName": "My SSID",

                      "ssidNumber": 0,

                      "enabled": true,

                      "band": "2.4 GHz",

                      "bssid": "8A:15:04:00:00:00",

                      "channel": 11,

                      "channelWidth": "20 MHz",

                      "power": "18 dBm",

                      "visible": true,

                      "broadcasting": true

                    },

                    {

                      "ssidName": "My SSID",

                      "ssidNumber": 0,

                      "enabled": true,

                      "band": "5 GHz",

                      "bssid": "8A:15:14:00:00:00",

                      "channel": 149,

                      "channelWidth": "80 MHz",

                      "power": "18 dBm",

                      "visible": true,

                      "broadcasting": true

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/ssids:
    get:
      tags:
      - SSIDs
      summary: getNetworkSsids
      description: List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.
      operationId: getNetworkSsids
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "number": 0,

                      "name": "My SSID",

                      "enabled": true,

                      "splashPage": "Click-through splash page",

                      "ssidAdminAccessible": false,

                      "authMode": "8021x-radius",

                      "encryptionMode": "wpa-eap",

                      "wpaEncryptionMode": "WPA2 only",

                      "radiusServers": [

                        {

                          "host": "0.0.0.0",

                          "port": 3000

                        }

                      ],

                      "radiusAccountingEnabled": false,

                      "radiusEnabled": true,

                      "radiusAttributeForGroupPolicies": "Filter-Id",

                      "radiusFailoverPolicy": "null",

                      "radiusLoadBalancingPolicy": "null",

                      "ipAssignmentMode": "NAT mode",

                      "adminSplashUrl": "http://example.com",

                      "splashTimeout": "30 minutes",

                      "walledGardenEnabled": true,

                      "walledGardenRanges": "example.com",

                      "minBitrate": 11,

                      "bandSelection": "5 GHz band only",

                      "perClientBandwidthLimitUp": 0,

                      "perClientBandwidthLimitDown": 0

                    }

                  ]
              example: >-
                [

                  {

                    "number": 0,

                    "name": "My SSID",

                    "enabled": true,

                    "splashPage": "Click-through splash page",

                    "ssidAdminAccessible": false,

                    "authMode": "8021x-radius",

                    "encryptionMode": "wpa-eap",

                    "wpaEncryptionMode": "WPA2 only",

                    "radiusServers": [

                      {

                        "host": "0.0.0.0",

                        "port": 3000

                      }

                    ],

                    "radiusAccountingEnabled": false,

                    "radiusEnabled": true,

                    "radiusAttributeForGroupPolicies": "Filter-Id",

                    "radiusFailoverPolicy": "null",

                    "radiusLoadBalancingPolicy": "null",

                    "ipAssignmentMode": "NAT mode",

                    "adminSplashUrl": "http://example.com",

                    "splashTimeout": "30 minutes",

                    "walledGardenEnabled": true,

                    "walledGardenRanges": "example.com",

                    "minBitrate": 11,

                    "bandSelection": "5 GHz band only",

                    "perClientBandwidthLimitUp": 0,

                    "perClientBandwidthLimitDown": 0

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/securityEvents:
    get:
      tags:
      - Security events
      summary: getNetworkClientSecurityEvents
      description: List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientSecurityEvents
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: >-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]
      deprecated: false
  /networks/{networkId}/securityEvents:
    get:
      tags:
      - Security events
      summary: getNetworkSecurityEvents
      description: List the security events for a network
      operationId: getNetworkSecurityEvents
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: >-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/securityEvents:
    get:
      tags:
      - Security events
      summary: getOrganizationSecurityEvents
      description: List the security events for an organization
      operationId: getOrganizationSecurityEvents
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ts": 1547683314.2703979,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:34195",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "2",

                      "classification": "4",

                      "blocked": true,

                      "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                      "signature": "1:21516:9",

                      "sigSource": ""

                    },

                    {

                      "ts": 1547683827.7232649,

                      "deviceMac": "00:18:0a:01:02:03",

                      "clientMac": "A1:B2:C3:D4:E5:F6",

                      "srcIp": "1.2.3.4:56023",

                      "destIp": "10.20.30.40:80",

                      "protocol": "tcp/ip",

                      "priority": "1",

                      "classification": "33",

                      "blocked": true,

                      "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                      "signature": "1:25975:2",

                      "sigSource": ""

                    }

                  ]
              example: >-
                [

                  {

                    "ts": 1547683314.2703979,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:34195",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "2",

                    "classification": "4",

                    "blocked": true,

                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",

                    "signature": "1:21516:9",

                    "sigSource": ""

                  },

                  {

                    "ts": 1547683827.7232649,

                    "deviceMac": "00:18:0a:01:02:03",

                    "clientMac": "A1:B2:C3:D4:E5:F6",

                    "srcIp": "1.2.3.4:56023",

                    "destIp": "10.20.30.40:80",

                    "protocol": "tcp/ip",

                    "priority": "1",

                    "classification": "33",

                    "blocked": true,

                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",

                    "signature": "1:25975:2",

                    "sigSource": ""

                  }

                ]
      deprecated: false
  /networks/{networkId}/splashLoginAttempts:
    get:
      tags:
      - Splash login attempts
      summary: getNetworkSplashLoginAttempts
      description: List the splash login attempts for a network
      operationId: getNetworkSplashLoginAttempts
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: ssidNumber
        in: query
        description: Only return the login attempts for the specified SSID
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/ssidNumber'
      - name: loginIdentifier
        in: query
        description: The username, email, or phone number used during login
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "name": "Miles Meraki",

                      "login": "miles@meraki.com",

                      "ssid": "My SSID",

                      "loginAt": 1518365681,

                      "gatewayDeviceMac": "00:11:22:33:44:55",

                      "clientMac": "22:33:44:55:66:77",

                      "clientId": "k74272e",

                      "authorization": "success"

                    }

                  ]
              example: >-
                [

                  {

                    "name": "Miles Meraki",

                    "login": "miles@meraki.com",

                    "ssid": "My SSID",

                    "loginAt": 1518365681,

                    "gatewayDeviceMac": "00:11:22:33:44:55",

                    "clientMac": "22:33:44:55:66:77",

                    "clientId": "k74272e",

                    "authorization": "success"

                  }

                ]
      deprecated: false
  /networks/{networkId}/ssids/{number}/splashSettings:
    put:
      tags:
      - Splash settings
      summary: updateNetworkSsidSplashSettings
      description: Modify the splash page settings for the given SSID
      operationId: updateNetworkSsidSplashSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSsidSplashSettings'
            example:
              splashUrl: https://www.custom_splash_url.com
              useSplashUrl: true
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ssidNumber": 0,

                    "splashPage": "Click-through splash page",

                    "splashUrl": "https://www.custom_splash_url.com",

                    "useSplashUrl": true

                  }
              example: >-
                {

                  "ssidNumber": 0,

                  "splashPage": "Click-through splash page",

                  "splashUrl": "https://www.custom_splash_url.com",

                  "useSplashUrl": true

                }
      deprecated: false
    get:
      tags:
      - Splash settings
      summary: getNetworkSsidSplashSettings
      description: Display the splash page settings for the given SSID
      operationId: getNetworkSsidSplashSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ssidNumber": 0,

                    "splashPage": "Click-through splash page",

                    "splashUrl": "https://www.custom_splash_url.com",

                    "useSplashUrl": true

                  }
              example: >-
                {

                  "ssidNumber": 0,

                  "splashPage": "Click-through splash page",

                  "splashUrl": "https://www.custom_splash_url.com",

                  "useSplashUrl": true

                }
      deprecated: false
  /networks/{networkId}/switch/accessControlLists:
    get:
      tags:
      - Switch ACLs
      summary: getNetworkSwitchAccessControlLists
      description: Return the access control lists for a MS network
      operationId: getNetworkSwitchAccessControlLists
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "comment": "Deny SSH",

                        "policy": "deny",

                        "ipVersion": "ipv4",

                        "protocol": "tcp",

                        "srcCidr": "10.1.10.0/24",

                        "srcPort": "any",

                        "dstCidr": "172.16.30/24",

                        "dstPort": 22,

                        "vlan": 10

                      },

                      {

                        "comment": "Default rule",

                        "policy": "allow",

                        "ipVersion": "any",

                        "protocol": "any",

                        "srcCidr": "any",

                        "srcPort": "any",

                        "dstCidr": "any",

                        "dstPort": "any",

                        "vlan": "any"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "comment": "Deny SSH",

                      "policy": "deny",

                      "ipVersion": "ipv4",

                      "protocol": "tcp",

                      "srcCidr": "10.1.10.0/24",

                      "srcPort": "any",

                      "dstCidr": "172.16.30/24",

                      "dstPort": 22,

                      "vlan": 10

                    },

                    {

                      "comment": "Default rule",

                      "policy": "allow",

                      "ipVersion": "any",

                      "protocol": "any",

                      "srcCidr": "any",

                      "srcPort": "any",

                      "dstCidr": "any",

                      "dstPort": "any",

                      "vlan": "any"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Switch ACLs
      summary: updateNetworkSwitchAccessControlLists
      description: Update the access control lists for a MS network
      operationId: updateNetworkSwitchAccessControlLists
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchAccessControlLists'
            example:
              rules:
              - comment: Deny SSH
                policy: deny
                ipVersion: ipv4
                protocol: tcp
                srcCidr: 10.1.10.0/24
                srcPort: any
                dstCidr: 172.16.30/24
                dstPort: 22
                vlan: 10
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rules": [

                      {

                        "comment": "Deny SSH",

                        "policy": "deny",

                        "ipVersion": "ipv4",

                        "protocol": "tcp",

                        "srcCidr": "10.1.10.0/24",

                        "srcPort": "any",

                        "dstCidr": "172.16.30/24",

                        "dstPort": 22,

                        "vlan": 10

                      },

                      {

                        "comment": "Default rule",

                        "policy": "allow",

                        "ipVersion": "any",

                        "protocol": "any",

                        "srcCidr": "any",

                        "srcPort": "any",

                        "dstCidr": "any",

                        "dstPort": "any",

                        "vlan": "any"

                      }

                    ]

                  }
              example: >-
                {

                  "rules": [

                    {

                      "comment": "Deny SSH",

                      "policy": "deny",

                      "ipVersion": "ipv4",

                      "protocol": "tcp",

                      "srcCidr": "10.1.10.0/24",

                      "srcPort": "any",

                      "dstCidr": "172.16.30/24",

                      "dstPort": 22,

                      "vlan": 10

                    },

                    {

                      "comment": "Default rule",

                      "policy": "allow",

                      "ipVersion": "any",

                      "protocol": "any",

                      "srcCidr": "any",

                      "srcPort": "any",

                      "dstCidr": "any",

                      "dstPort": "any",

                      "vlan": "any"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/portSchedules/{portScheduleId}:
    put:
      tags:
      - Switch port schedules
      summary: updateNetworkSwitchPortSchedule
      description: Update a switch port schedule
      operationId: updateNetworkSwitchPortSchedule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: portScheduleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchPortSchedule'
            example:
              name: Weekdays schedule
              portSchedule:
                monday:
                  active: true
                  from: 9:00
                  to: 17:00
                tuesday:
                  active: true
                  from: 9:00
                  to: 17:00
                wednesday:
                  active: true
                  from: 9:00
                  to: 17:00
                thursday:
                  active: true
                  from: 9:00
                  to: 17:00
                friday:
                  active: true
                  from: 9:00
                  to: 17:00
                saturday:
                  active: false
                  from: 0:00
                  to: 24:00
                sunday:
                  active: false
                  from: 0:00
                  to: 24:00
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Weekdays schedule",

                    "portSchedule": {

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Weekdays schedule",

                  "portSchedule": {

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  }

                }
      deprecated: false
    delete:
      tags:
      - Switch port schedules
      summary: deleteNetworkSwitchPortSchedule
      description: Delete a switch port schedule
      operationId: deleteNetworkSwitchPortSchedule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: portScheduleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
  /networks/{networkId}/switch/portSchedules:
    post:
      tags:
      - Switch port schedules
      summary: createNetworkSwitchPortSchedule
      description: Add a switch port schedule
      operationId: createNetworkSwitchPortSchedule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSwitchPortSchedule'
            example:
              name: Weekdays schedule
              portSchedule:
                monday:
                  active: true
                  from: 9:00
                  to: 17:00
                tuesday:
                  active: true
                  from: 9:00
                  to: 17:00
                wednesday:
                  active: true
                  from: 9:00
                  to: 17:00
                thursday:
                  active: true
                  from: 9:00
                  to: 17:00
                friday:
                  active: true
                  from: 9:00
                  to: 17:00
                saturday:
                  active: false
                  from: 0:00
                  to: 24:00
                sunday:
                  active: false
                  from: 0:00
                  to: 24:00
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Weekdays schedule",

                    "portSchedule": {

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    }

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "Weekdays schedule",

                  "portSchedule": {

                    "monday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "tuesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "wednesday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "thursday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "friday": {

                      "active": true,

                      "from": "9:00",

                      "to": "17:00"

                    },

                    "saturday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    },

                    "sunday": {

                      "active": false,

                      "from": "0:00",

                      "to": "24:00"

                    }

                  }

                }
      deprecated: false
    get:
      tags:
      - Switch port schedules
      summary: getNetworkSwitchPortSchedules
      description: List switch port schedules
      operationId: getNetworkSwitchPortSchedules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "Weekdays schedule",

                      "portSchedule": {

                        "monday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "tuesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "wednesday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "thursday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "friday": {

                          "active": true,

                          "from": "9:00",

                          "to": "17:00"

                        },

                        "saturday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        },

                        "sunday": {

                          "active": false,

                          "from": "0:00",

                          "to": "24:00"

                        }

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "Weekdays schedule",

                    "portSchedule": {

                      "monday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "tuesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "wednesday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "thursday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "friday": {

                        "active": true,

                        "from": "9:00",

                        "to": "17:00"

                      },

                      "saturday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      },

                      "sunday": {

                        "active": false,

                        "from": "0:00",

                        "to": "24:00"

                      }

                    }

                  }

                ]
      deprecated: false
  /devices/{serial}/switchPortStatuses:
    get:
      tags:
      - Switch ports
      summary: getDeviceSwitchPortStatuses
      description: Return the status for all the ports of a switch
      operationId: getDeviceSwitchPortStatuses
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "portId": "1",

                      "enabled": true,

                      "status": "Connected",

                      "errors": [

                        "PoE overload",

                        "Very high proportion of CRC errors"

                      ],

                      "warnings": [

                        "PoE port was denied power",

                        "High proportion of CRC errors"

                      ],

                      "speed": "10 Gbps",

                      "duplex": "full",

                      "usageInKb": {

                        "total": 40867,

                        "sent": 23008,

                        "recv": 17859

                      },

                      "cdp": {

                        "systemName": "",

                        "platform": "MS350-24X",

                        "deviceId": "0c8ddbddee:ff",

                        "portId": "Port 20",

                        "nativeVlan": 1,

                        "address": "10.0,0.1",

                        "managementAddress": "10.0.0.100",

                        "version": "1",

                        "vtpManagementDomain": "",

                        "capabilities": "Switch"

                      },

                      "lldp": {

                        "systemName": "MS350-24X - Test",

                        "systemDescription": "MS350-24X Cloud Managed PoE Switch",

                        "portId": "20",

                        "portDescription": "Port 20",

                        "chassisId": "0c:8d:db:dd:ee:ff",

                        "managementVlan": 1,

                        "portVlan": 1,

                        "managementAddress": "10.0.0.100",

                        "systemCapabilities": "switch"

                      },

                      "clientCount": 10,

                      "powerUsageInWh": 55.9

                    }

                  ]
              example: >-
                [

                  {

                    "portId": "1",

                    "enabled": true,

                    "status": "Connected",

                    "errors": [

                      "PoE overload",

                      "Very high proportion of CRC errors"

                    ],

                    "warnings": [

                      "PoE port was denied power",

                      "High proportion of CRC errors"

                    ],

                    "speed": "10 Gbps",

                    "duplex": "full",

                    "usageInKb": {

                      "total": 40867,

                      "sent": 23008,

                      "recv": 17859

                    },

                    "cdp": {

                      "systemName": "",

                      "platform": "MS350-24X",

                      "deviceId": "0c8ddbddee:ff",

                      "portId": "Port 20",

                      "nativeVlan": 1,

                      "address": "10.0,0.1",

                      "managementAddress": "10.0.0.100",

                      "version": "1",

                      "vtpManagementDomain": "",

                      "capabilities": "Switch"

                    },

                    "lldp": {

                      "systemName": "MS350-24X - Test",

                      "systemDescription": "MS350-24X Cloud Managed PoE Switch",

                      "portId": "20",

                      "portDescription": "Port 20",

                      "chassisId": "0c:8d:db:dd:ee:ff",

                      "managementVlan": 1,

                      "portVlan": 1,

                      "managementAddress": "10.0.0.100",

                      "systemCapabilities": "switch"

                    },

                    "clientCount": 10,

                    "powerUsageInWh": 55.9

                  }

                ]
      deprecated: false
  /devices/{serial}/switchPortStatuses/packets:
    get:
      tags:
      - Switch ports
      summary: getDeviceSwitchPortStatusesPackets
      description: Return the packet counters for all the ports of a switch
      operationId: getDeviceSwitchPortStatusesPackets
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "portId": "1",

                      "packets": [

                        {

                          "desc": "Total",

                          "total": 112081,

                          "sent": 104135,

                          "recv": 7946,

                          "ratePerSec": {

                            "total": 1,

                            "sent": 1,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "Broadcast",

                          "total": 30884,

                          "sent": 30370,

                          "recv": 514,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "Multicast",

                          "total": 67620,

                          "sent": 66849,

                          "recv": 771,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        },

                        {

                          "desc": "CRC align errors",

                          "total": 0,

                          "sent": 0,

                          "recv": 0,

                          "ratePerSec": {

                            "total": 0,

                            "sent": 0,

                            "recv": 0

                          }

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "portId": "1",

                    "packets": [

                      {

                        "desc": "Total",

                        "total": 112081,

                        "sent": 104135,

                        "recv": 7946,

                        "ratePerSec": {

                          "total": 1,

                          "sent": 1,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "Broadcast",

                        "total": 30884,

                        "sent": 30370,

                        "recv": 514,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "Multicast",

                        "total": 67620,

                        "sent": 66849,

                        "recv": 771,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      },

                      {

                        "desc": "CRC align errors",

                        "total": 0,

                        "sent": 0,

                        "recv": 0,

                        "ratePerSec": {

                          "total": 0,

                          "sent": 0,

                          "recv": 0

                        }

                      }

                    ]

                  }

                ]
      deprecated: false
  /devices/{serial}/switchPorts/{number}:
    put:
      tags:
      - Switch ports
      summary: updateDeviceSwitchPort
      description: Update a switch port
      operationId: updateDeviceSwitchPort
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeviceSwitchPort'
            example:
              name: My switch port
              tags: tag1 tag2
              enabled: true
              poeEnabled: true
              type: access
              vlan: 10
              voiceVlan: 20
              isolationEnabled: false
              rstpEnabled: true
              stpGuard: disabled
              accessPolicyNumber: 1234
              linkNegotiation: Auto negotiate
              portScheduleId: 1234
              udld: Alert only
              macWhitelist:
              - 34:56:fe:ce:8e:a0
              - 34:56:fe:ce:8e:a1
              stickyMacWhitelist:
              - 34:56:fe:ce:8e:b0
              - 34:56:fe:ce:8e:b1
              stickyMacWhitelistLimit: 5
              stormControlEnabled: true
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 1,

                    "name": "My switch port",

                    "tags": "tag1 tag2",

                    "enabled": true,

                    "poeEnabled": true,

                    "type": "access",

                    "vlan": 10,

                    "voiceVlan": 20,

                    "isolationEnabled": false,

                    "rstpEnabled": true,

                    "stpGuard": "disabled",

                    "accessPolicyNumber": "1234",

                    "linkNegotiation": "Auto negotiate",

                    "portScheduleId": "1234",

                    "udld": "Alert only",

                    "macWhitelist": [

                      "34:56:fe:ce:8e:a0",

                      "34:56:fe:ce:8e:a1"

                    ],

                    "stickyMacWhitelist": [

                      "34:56:fe:ce:8e:b0",

                      "34:56:fe:ce:8e:b1"

                    ],

                    "stickyMacWhitelistLimit": 5,

                    "stormControlEnabled": true

                  }
              example: >-
                {

                  "number": 1,

                  "name": "My switch port",

                  "tags": "tag1 tag2",

                  "enabled": true,

                  "poeEnabled": true,

                  "type": "access",

                  "vlan": 10,

                  "voiceVlan": 20,

                  "isolationEnabled": false,

                  "rstpEnabled": true,

                  "stpGuard": "disabled",

                  "accessPolicyNumber": "1234",

                  "linkNegotiation": "Auto negotiate",

                  "portScheduleId": "1234",

                  "udld": "Alert only",

                  "macWhitelist": [

                    "34:56:fe:ce:8e:a0",

                    "34:56:fe:ce:8e:a1"

                  ],

                  "stickyMacWhitelist": [

                    "34:56:fe:ce:8e:b0",

                    "34:56:fe:ce:8e:b1"

                  ],

                  "stickyMacWhitelistLimit": 5,

                  "stormControlEnabled": true

                }
      deprecated: false
    get:
      tags:
      - Switch ports
      summary: getDeviceSwitchPort
      description: Return a switch port
      operationId: getDeviceSwitchPort
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "number": 1,

                    "name": "My switch port",

                    "tags": "tag1 tag2",

                    "enabled": true,

                    "poeEnabled": true,

                    "type": "access",

                    "vlan": 10,

                    "voiceVlan": 20,

                    "isolationEnabled": false,

                    "rstpEnabled": true,

                    "stpGuard": "disabled",

                    "accessPolicyNumber": "1234",

                    "linkNegotiation": "Auto negotiate",

                    "portScheduleId": "1234",

                    "udld": "Alert only",

                    "macWhitelist": [

                      "34:56:fe:ce:8e:a0",

                      "34:56:fe:ce:8e:a1"

                    ],

                    "stickyMacWhitelist": [

                      "34:56:fe:ce:8e:b0",

                      "34:56:fe:ce:8e:b1"

                    ],

                    "stickyMacWhitelistLimit": 5,

                    "stormControlEnabled": true

                  }
              example: >-
                {

                  "number": 1,

                  "name": "My switch port",

                  "tags": "tag1 tag2",

                  "enabled": true,

                  "poeEnabled": true,

                  "type": "access",

                  "vlan": 10,

                  "voiceVlan": 20,

                  "isolationEnabled": false,

                  "rstpEnabled": true,

                  "stpGuard": "disabled",

                  "accessPolicyNumber": "1234",

                  "linkNegotiation": "Auto negotiate",

                  "portScheduleId": "1234",

                  "udld": "Alert only",

                  "macWhitelist": [

                    "34:56:fe:ce:8e:a0",

                    "34:56:fe:ce:8e:a1"

                  ],

                  "stickyMacWhitelist": [

                    "34:56:fe:ce:8e:b0",

                    "34:56:fe:ce:8e:b1"

                  ],

                  "stickyMacWhitelistLimit": 5,

                  "stormControlEnabled": true

                }
      deprecated: false
  /devices/{serial}/switchPorts:
    get:
      tags:
      - Switch ports
      summary: getDeviceSwitchPorts
      description: List the switch ports for a switch
      operationId: getDeviceSwitchPorts
      parameters:
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "number": 1,

                      "name": "My switch port",

                      "tags": "tag1 tag2",

                      "enabled": true,

                      "poeEnabled": true,

                      "type": "access",

                      "vlan": 10,

                      "voiceVlan": 20,

                      "isolationEnabled": false,

                      "rstpEnabled": true,

                      "stpGuard": "disabled",

                      "accessPolicyNumber": "1234",

                      "linkNegotiation": "Auto negotiate",

                      "portScheduleId": "1234",

                      "udld": "Alert only",

                      "macWhitelist": [

                        "34:56:fe:ce:8e:a0",

                        "34:56:fe:ce:8e:a1"

                      ],

                      "stickyMacWhitelist": [

                        "34:56:fe:ce:8e:b0",

                        "34:56:fe:ce:8e:b1"

                      ],

                      "stickyMacWhitelistLimit": 5,

                      "stormControlEnabled": true

                    }

                  ]
              example: >-
                [

                  {

                    "number": 1,

                    "name": "My switch port",

                    "tags": "tag1 tag2",

                    "enabled": true,

                    "poeEnabled": true,

                    "type": "access",

                    "vlan": 10,

                    "voiceVlan": 20,

                    "isolationEnabled": false,

                    "rstpEnabled": true,

                    "stpGuard": "disabled",

                    "accessPolicyNumber": "1234",

                    "linkNegotiation": "Auto negotiate",

                    "portScheduleId": "1234",

                    "udld": "Alert only",

                    "macWhitelist": [

                      "34:56:fe:ce:8e:a0",

                      "34:56:fe:ce:8e:a1"

                    ],

                    "stickyMacWhitelist": [

                      "34:56:fe:ce:8e:b0",

                      "34:56:fe:ce:8e:b1"

                    ],

                    "stickyMacWhitelistLimit": 5,

                    "stormControlEnabled": true

                  }

                ]
      deprecated: false
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles:
    get:
      tags:
      - Switch profiles
      summary: getOrganizationConfigTemplateSwitchProfiles
      description: List the switch profiles for your switch template configuration
      operationId: getOrganizationConfigTemplateSwitchProfiles
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: configTemplateId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "switchProfileId": "1234",

                      "name": "A Simple Switch Profile",

                      "model": "MS450-24"

                    }

                  ]
              example: >-
                [

                  {

                    "switchProfileId": "1234",

                    "name": "A Simple Switch Profile",

                    "model": "MS450-24"

                  }

                ]
      deprecated: false
  /networks/{networkId}/switch/settings/dscpToCosMappings:
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsDscpToCosMappings
      description: Update the DSCP to CoS mappings
      operationId: updateNetworkSwitchSettingsDscpToCosMappings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsDscpToCosMappings'
            example:
              mappings:
              - dscp: 1
                cos: 1
                title: Video
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mappings": [

                      {

                        "dscp": 1,

                        "cos": 1,

                        "title": "Video"

                      }

                    ]

                  }
              example: >-
                {

                  "mappings": [

                    {

                      "dscp": 1,

                      "cos": 1,

                      "title": "Video"

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsDscpToCosMappings
      description: Return the DSCP to CoS mappings
      operationId: getNetworkSwitchSettingsDscpToCosMappings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mappings": [

                      {

                        "dscp": 1,

                        "cos": 1,

                        "title": "Video"

                      }

                    ]

                  }
              example: >-
                {

                  "mappings": [

                    {

                      "dscp": 1,

                      "cos": 1,

                      "title": "Video"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/stormControl:
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsStormControl
      description: Return the storm control configuration for a switch network
      operationId: getNetworkSwitchSettingsStormControl
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "broadcastThreshold": 30,

                    "multicastThreshold": 30,

                    "unknownUnicastThreshold": 30

                  }
              example: >-
                {

                  "broadcastThreshold": 30,

                  "multicastThreshold": 30,

                  "unknownUnicastThreshold": 30

                }
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsStormControl
      description: Update the storm control configuration for a switch network
      operationId: updateNetworkSwitchSettingsStormControl
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsStormControl'
            example:
              broadcastThreshold: 30
              multicastThreshold: 30
              unknownUnicastThreshold: 30
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "broadcastThreshold": 30,

                    "multicastThreshold": 30,

                    "unknownUnicastThreshold": 30

                  }
              example: >-
                {

                  "broadcastThreshold": 30,

                  "multicastThreshold": 30,

                  "unknownUnicastThreshold": 30

                }
      deprecated: false
  /networks/{networkId}/switch/settings:
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettings
      description: Update switch network settings
      operationId: updateNetworkSwitchSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettings'
            example:
              vlan: 100
              useCombinedPower: false
              powerExceptions:
              - serial: Q234-ABCD-0001
                powerType: redundant
              - serial: Q234-ABCD-0002
                powerType: combined
              - serial: Q234-ABCD-0003
                powerType: redundant
              - serial: Q234-ABCD-0004
                powerType: useNetworkSetting
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "vlan": 100,

                    "useCombinedPower": false,

                    "powerExceptions": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "powerType": "combined"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "powerType": "useNetworkSetting"

                      }

                    ]

                  }
              example: >-
                {

                  "vlan": 100,

                  "useCombinedPower": false,

                  "powerExceptions": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "powerType": "combined"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "powerType": "useNetworkSetting"

                    }

                  ]

                }
      deprecated: false
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettings
      description: Returns the switch network settings
      operationId: getNetworkSwitchSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "vlan": 100,

                    "useCombinedPower": false,

                    "powerExceptions": [

                      {

                        "serial": "Q234-ABCD-0001",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0002",

                        "powerType": "combined"

                      },

                      {

                        "serial": "Q234-ABCD-0003",

                        "powerType": "redundant"

                      },

                      {

                        "serial": "Q234-ABCD-0004",

                        "powerType": "useNetworkSetting"

                      }

                    ]

                  }
              example: >-
                {

                  "vlan": 100,

                  "useCombinedPower": false,

                  "powerExceptions": [

                    {

                      "serial": "Q234-ABCD-0001",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0002",

                      "powerType": "combined"

                    },

                    {

                      "serial": "Q234-ABCD-0003",

                      "powerType": "redundant"

                    },

                    {

                      "serial": "Q234-ABCD-0004",

                      "powerType": "useNetworkSetting"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/mtu:
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsMtu
      description: Return the MTU configuration
      operationId: getNetworkSwitchSettingsMtu
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultMtuSize": 9578,

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "mtuSize": 1500

                      },

                      {

                        "switchProfiles": [

                          "1284392014819",

                          "2983092129865"

                        ],

                        "mtuSize": 1600

                      }

                    ]

                  }
              example: >-
                {

                  "defaultMtuSize": 9578,

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "mtuSize": 1500

                    },

                    {

                      "switchProfiles": [

                        "1284392014819",

                        "2983092129865"

                      ],

                      "mtuSize": 1600

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsMtu
      description: Update the MTU configuration
      operationId: updateNetworkSwitchSettingsMtu
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsMtu'
            example:
              defaultMtuSize: 9578
              overrides:
              - switches:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                mtuSize: 1500
              - switchProfiles:
                - 1284392014819
                - 2983092129865
                mtuSize: 1600
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultMtuSize": 9578,

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "mtuSize": 1500

                      },

                      {

                        "switchProfiles": [

                          "1284392014819",

                          "2983092129865"

                        ],

                        "mtuSize": 1600

                      }

                    ]

                  }
              example: >-
                {

                  "defaultMtuSize": 9578,

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "mtuSize": 1500

                    },

                    {

                      "switchProfiles": [

                        "1284392014819",

                        "2983092129865"

                      ],

                      "mtuSize": 1600

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/dhcpServerPolicy:
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsDhcpServerPolicy
      description: Update the DHCP server policy
      operationId: updateNetworkSwitchSettingsDhcpServerPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsDhcpServerPolicy'
            example:
              defaultPolicy: block
              allowedServers:
              - 00:50:56:00:00:01
              - 00:50:56:00:00:02
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultPolicy": "block",

                    "allowedServers": [

                      "00:50:56:00:00:01",

                      "00:50:56:00:00:02"

                    ]

                  }
              example: >-
                {

                  "defaultPolicy": "block",

                  "allowedServers": [

                    "00:50:56:00:00:01",

                    "00:50:56:00:00:02"

                  ]

                }
      deprecated: false
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsDhcpServerPolicy
      description: Return the DHCP server policy
      operationId: getNetworkSwitchSettingsDhcpServerPolicy
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultPolicy": "block",

                    "allowedServers": [

                      "00:50:56:00:00:01",

                      "00:50:56:00:00:02"

                    ]

                  }
              example: >-
                {

                  "defaultPolicy": "block",

                  "allowedServers": [

                    "00:50:56:00:00:01",

                    "00:50:56:00:00:02"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/qosRules:
    post:
      tags:
      - Switch settings
      summary: createNetworkSwitchSettingsQosRule
      description: Add a quality of service rule
      operationId: createNetworkSwitchSettingsQosRule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSwitchSettingsQosRule'
            example:
              vlan: 100
              protocol: TCP
              srcPort: 2000
              srcPortRange: 
              dstPort: 
              dstPortRange: 3000-3100
              dscp: 0
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "vlan": 100,

                  "protocol": "TCP",

                  "srcPort": 2000,

                  "srcPortRange": null,

                  "dstPort": null,

                  "dstPortRange": "3000-3100",

                  "dscp": 0

                }
      deprecated: false
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsQosRules
      description: List quality of service rules
      operationId: getNetworkSwitchSettingsQosRules
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1284392014819",

                      "vlan": 100,

                      "protocol": "TCP",

                      "srcPort": 2000,

                      "srcPortRange": null,

                      "dstPort": null,

                      "dstPortRange": "3000-3100",

                      "dscp": 0

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }

                ]
      deprecated: false
  /networks/{networkId}/switch/settings/qosRules/{qosRuleId}:
    delete:
      tags:
      - Switch settings
      summary: deleteNetworkSwitchSettingsQosRule
      description: Delete a quality of service rule
      operationId: deleteNetworkSwitchSettingsQosRule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qosRuleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsQosRule
      description: Update a quality of service rule
      operationId: updateNetworkSwitchSettingsQosRule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qosRuleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsQosRule'
            example:
              vlan: 100
              protocol: TCP
              srcPort: 2000
              srcPortRange: 
              dstPort: 
              dstPortRange: 3000-3100
              dscp: 0
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "vlan": 100,

                  "protocol": "TCP",

                  "srcPort": 2000,

                  "srcPortRange": null,

                  "dstPort": null,

                  "dstPortRange": "3000-3100",

                  "dscp": 0

                }
      deprecated: false
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsQosRule
      description: Return a quality of service rule
      operationId: getNetworkSwitchSettingsQosRule
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: qosRuleId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1284392014819",

                    "vlan": 100,

                    "protocol": "TCP",

                    "srcPort": 2000,

                    "srcPortRange": null,

                    "dstPort": null,

                    "dstPortRange": "3000-3100",

                    "dscp": 0

                  }
              example: >-
                {

                  "id": "1284392014819",

                  "vlan": 100,

                  "protocol": "TCP",

                  "srcPort": 2000,

                  "srcPortRange": null,

                  "dstPort": null,

                  "dstPortRange": "3000-3100",

                  "dscp": 0

                }
      deprecated: false
  /networks/{networkId}/switch/settings/multicast:
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsMulticast
      description: Return multicast settings for a network
      operationId: getNetworkSwitchSettingsMulticast
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultSettings": {

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      }

                    ]

                  }
              example: >-
                {

                  "defaultSettings": {

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  },

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsMulticast
      description: Update multicast settings for a network
      operationId: updateNetworkSwitchSettingsMulticast
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsMulticast'
            example:
              defaultSettings:
                igmpSnoopingEnabled: true
                floodUnknownMulticastTrafficEnabled: true
              overrides:
              - switches:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                igmpSnoopingEnabled: true
                floodUnknownMulticastTrafficEnabled: true
              - stacks:
                - 789102
                - 123456
                - 129102
                igmpSnoopingEnabled: true
                floodUnknownMulticastTrafficEnabled: true
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultSettings": {

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    "overrides": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "igmpSnoopingEnabled": true,

                        "floodUnknownMulticastTrafficEnabled": true

                      }

                    ]

                  }
              example: >-
                {

                  "defaultSettings": {

                    "igmpSnoopingEnabled": true,

                    "floodUnknownMulticastTrafficEnabled": true

                  },

                  "overrides": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "igmpSnoopingEnabled": true,

                      "floodUnknownMulticastTrafficEnabled": true

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/qosRules/order:
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsQosRulesOrder
      description: Return the quality of service rule IDs by order in which they will be processed by the switch
      operationId: getNetworkSwitchSettingsQosRulesOrder
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ruleIds": [

                      "1284392014819",

                      "2983092129865"

                    ]

                  }
              example: >-
                {

                  "ruleIds": [

                    "1284392014819",

                    "2983092129865"

                  ]

                }
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsQosRulesOrder
      description: Update the order in which the rules should be processed by the switch
      operationId: updateNetworkSwitchSettingsQosRulesOrder
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsQosRulesOrder'
            example:
              ruleIds:
              - 1284392014819
              - 2983092129865
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "ruleIds": [

                      "1284392014819",

                      "2983092129865"

                    ]

                  }
              example: >-
                {

                  "ruleIds": [

                    "1284392014819",

                    "2983092129865"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switch/settings/stp:
    get:
      tags:
      - Switch settings
      summary: getNetworkSwitchSettingsStp
      description: Returns STP settings
      operationId: getNetworkSwitchSettingsStp
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rstpEnabled": true,

                    "stpBridgePriority": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "stpPriority": 4096

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "stpPriority": 28672

                      }

                    ]

                  }
              example: >-
                {

                  "rstpEnabled": true,

                  "stpBridgePriority": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "stpPriority": 4096

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "stpPriority": 28672

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Switch settings
      summary: updateNetworkSwitchSettingsStp
      description: Updates STP settings
      operationId: updateNetworkSwitchSettingsStp
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSwitchSettingsStp'
            example:
              rstpEnabled: true
              stpBridgePriority:
              - switches:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                stpPriority: 4096
              - stacks:
                - 789102
                - 123456
                - 129102
                stpPriority: 28672
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "rstpEnabled": true,

                    "stpBridgePriority": [

                      {

                        "switches": [

                          "Q234-ABCD-0001",

                          "Q234-ABCD-0002",

                          "Q234-ABCD-0003"

                        ],

                        "stpPriority": 4096

                      },

                      {

                        "stacks": [

                          "789102",

                          "123456",

                          "129102"

                        ],

                        "stpPriority": 28672

                      }

                    ]

                  }
              example: >-
                {

                  "rstpEnabled": true,

                  "stpBridgePriority": [

                    {

                      "switches": [

                        "Q234-ABCD-0001",

                        "Q234-ABCD-0002",

                        "Q234-ABCD-0003"

                      ],

                      "stpPriority": 4096

                    },

                    {

                      "stacks": [

                        "789102",

                        "123456",

                        "129102"

                      ],

                      "stpPriority": 28672

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/switchStacks:
    get:
      tags:
      - Switch stacks
      summary: getNetworkSwitchStacks
      description: List the switch stacks in a network
      operationId: getNetworkSwitchStacks
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "8473",

                      "name": "A cool stack",

                      "serials": [

                        "QBZY-XWVU-TSRQ",

                        "QBAB-CDEF-GHIJ"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }

                ]
      deprecated: false
    post:
      tags:
      - Switch stacks
      summary: createNetworkSwitchStack
      description: Create a stack
      operationId: createNetworkSwitchStack
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkSwitchStack'
            example:
              name: A cool stack
              serials:
              - QBZY-XWVU-TSRQ
              - QBAB-CDEF-GHIJ
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }
              example: >-
                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBZY-XWVU-TSRQ",

                    "QBAB-CDEF-GHIJ"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switchStacks/{switchStackId}/remove:
    post:
      tags:
      - Switch stacks
      summary: removeNetworkSwitchStack
      description: Remove a switch from a stack
      operationId: removeNetworkSwitchStack
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: switchStackId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/removeNetworkSwitchStack'
            example:
              serial: QBZY-XWVU-TSRQ
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBAB-CDEF-GHIJ"

                    ]

                  }
              example: >-
                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBAB-CDEF-GHIJ"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switchStacks/{switchStackId}:
    delete:
      tags:
      - Switch stacks
      summary: deleteNetworkSwitchStack
      description: Delete a stack
      operationId: deleteNetworkSwitchStack
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: switchStackId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    get:
      tags:
      - Switch stacks
      summary: getNetworkSwitchStack
      description: Show a switch stack
      operationId: getNetworkSwitchStack
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: switchStackId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }
              example: >-
                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBZY-XWVU-TSRQ",

                    "QBAB-CDEF-GHIJ"

                  ]

                }
      deprecated: false
  /networks/{networkId}/switchStacks/{switchStackId}/add:
    post:
      tags:
      - Switch stacks
      summary: addNetworkSwitchStack
      description: Add a switch to a stack
      operationId: addNetworkSwitchStack
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: switchStackId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNetworkSwitchStack'
            example:
              serial: QBZY-XWVU-TSRQ
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "8473",

                    "name": "A cool stack",

                    "serials": [

                      "QBZY-XWVU-TSRQ",

                      "QBAB-CDEF-GHIJ"

                    ]

                  }
              example: >-
                {

                  "id": "8473",

                  "name": "A cool stack",

                  "serials": [

                    "QBZY-XWVU-TSRQ",

                    "QBAB-CDEF-GHIJ"

                  ]

                }
      deprecated: false
  /networks/{networkId}/syslogServers:
    get:
      tags:
      - Syslog servers
      summary: getNetworkSyslogServers
      description: List the syslog servers for a network
      operationId: getNetworkSyslogServers
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "host": "1.2.3.4",

                      "port": 443,

                      "roles": [

                        "Wireless event log",

                        "URLs"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "host": "1.2.3.4",

                    "port": 443,

                    "roles": [

                      "Wireless event log",

                      "URLs"

                    ]

                  }

                ]
      deprecated: false
    put:
      tags:
      - Syslog servers
      summary: updateNetworkSyslogServers
      description: Update the syslog servers for a network
      operationId: updateNetworkSyslogServers
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSyslogServers'
            example:
              servers:
              - host: 1.2.3.4
                port: 443
                roles:
                - Wireless event log
                - URLs
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "host": "1.2.3.4",

                      "port": 443,

                      "roles": [

                        "Wireless event log",

                        "URLs"

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "host": "1.2.3.4",

                    "port": 443,

                    "roles": [

                      "Wireless event log",

                      "URLs"

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/trafficAnalysisSettings:
    get:
      tags:
      - Traffic analysis settings
      summary: getNetworkTrafficAnalysisSettings
      description: Return the traffic analysis settings for a network
      operationId: getNetworkTrafficAnalysisSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "detailed",

                    "customPieChartItems": [

                      {

                        "name": "Item from hostname",

                        "type": "host",

                        "value": "example.com"

                      },

                      {

                        "name": "Item from port",

                        "type": "port",

                        "value": "440"

                      },

                      {

                        "name": "Item from IP",

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "name": "Item from IP range (CIDR)",

                        "type": "ipRange",

                        "value": "192.2.0.0/16"

                      },

                      {

                        "name": "Item from IP range with port",

                        "type": "ipRange",

                        "value": "192.3.0.0/16:80"

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "detailed",

                  "customPieChartItems": [

                    {

                      "name": "Item from hostname",

                      "type": "host",

                      "value": "example.com"

                    },

                    {

                      "name": "Item from port",

                      "type": "port",

                      "value": "440"

                    },

                    {

                      "name": "Item from IP",

                      "type": "ipRange",

                      "value": "192.1.0.0"

                    },

                    {

                      "name": "Item from IP range (CIDR)",

                      "type": "ipRange",

                      "value": "192.2.0.0/16"

                    },

                    {

                      "name": "Item from IP range with port",

                      "type": "ipRange",

                      "value": "192.3.0.0/16:80"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Traffic analysis settings
      summary: updateNetworkTrafficAnalysisSettings
      description: Update the traffic analysis settings for a network
      operationId: updateNetworkTrafficAnalysisSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkTrafficAnalysisSettings'
            example:
              mode: detailed
              customPieChartItems:
              - name: Item from hostname
                type: host
                value: example.com
              - name: Item from port
                type: port
                value: 440
              - name: Item from IP
                type: ipRange
                value: 192.1.0.0
              - name: Item from IP range (CIDR)
                type: ipRange
                value: 192.2.0.0/16
              - name: Item from IP range with port
                type: ipRange
                value: 192.3.0.0/16:80
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mode": "detailed",

                    "customPieChartItems": [

                      {

                        "name": "Item from hostname",

                        "type": "host",

                        "value": "example.com"

                      },

                      {

                        "name": "Item from port",

                        "type": "port",

                        "value": "440"

                      },

                      {

                        "name": "Item from IP",

                        "type": "ipRange",

                        "value": "192.1.0.0"

                      },

                      {

                        "name": "Item from IP range (CIDR)",

                        "type": "ipRange",

                        "value": "192.2.0.0/16"

                      },

                      {

                        "name": "Item from IP range with port",

                        "type": "ipRange",

                        "value": "192.3.0.0/16:80"

                      }

                    ]

                  }
              example: >-
                {

                  "mode": "detailed",

                  "customPieChartItems": [

                    {

                      "name": "Item from hostname",

                      "type": "host",

                      "value": "example.com"

                    },

                    {

                      "name": "Item from port",

                      "type": "port",

                      "value": "440"

                    },

                    {

                      "name": "Item from IP",

                      "type": "ipRange",

                      "value": "192.1.0.0"

                    },

                    {

                      "name": "Item from IP range (CIDR)",

                      "type": "ipRange",

                      "value": "192.2.0.0/16"

                    },

                    {

                      "name": "Item from IP range with port",

                      "type": "ipRange",

                      "value": "192.3.0.0/16:80"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/trafficShaping:
    get:
      tags:
      - Traffic shaping
      summary: getNetworkTrafficShaping
      description: Display the traffic shaping settings for an MX network
      operationId: getNetworkTrafficShaping
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "priority": "normal"

                      }

                    ]

                  }
              example: >-
                {

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "priority": "normal"

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Traffic shaping
      summary: updateNetworkTrafficShaping
      description: Update the traffic shaping settings for an MX network
      operationId: updateNetworkTrafficShaping
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkTrafficShaping'
            example:
              defaultRulesEnabled: true
              rules:
              - definitions:
                - type: host
                  value: google.com
                - type: port
                  value: 9090
                - type: ipRange
                  value: 192.1.0.0
                - type: ipRange
                  value: 192.1.0.0/16
                - type: ipRange
                  value: 10.1.0.0/16:80
                - type: localNet
                  value: 192.168.0.0/16
                - type: applicationCategory
                  value:
                    id: meraki:layer7/category/2
                    name: Blogging
                - type: application
                  value:
                    id: meraki:layer7/application/133
                    name: Battle.net
                perClientBandwidthLimits:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                dscpTagValue: 
                priority: normal
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "priority": "normal"

                      }

                    ]

                  }
              example: >-
                {

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "priority": "normal"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/trafficShaping/dscpTaggingOptions:
    get:
      tags:
      - Traffic shaping
      summary: getNetworkTrafficShapingDscpTaggingOptions
      description: Returns the available DSCP tagging options for your traffic shaping rules.
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "dscpTagValue": 10,

                      "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"

                    },

                    {

                      "dscpTagValue": 12,

                      "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"

                    },

                    {

                      "dscpTagValue": 14,

                      "description": "AF13 - High Throughput, Latency Insensitive, High Drop"

                    },

                    {

                      "dscpTagValue": 18,

                      "description": "AF21 - Low Latency Data, Low Drop"

                    }

                  ]
              example: >-
                [

                  {

                    "dscpTagValue": 10,

                    "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"

                  },

                  {

                    "dscpTagValue": 12,

                    "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"

                  },

                  {

                    "dscpTagValue": 14,

                    "description": "AF13 - High Throughput, Latency Insensitive, High Drop"

                  },

                  {

                    "dscpTagValue": 18,

                    "description": "AF21 - Low Latency Data, Low Drop"

                  }

                ]
      deprecated: false
  /networks/{networkId}/trafficShaping/applicationCategories:
    get:
      tags:
      - Traffic shaping
      summary: getNetworkTrafficShapingApplicationCategories
      description: Returns the application categories for traffic shaping rules.
      operationId: getNetworkTrafficShapingApplicationCategories
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "applicationCategories": [

                        {

                          "id": "meraki:layer7/category/24",

                          "name": "Advertising",

                          "applications": [

                            {

                              "id": "meraki:layer7/application/5",

                              "name": "Advertising.com"

                            },

                            {

                              "id": "meraki:layer7/application/0",

                              "name": "AppNexus"

                            },

                            {

                              "id": "meraki:layer7/application/1",

                              "name": "Brightroll"

                            }

                          ]

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "applicationCategories": [

                      {

                        "id": "meraki:layer7/category/24",

                        "name": "Advertising",

                        "applications": [

                          {

                            "id": "meraki:layer7/application/5",

                            "name": "Advertising.com"

                          },

                          {

                            "id": "meraki:layer7/application/0",

                            "name": "AppNexus"

                          },

                          {

                            "id": "meraki:layer7/application/1",

                            "name": "Brightroll"

                          }

                        ]

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/ssids/{number}/trafficShaping:
    get:
      tags:
      - Traffic shaping
      summary: getNetworkSsidTrafficShaping
      description: Display the traffic shaping settings for a SSID on an MR network
      operationId: getNetworkSsidTrafficShaping
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "trafficShapingEnabled": true,

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ]

                  }
              example: >-
                {

                  "trafficShapingEnabled": true,

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ]

                }
      deprecated: false
    put:
      tags:
      - Traffic shaping
      summary: updateNetworkSsidTrafficShaping
      description: Update the traffic shaping settings for an SSID on an MR network
      operationId: updateNetworkSsidTrafficShaping
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: number
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkSsidTrafficShaping'
            example:
              trafficShapingEnabled: true
              defaultRulesEnabled: true
              rules:
              - definitions:
                - type: host
                  value: google.com
                - type: port
                  value: 9090
                - type: ipRange
                  value: 192.1.0.0
                - type: ipRange
                  value: 192.1.0.0/16
                - type: ipRange
                  value: 10.1.0.0/16:80
                - type: localNet
                  value: 192.168.0.0/16
                - type: applicationCategory
                  value:
                    id: meraki:layer7/category/2
                    name: Blogging
                - type: application
                  value:
                    id: meraki:layer7/application/133
                    name: Battle.net
                perClientBandwidthLimits:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                dscpTagValue: 
                pcpTagValue: 
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "trafficShapingEnabled": true,

                    "defaultRulesEnabled": true,

                    "rules": [

                      {

                        "definitions": [

                          {

                            "type": "host",

                            "value": "google.com"

                          },

                          {

                            "type": "port",

                            "value": "9090"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0"

                          },

                          {

                            "type": "ipRange",

                            "value": "192.1.0.0/16"

                          },

                          {

                            "type": "ipRange",

                            "value": "10.1.0.0/16:80"

                          },

                          {

                            "type": "localNet",

                            "value": "192.168.0.0/16"

                          },

                          {

                            "type": "applicationCategory",

                            "value": {

                              "id": "meraki:layer7/category/2",

                              "name": "Blogging"

                            }

                          },

                          {

                            "type": "application",

                            "value": {

                              "id": "meraki:layer7/application/133",

                              "name": "Battle.net"

                            }

                          }

                        ],

                        "perClientBandwidthLimits": {

                          "settings": "custom",

                          "bandwidthLimits": {

                            "limitUp": 1000000,

                            "limitDown": 1000000

                          }

                        },

                        "dscpTagValue": null,

                        "pcpTagValue": null

                      }

                    ]

                  }
              example: >-
                {

                  "trafficShapingEnabled": true,

                  "defaultRulesEnabled": true,

                  "rules": [

                    {

                      "definitions": [

                        {

                          "type": "host",

                          "value": "google.com"

                        },

                        {

                          "type": "port",

                          "value": "9090"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0"

                        },

                        {

                          "type": "ipRange",

                          "value": "192.1.0.0/16"

                        },

                        {

                          "type": "ipRange",

                          "value": "10.1.0.0/16:80"

                        },

                        {

                          "type": "localNet",

                          "value": "192.168.0.0/16"

                        },

                        {

                          "type": "applicationCategory",

                          "value": {

                            "id": "meraki:layer7/category/2",

                            "name": "Blogging"

                          }

                        },

                        {

                          "type": "application",

                          "value": {

                            "id": "meraki:layer7/application/133",

                            "name": "Battle.net"

                          }

                        }

                      ],

                      "perClientBandwidthLimits": {

                        "settings": "custom",

                        "bandwidthLimits": {

                          "limitUp": 1000000,

                          "limitDown": 1000000

                        }

                      },

                      "dscpTagValue": null,

                      "pcpTagValue": null

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/uplinkSettings:
    get:
      tags:
      - Uplink settings
      summary: getNetworkUplinkSettings
      description: Returns the uplink settings for your MX network.
      operationId: getNetworkUplinkSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "bandwidthLimits": {

                      "wan1": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "wan2": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "cellular": {

                        "limitUp": 51200,

                        "limitDown": 51200

                      }

                    }

                  }
              example: >-
                {

                  "bandwidthLimits": {

                    "wan1": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "wan2": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "cellular": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }

                }
      deprecated: false
    put:
      tags:
      - Uplink settings
      summary: updateNetworkUplinkSettings
      description: Updates the uplink settings for your MX network.
      operationId: updateNetworkUplinkSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkUplinkSettings'
            example:
              bandwidthLimits:
                wan1:
                  limitUp: 1000000
                  limitDown: 1000000
                wan2:
                  limitUp: 1000000
                  limitDown: 1000000
                cellular:
                  limitUp: 51200
                  limitDown: 51200
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "bandwidthLimits": {

                      "wan1": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "wan2": {

                        "limitUp": 1000000,

                        "limitDown": 1000000

                      },

                      "cellular": {

                        "limitUp": 51200,

                        "limitDown": 51200

                      }

                    }

                  }
              example: >-
                {

                  "bandwidthLimits": {

                    "wan1": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "wan2": {

                      "limitUp": 1000000,

                      "limitDown": 1000000

                    },

                    "cellular": {

                      "limitUp": 51200,

                      "limitDown": 51200

                    }

                  }

                }
      deprecated: false
  /networks/{networkId}/vlans/{vlanId}:
    get:
      tags:
      - VLANs
      summary: getNetworkVlan
      description: Return a VLAN
      operationId: getNetworkVlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: vlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "1.2.3.4",

                    "subnet": "192.168.1.0/24",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": [

                      {

                        "code": 5,

                        "type": "text",

                        "value": "five"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "My VLAN",

                  "applianceIp": "1.2.3.4",

                  "subnet": "192.168.1.0/24",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ],

                  "dnsNameservers": "google_dns",

                  "dhcpHandling": "Run a DHCP server",

                  "dhcpLeaseTime": "1 day",

                  "dhcpBootOptionsEnabled": false,

                  "dhcpBootNextServer": null,

                  "dhcpBootFilename": null,

                  "dhcpOptions": [

                    {

                      "code": 5,

                      "type": "text",

                      "value": "five"

                    }

                  ]

                }
      deprecated: false
    delete:
      tags:
      - VLANs
      summary: deleteNetworkVlan
      description: Delete a VLAN from a network
      operationId: deleteNetworkVlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: vlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        204:
          description: Successful operation
          headers: {}
      deprecated: false
    put:
      tags:
      - VLANs
      summary: updateNetworkVlan
      description: Update a VLAN
      operationId: updateNetworkVlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: vlanId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkVlan'
            example:
              name: My VLAN
              applianceIp: 1.2.3.4
              subnet: 192.168.1.0/24
              fixedIpAssignments:
                22:33:44:55:66:77:
                  ip: 1.2.3.4
                  name: Some client name
              reservedIpRanges:
              - start: 192.168.1.0
                end: 192.168.1.1
                comment: A reserved IP range
              dnsNameservers: google_dns
              dhcpHandling: Run a DHCP server
              dhcpLeaseTime: 1 day
              dhcpBootOptionsEnabled: false
              dhcpBootNextServer: 
              dhcpBootFilename: 
              dhcpOptions:
              - code: 5
                type: text
                value: five
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "1.2.3.4",

                    "subnet": "192.168.1.0/24",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": [

                      {

                        "code": 5,

                        "type": "text",

                        "value": "five"

                      }

                    ]

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "My VLAN",

                  "applianceIp": "1.2.3.4",

                  "subnet": "192.168.1.0/24",

                  "fixedIpAssignments": {

                    "22:33:44:55:66:77": {

                      "ip": "1.2.3.4",

                      "name": "Some client name"

                    }

                  },

                  "reservedIpRanges": [

                    {

                      "start": "192.168.1.0",

                      "end": "192.168.1.1",

                      "comment": "A reserved IP range"

                    }

                  ],

                  "dnsNameservers": "google_dns",

                  "dhcpHandling": "Run a DHCP server",

                  "dhcpLeaseTime": "1 day",

                  "dhcpBootOptionsEnabled": false,

                  "dhcpBootNextServer": null,

                  "dhcpBootFilename": null,

                  "dhcpOptions": [

                    {

                      "code": 5,

                      "type": "text",

                      "value": "five"

                    }

                  ]

                }
      deprecated: false
  /networks/{networkId}/vlans:
    post:
      tags:
      - VLANs
      summary: createNetworkVlan
      description: Add a VLAN
      operationId: createNetworkVlan
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNetworkVlan'
            example:
              id: 1234
              name: My VLAN
              subnet: 192.168.1.0/24
              applianceIp: 1.2.3.4
        required: true
        x-send-file-in-body: false
      responses:
        201:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "1.2.3.4",

                    "subnet": "192.168.1.0/24",

                    "fixedIpAssignments": {},

                    "reservedIpRanges": [],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": []

                  }
              example: >-
                {

                  "id": "1234",

                  "networkId": "N_24329156",

                  "name": "My VLAN",

                  "applianceIp": "1.2.3.4",

                  "subnet": "192.168.1.0/24",

                  "fixedIpAssignments": {},

                  "reservedIpRanges": [],

                  "dnsNameservers": "google_dns",

                  "dhcpHandling": "Run a DHCP server",

                  "dhcpLeaseTime": "1 day",

                  "dhcpBootOptionsEnabled": false,

                  "dhcpBootNextServer": null,

                  "dhcpBootFilename": null,

                  "dhcpOptions": []

                }
      deprecated: false
    get:
      tags:
      - VLANs
      summary: getNetworkVlans
      description: List the VLANs for an MX network
      operationId: getNetworkVlans
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "id": "1234",

                      "networkId": "N_24329156",

                      "name": "My VLAN",

                      "applianceIp": "1.2.3.4",

                      "subnet": "192.168.1.0/24",

                      "fixedIpAssignments": {

                        "22:33:44:55:66:77": {

                          "ip": "1.2.3.4",

                          "name": "Some client name"

                        }

                      },

                      "reservedIpRanges": [

                        {

                          "start": "192.168.1.0",

                          "end": "192.168.1.1",

                          "comment": "A reserved IP range"

                        }

                      ],

                      "dnsNameservers": "google_dns",

                      "dhcpHandling": "Run a DHCP server",

                      "dhcpLeaseTime": "1 day",

                      "dhcpBootOptionsEnabled": false,

                      "dhcpBootNextServer": null,

                      "dhcpBootFilename": null,

                      "dhcpOptions": [

                        {

                          "code": 5,

                          "type": "text",

                          "value": "five"

                        }

                      ]

                    }

                  ]
              example: >-
                [

                  {

                    "id": "1234",

                    "networkId": "N_24329156",

                    "name": "My VLAN",

                    "applianceIp": "1.2.3.4",

                    "subnet": "192.168.1.0/24",

                    "fixedIpAssignments": {

                      "22:33:44:55:66:77": {

                        "ip": "1.2.3.4",

                        "name": "Some client name"

                      }

                    },

                    "reservedIpRanges": [

                      {

                        "start": "192.168.1.0",

                        "end": "192.168.1.1",

                        "comment": "A reserved IP range"

                      }

                    ],

                    "dnsNameservers": "google_dns",

                    "dhcpHandling": "Run a DHCP server",

                    "dhcpLeaseTime": "1 day",

                    "dhcpBootOptionsEnabled": false,

                    "dhcpBootNextServer": null,

                    "dhcpBootFilename": null,

                    "dhcpOptions": [

                      {

                        "code": 5,

                        "type": "text",

                        "value": "five"

                      }

                    ]

                  }

                ]
      deprecated: false
  /networks/{networkId}/vlansEnabledState:
    get:
      tags:
      - VLANs
      summary: getNetworkVlansEnabledState
      description: Returns the enabled status of VLANs for the network
      operationId: getNetworkVlansEnabledState
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "enabled": true,

                    "networkId": "N_24329156"

                  }
              example: >-
                {

                  "enabled": true,

                  "networkId": "N_24329156"

                }
      deprecated: false
    put:
      tags:
      - VLANs
      summary: updateNetworkVlansEnabledState
      description: Enable/Disable VLANs for the given network
      operationId: updateNetworkVlansEnabledState
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkVlansEnabledState'
            example:
              enabled: true
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "enabled": true,

                    "networkId": "N_24329156"

                  }
              example: >-
                {

                  "enabled": true,

                  "networkId": "N_24329156"

                }
      deprecated: false
  /organizations/{organizationId}/webhookLogs:
    get:
      tags:
      - Webhook logs
      summary: getOrganizationWebhookLogs
      description: Return the log of webhook POSTs sent
      operationId: getOrganizationWebhookLogs
      parameters:
      - name: organizationId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: perPage
        in: query
        description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: startingAfter
        in: query
        description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: The URL the webhook was sent to
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "organizationId": "33619",

                      "networkId": "L_22742",

                      "alertType": "Settings changed",

                      "url": "https://www.example.com/path",

                      "sentAt": "2019-01-01T13:37:28.123456Z",

                      "loggedAt": "2019-01-01T13:37:28.423456Z",

                      "responseCode": 200,

                      "responseDuration": 244

                    }

                  ]
              example: >-
                [

                  {

                    "organizationId": "33619",

                    "networkId": "L_22742",

                    "alertType": "Settings changed",

                    "url": "https://www.example.com/path",

                    "sentAt": "2019-01-01T13:37:28.123456Z",

                    "loggedAt": "2019-01-01T13:37:28.423456Z",

                    "responseCode": 200,

                    "responseDuration": 244

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/connectionStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkDevicesConnectionStats
      description: Aggregated connectivity info for this network, grouped by node
      operationId: getNetworkDevicesConnectionStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "serial": "Q2JC-2MJM-FHRD",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 1,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 43

                      }

                    },

                    {

                      "serial": "Q2FJ-3SHB-Y2K2",

                      "connectionStats": {

                        "assoc": 1,

                        "auth": 4,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 8

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 43

                    }

                  },

                  {

                    "serial": "Q2FJ-3SHB-Y2K2",

                    "connectionStats": {

                      "assoc": 1,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 8

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/latencyStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkClientsLatencyStats
      description: Aggregated latency info for this network, grouped by clients
      operationId: getNetworkClientsLatencyStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "mac": "00:61:71:c8:51:27",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "mac": "1c:4d:70:7f:5e:5e",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "mac": "1c:4d:70:81:8d:0a",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "mac": "00:61:71:c8:51:27",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "mac": "1c:4d:70:7f:5e:5e",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "mac": "1c:4d:70:81:8d:0a",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/connectionStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkClientConnectionStats
      description: Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkClientConnectionStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mac": "00:61:71:c8:51:27",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 10

                    }

                  }
              example: >-
                {

                  "mac": "00:61:71:c8:51:27",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 4,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 10

                  }

                }
      deprecated: false
  /networks/{networkId}/devices/{serial}/connectionStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkDeviceConnectionStats
      description: Aggregated connectivity info for a given AP on this network
      operationId: getNetworkDeviceConnectionStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 43

                    }

                  }
              example: >-
                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "connectionStats": {

                    "assoc": 0,

                    "auth": 1,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 43

                  }

                }
      deprecated: false
  /networks/{networkId}/latencyStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkLatencyStats
      description: Aggregated latency info for this network
      operationId: getNetworkLatencyStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }
              example: >-
                {

                  "backgroundTraffic": {

                    "rawDistribution": {

                      "0": 1234,

                      "1": 2345,

                      "2": 3456,

                      "4": 4567,

                      "8": 5678,

                      "16": 6789,

                      "32": 7890,

                      "64": 8901,

                      "128": 9012,

                      "256": 83,

                      "512": 1234,

                      "1024": 2345,

                      "2048": 9999

                    },

                    "avg": 606.52

                  },

                  "bestEffortTraffic": "same shape as backgroundTraffic",

                  "videoTraffic": "same shape as backgroundTraffic",

                  "voiceTraffic": "same shape as backgroundTraffic"

                }
      deprecated: false
  /networks/{networkId}/clients/connectionStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkClientsConnectionStats
      description: Aggregated connectivity info for this network, grouped by clients
      operationId: getNetworkClientsConnectionStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "mac": "00:61:71:c8:51:27",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 4,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 10

                      }

                    },

                    {

                      "mac": "1c:4d:70:7f:5e:5e",

                      "connectionStats": {

                        "assoc": 0,

                        "auth": 1,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 24

                      }

                    },

                    {

                      "mac": "1c:4d:70:81:8d:0a",

                      "connectionStats": {

                        "assoc": 1,

                        "auth": 0,

                        "dhcp": 0,

                        "dns": 0,

                        "success": 16

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "mac": "00:61:71:c8:51:27",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 4,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 10

                    }

                  },

                  {

                    "mac": "1c:4d:70:7f:5e:5e",

                    "connectionStats": {

                      "assoc": 0,

                      "auth": 1,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 24

                    }

                  },

                  {

                    "mac": "1c:4d:70:81:8d:0a",

                    "connectionStats": {

                      "assoc": 1,

                      "auth": 0,

                      "dhcp": 0,

                      "dns": 0,

                      "success": 16

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/latencyStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkDevicesLatencyStats
      description: Aggregated latency info for this network, grouped by node
      operationId: getNetworkDevicesLatencyStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "serial": "Q2JC-2MJM-FHRD",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    },

                    {

                      "serial": "Q2FJ-3SHB-Y2K2",

                      "latencyStats": {

                        "backgroundTraffic": {

                          "rawDistribution": {

                            "0": 1234,

                            "1": 2345,

                            "2": 3456,

                            "4": 4567,

                            "8": 5678,

                            "16": 6789,

                            "32": 7890,

                            "64": 8901,

                            "128": 9012,

                            "256": 83,

                            "512": 1234,

                            "1024": 2345,

                            "2048": 9999

                          },

                          "avg": 606.52

                        },

                        "bestEffortTraffic": "same shape as backgroundTraffic",

                        "videoTraffic": "same shape as backgroundTraffic",

                        "voiceTraffic": "same shape as backgroundTraffic"

                      }

                    }

                  ]
              example: >-
                [

                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  },

                  {

                    "serial": "Q2FJ-3SHB-Y2K2",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }

                ]
      deprecated: false
  /networks/{networkId}/clients/{clientId}/latencyStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkClientLatencyStats
      description: Aggregated latency info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkClientLatencyStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "mac": "00:61:71:c8:51:27",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }
              example: >-
                {

                  "mac": "00:61:71:c8:51:27",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }
      deprecated: false
  /networks/{networkId}/connectionStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkConnectionStats
      description: Aggregated connectivity info for this network
      operationId: getNetworkConnectionStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "assoc": 1,

                    "auth": 5,

                    "dhcp": 0,

                    "dns": 0,

                    "success": 51

                  }
              example: >-
                {

                  "assoc": 1,

                  "auth": 5,

                  "dhcp": 0,

                  "dns": 0,

                  "success": 51

                }
      deprecated: false
  /networks/{networkId}/failedConnections:
    get:
      tags:
      - Wireless health
      summary: getNetworkFailedConnections
      description: List of all failed client connection events on this network in a given time range
      operationId: getNetworkFailedConnections
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: serial
        in: query
        description: Filter by AP
        style: form
        explode: true
        schema:
          type: string
      - name: clientId
        in: query
        description: Filter by client MAC
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  [

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "00:61:71:c8:51:27",

                      "serial": "Q2JC-2MJM-FHRD",

                      "failureStep": "auth",

                      "type": "802.1X auth fail",

                      "ts": 1532032592

                    },

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "00:61:71:c8:51:27",

                      "nodeId": "Q2FJ-3SHB-Y2K2",

                      "failureStep": "auth",

                      "type": "802.1X auth fail",

                      "ts": 1532032593

                    },

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "00:61:71:c8:51:27",

                      "nodeId": "Q2FJ-3SHB-Y2K2",

                      "failureStep": "auth",

                      "type": "802.1X auth fail",

                      "ts": 1532032594

                    },

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "00:61:71:c8:51:27",

                      "nodeId": "Q2FJ-3SHB-Y2K2",

                      "failureStep": "auth",

                      "type": "802.1X auth fail",

                      "ts": 1532032595

                    },

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "1c:4d:70:7f:5e:5e",

                      "nodeId": "Q2FJ-3SHB-Y2K2",

                      "failureStep": "assoc",

                      "type": "802.1X auth fail",

                      "ts": 1532032592

                    },

                    {

                      "ssidNumber": 0,

                      "vlan": -1,

                      "clientMac": "1c:4d:70:81:8d:0a",

                      "nodeId": "Q2FJ-3SHB-Y2K2",

                      "failureStep": "auth",

                      "type": "802.1X auth fail",

                      "ts": 1532032595

                    }

                  ]
              example: >-
                [

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "00:61:71:c8:51:27",

                    "serial": "Q2JC-2MJM-FHRD",

                    "failureStep": "auth",

                    "type": "802.1X auth fail",

                    "ts": 1532032592

                  },

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "00:61:71:c8:51:27",

                    "nodeId": "Q2FJ-3SHB-Y2K2",

                    "failureStep": "auth",

                    "type": "802.1X auth fail",

                    "ts": 1532032593

                  },

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "00:61:71:c8:51:27",

                    "nodeId": "Q2FJ-3SHB-Y2K2",

                    "failureStep": "auth",

                    "type": "802.1X auth fail",

                    "ts": 1532032594

                  },

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "00:61:71:c8:51:27",

                    "nodeId": "Q2FJ-3SHB-Y2K2",

                    "failureStep": "auth",

                    "type": "802.1X auth fail",

                    "ts": 1532032595

                  },

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "1c:4d:70:7f:5e:5e",

                    "nodeId": "Q2FJ-3SHB-Y2K2",

                    "failureStep": "assoc",

                    "type": "802.1X auth fail",

                    "ts": 1532032592

                  },

                  {

                    "ssidNumber": 0,

                    "vlan": -1,

                    "clientMac": "1c:4d:70:81:8d:0a",

                    "nodeId": "Q2FJ-3SHB-Y2K2",

                    "failureStep": "auth",

                    "type": "802.1X auth fail",

                    "ts": 1532032595

                  }

                ]
      deprecated: false
  /networks/{networkId}/devices/{serial}/latencyStats:
    get:
      tags:
      - Wireless health
      summary: getNetworkDeviceLatencyStats
      description: Aggregated latency info for a given AP on this network
      operationId: getNetworkDeviceLatencyStats
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: serial
        in: path
        required: true
        style: simple
        schema:
          type: string
      - name: t0
        in: query
        description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
        style: form
        explode: true
        schema:
          type: string
      - name: t1
        in: query
        description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
        style: form
        explode: true
        schema:
          type: string
      - name: timespan
        in: query
        description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: ssid
        in: query
        description: Filter results by SSID
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: vlan
        in: query
        description: Filter results by VLAN
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: apTag
        in: query
        description: Filter results by AP Tag
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "serial": "Q2JC-2MJM-FHRD",

                    "latencyStats": {

                      "backgroundTraffic": {

                        "rawDistribution": {

                          "0": 1234,

                          "1": 2345,

                          "2": 3456,

                          "4": 4567,

                          "8": 5678,

                          "16": 6789,

                          "32": 7890,

                          "64": 8901,

                          "128": 9012,

                          "256": 83,

                          "512": 1234,

                          "1024": 2345,

                          "2048": 9999

                        },

                        "avg": 606.52

                      },

                      "bestEffortTraffic": "same shape as backgroundTraffic",

                      "videoTraffic": "same shape as backgroundTraffic",

                      "voiceTraffic": "same shape as backgroundTraffic"

                    }

                  }
              example: >-
                {

                  "serial": "Q2JC-2MJM-FHRD",

                  "latencyStats": {

                    "backgroundTraffic": {

                      "rawDistribution": {

                        "0": 1234,

                        "1": 2345,

                        "2": 3456,

                        "4": 4567,

                        "8": 5678,

                        "16": 6789,

                        "32": 7890,

                        "64": 8901,

                        "128": 9012,

                        "256": 83,

                        "512": 1234,

                        "1024": 2345,

                        "2048": 9999

                      },

                      "avg": 606.52

                    },

                    "bestEffortTraffic": "same shape as backgroundTraffic",

                    "videoTraffic": "same shape as backgroundTraffic",

                    "voiceTraffic": "same shape as backgroundTraffic"

                  }

                }
      deprecated: false
  /networks/{networkId}/wireless/settings:
    get:
      tags:
      - Wireless settings
      summary: getNetworkWirelessSettings
      description: Return the wireless settings for a network
      operationId: getNetworkWirelessSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "meshingEnabled": true,

                    "ipv6BridgeEnabled": false,

                    "locationAnalyticsEnabled": false

                  }
              example: >-
                {

                  "meshingEnabled": true,

                  "ipv6BridgeEnabled": false,

                  "locationAnalyticsEnabled": false

                }
      deprecated: false
    put:
      tags:
      - Wireless settings
      summary: updateNetworkWirelessSettings
      description: Update the wireless settings for a network
      operationId: updateNetworkWirelessSettings
      parameters:
      - name: networkId
        in: path
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNetworkWirelessSettings'
            example:
              meshingEnabled: true
              ipv6BridgeEnabled: false
              locationAnalyticsEnabled: false
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: Successful operation
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Successful operation
                example: >-
                  {

                    "meshingEnabled": true,

                    "ipv6BridgeEnabled": false,

                    "locationAnalyticsEnabled": false

                  }
              example: >-
                {

                  "meshingEnabled": true,

                  "ipv6BridgeEnabled": false,

                  "locationAnalyticsEnabled": false

                }
      deprecated: false
components:
  schemas:
    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
    Network:
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        name:
          type: string
        timeZone:
          type: string
        tags:
          type: string
          nullable: true
        type:
          type: string
        productTypes:
          type: array
          items:
            type: string
        disableMyMerakiCom:
          type: boolean
        enrollmentString:
          type: string
          nullable: true
    SmUser:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
        username:
          type: string
        hasPassword:
          type: boolean
        tags:
          type: array
          items:
            type: string
        adGroups:
          type: array
          items:
            type: string
        asmGroups:
          type: array
          items:
            type: array
        isExternal:
          type: boolean
        sspEnabled:
          type: boolean
        displayName:
          type: string
        hasIdentityCertificate:
          type: boolean
        userThumbnail:
          type: string
          nullable: true
    SmProfile:
      type: object
      properties:
        id:
          type: string
        payload_display_name:
          type: string
        payload_identifier:
          type: string
        payload_description:
          type: string
        scope:
          type: string
        tags:
          type: array
          items:
            type: string
        wifis:
          type: array
          items:
            type: string
        payload_types:
          type: array
          items:
            type: string
    SmDevice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tags:
          type: array
          items:
            type: string
        ssid:
          type: string
        wifiMac:
          type: string
        osName:
          type: string
        systemModel:
          type: string
        uuid:
          type: string
        serialNumber:
          type: string
        hasChromeMdm:
          type: boolean
    SmConnectivity:
      type: object
      properties:
        firstSeenAt:
          type: float
        lastSeenAt:
          type: float
    FixedIpAssignment:
      title: FixedIpAssignment
      required:
      - ip
      - mac
      type: object
      properties:
        name:
          type: string
          description: A descriptive name of the assignment
        ip:
          type: string
          description: The IP address you want to assign to a specific server or device
        mac:
          type: string
          description: The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
    updateNetwork:
      title: updateNetwork
      type: object
      properties:
        name:
          type: string
          description: The name of the network
        timeZone:
          type: string
          description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
        tags:
          type: string
          description: A space-separated list of tags to be applied to the network
        disableMyMerakiCom:
          type: boolean
          description: Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
        disableRemoteStatusPage:
          type: boolean
          description: Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false
        enrollmentString:
          type: string
          description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break.
      example:
        name: Long Island Office
        timeZone: America/Los_Angeles
        tags: ' tag1 tag2 '
        disableMyMerakiCom: false
    StpGuard:
      title: StpGuard
      enum:
      - disabled
      - root guard
      - bpdu guard
      - loop guard
      type: string
      description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard')
    updateNetworkAppliancePort:
      title: updateNetworkAppliancePort
      type: object
      properties:
        enabled:
          type: boolean
          description: The status of the port
        dropUntaggedTraffic:
          type: boolean
          description: Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
        type:
          type: string
          description: "The type of the port: 'access' or 'trunk'."
        vlan:
          type: integer
          description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
          format: int32
        allowedVlans:
          type: string
          description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
        accessPolicy:
          type: string
          description: "The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing."
      example:
        enabled: true
        type: access
        dropUntaggedTraffic: false
        vlan: 3
        accessPolicy: open
    Destination:
      title: Destination
      required:
      - ip
      type: object
      properties:
        ip:
          type: string
          description: The IP address to test connectivity with
        description:
          type: string
          description: Description of the testing destination. Optional, defaults to null
        default:
          type: boolean
          description: Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed
          example: false
    PoliciesBySecurityAppliance:
      title: PoliciesBySecurityAppliance
      type: object
      properties:
        devicePolicy:
          $ref: '#/components/schemas/DevicePolicy1'
      description: An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
    updateNetworkClientSplashAuthorizationStatus:
      title: updateNetworkClientSplashAuthorizationStatus
      required:
      - ssids
      type: object
      properties:
        ssids:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/generatedObject10'
      example:
        ssids:
          0:
            isAuthorized: true
          2:
            isAuthorized: false
    updateNetworkConnectivityMonitoringDestinations:
      title: updateNetworkConnectivityMonitoringDestinations
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: The list of connectivity monitoring destinations
      example:
        destinations:
        - ip: 8.8.8.8
          description: Google
          default: false
        - ip: 1.23.45.67
          description: test description
          default: true
        - ip: 9.8.7.6
    updateNetworkBluetoothSettings:
      title: updateNetworkBluetoothSettings
      type: object
      properties:
        scanningEnabled:
          type: boolean
          description: Whether APs will scan for Bluetooth enabled clients. (true, false)
        advertisingEnabled:
          type: boolean
          description: Whether APs will advertise beacons. (true, false)
        uuid:
          type: string
          description: The UUID to be used in the beacon identifier.
        majorMinorAssignmentMode:
          $ref: '#/components/schemas/MajorMinorAssignmentMode'
        major:
          type: integer
          description: The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
          format: int32
        minor:
          type: integer
          description: The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
          format: int32
      example:
        scanningEnabled: true
        advertisingEnabled: true
        uuid: 00000000-0000-0000-000-000000000000
        majorMinorAssignmentMode: Non-unique
        major: 1
    DevicePolicy2:
      title: DevicePolicy2
      enum:
      - Whitelisted
      - Blocked
      - Normal
      - Group policy
      type: string
      description: The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
    updateNetworkApplianceFirewallInboundFirewallRules:
      title: updateNetworkApplianceFirewallInboundFirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule1'
          description: An ordered array of the firewall rules (not including the default rule)
        syslogDefaultRule:
          type: boolean
          description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
    MV22XMV72X:
      title: MV22XMV72X
      required:
      - quality
      - resolution
      type: object
      properties:
        quality:
          $ref: '#/components/schemas/Quality1'
        resolution:
          $ref: '#/components/schemas/Resolution4'
      description: Quality and resolution for MV22X/MV72X camera models.
    Rule1:
      title: Rule1
      required:
      - policy
      - protocol
      - srcCidr
      - destCidr
      type: object
      properties:
        comment:
          type: string
          description: Description of the rule (optional)
        policy:
          $ref: '#/components/schemas/Policy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        srcPort:
          type: string
          description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
        srcCidr:
          type: string
          description: "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
        destPort:
          type: string
          description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        destCidr:
          type: string
          description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
        syslogEnabled:
          type: boolean
          description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
    generateNetworkCameraSnapshot:
      title: generateNetworkCameraSnapshot
      type: object
      properties:
        timestamp:
          type: string
          description: '[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.'
        fullframe:
          type: boolean
          description: '[optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.'
      example: {}
    updateDeviceWirelessBluetoothSettings:
      title: updateDeviceWirelessBluetoothSettings
      type: object
      properties:
        uuid:
          type: string
          description: Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
        major:
          type: integer
          description: Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
          format: int32
        minor:
          type: integer
          description: Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
          format: int32
      example:
        uuid: 00000000-0000-0000-000-000000000000
        major: 13
        minor: 125
    objectType:
      title: objectType
      enum:
      - person
      - vehicle
      type: string
    MajorMinorAssignmentMode:
      title: MajorMinorAssignmentMode
      enum:
      - Unique
      - Non-unique
      type: string
      description: The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
    MV32:
      title: MV32
      required:
      - quality
      - resolution
      type: object
      properties:
        quality:
          $ref: '#/components/schemas/Quality3'
        resolution:
          $ref: '#/components/schemas/Resolution2'
      description: Quality and resolution for MV32 camera models.
    updateNetworkCellularGatewaySettingsSubnetPool:
      title: updateNetworkCellularGatewaySettingsSubnetPool
      type: object
      properties:
        mask:
          type: integer
          description: Mask used for the subnet of all MGs in  this network.
          format: int32
        cidr:
          type: string
          description: CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
      example:
        cidr: 192.168.0.0/16
        mask: 24
    updateNetworkCellularGatewaySettingsUplink:
      title: updateNetworkCellularGatewaySettingsUplink
      type: object
      properties:
        bandwidthLimits:
          $ref: '#/components/schemas/BandwidthLimits'
      example: {}
    claimNetworkDevices:
      title: claimNetworkDevices
      type: object
      properties:
        serials:
          type: array
          items:
            type: string
          description: A list of serials of devices to claim
        serial:
          type: string
          description: '[DEPRECATED] The serial of a device to claim'
      example:
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
    Quality:
      title: Quality
      enum:
      - Standard
      - High
      - Enhanced
      type: string
      description: Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
    createNetworkCameraQualityRetentionProfile:
      title: createNetworkCameraQualityRetentionProfile
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the new profile. Must be unique. This parameter is required.
        motionBasedRetentionEnabled:
          type: boolean
          description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.
        restrictedBandwidthModeEnabled:
          type: boolean
          description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.
        audioRecordingEnabled:
          type: boolean
          description: Whether or not to record audio. Can be either true or false. Defaults to false.
        cloudArchiveEnabled:
          type: boolean
          description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
        motionDetectorVersion:
          type: integer
          description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
          format: int32
        scheduleId:
          type: string
          description: Schedule for which this camera will record video, or 'null' to always record.
        maxRetentionDays:
          type: integer
          description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days
          format: int32
        videoSettings:
          $ref: '#/components/schemas/VideoSettings'
      example: {}
    Resolution1:
      title: Resolution1
      enum:
      - 1280x720
      - 1920x1080
      type: string
      description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
    BandwidthLimits:
      title: BandwidthLimits
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps). null indicates no limit
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps). null indicates no limit
          format: int32
      description: The bandwidth settings for the 'cellular' uplink
    updateDeviceCameraQualityAndRetentionSettings:
      title: updateDeviceCameraQualityAndRetentionSettings
      type: object
      properties:
        profileId:
          type: string
          description: The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
        motionBasedRetentionEnabled:
          type: boolean
          description: Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera
        audioRecordingEnabled:
          type: boolean
          description: Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
        restrictedBandwidthModeEnabled:
          type: boolean
          description: Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera
        quality:
          $ref: '#/components/schemas/Quality'
        resolution:
          $ref: '#/components/schemas/Resolution'
      example:
        motionBasedRetentionEnabled: false
        audioRecordingEnabled: false
        restrictedBandwidthModeEnabled: false
        profileId: 
        quality: Standard
        resolution: 720
    UrlCategoryListSize:
      title: UrlCategoryListSize
      enum:
      - topSites
      - fullList
      type: string
      description: URL category list size which is either 'topSites' or 'fullList'
    Resolution:
      title: Resolution
      enum:
      - 1280x720
      - 1920x1080
      - 1080x1080
      - 2058x2058
      type: string
      description: Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model.
    Resolution4:
      title: Resolution4
      enum:
      - 1280x720
      - 1920x1080
      - 2688x1512
      type: string
      description: Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
    DevicePolicy:
      title: DevicePolicy
      enum:
      - Group policy
      - Whitelisted
      - Blocked
      - Per connection
      - Normal
      type: string
      description: The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Blocked', 'Per connection' or 'Normal'. Required.
    DevicePolicy1:
      title: DevicePolicy1
      enum:
      - Whitelisted
      - Blocked
      - Normal
      type: string
      description: The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked' or 'Normal'. Required.
    updateNetworkDevice:
      title: updateNetworkDevice
      type: object
      properties:
        name:
          type: string
          description: The name of a device
        tags:
          type: string
          description: The tags of a device
        lat:
          type: number
          description: The latitude of a device
        lng:
          type: number
          description: The longitude of a device
        address:
          type: string
          description: The address of a device
        notes:
          type: string
          description: The notes for the device. String. Limited to 255 characters.
        moveMapMarker:
          type: boolean
          description: Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.
        switchProfileId:
          type: string
          description: The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.
        floorPlanId:
          type: string
          description: The floor plan to associate to this device. null disassociates the device from the floorplan.
      example:
        name: My AP
        lat: 37.418095101036201
        lng: -122.09853172302201
        serial: Q234-ABCD-5678
        mac: 00:11:22:33:44:55
        tags: ' recently-added '
    DefaultDestinations:
      title: DefaultDestinations
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
          description: A list of emails that will recieve the alert(s).
        allAdmins:
          type: boolean
          description: If true, then all network admins will receive emails.
        snmp:
          type: boolean
          description: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.
      description: The network_wide destinations for all alerts on the network.
    bindNetwork:
      title: bindNetwork
      required:
      - configTemplateId
      type: object
      properties:
        configTemplateId:
          type: string
          description: The ID of the template to which the network should be bound.
        autoBind:
          type: boolean
          description: Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
      example:
        configTemplateId: N_23952905
        autoBind: false
    Quality1:
      title: Quality1
      enum:
      - Standard
      - Enhanced
      - High
      type: string
      description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
    MV12WE:
      title: MV12WE
      required:
      - quality
      - resolution
      type: object
      properties:
        quality:
          $ref: '#/components/schemas/Quality1'
        resolution:
          $ref: '#/components/schemas/Resolution1'
      description: Quality and resolution for MV12WE camera models.
    blinkNetworkDeviceLeds:
      title: blinkNetworkDeviceLeds
      type: object
      properties:
        duration:
          type: integer
          description: The duration in seconds. Must be between 5 and 120. Default is 20 seconds
          format: int32
        period:
          type: integer
          description: The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
          format: int32
        duty:
          type: integer
          description: The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
          format: int32
      example:
        duration: 20
        period: 160
        duty: 50
    cycleDeviceSwitchPorts:
      title: cycleDeviceSwitchPorts
      required:
      - ports
      type: object
      properties:
        ports:
          type: array
          items:
            type: string
          description: 'List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]'
      example:
        ports:
        - 1
        - 2-5
        - 1_MA-MOD-8X10G_1
        - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
    Protocol:
      title: Protocol
      enum:
      - tcp
      - udp
      - icmp
      - any
      type: string
      description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
    Resolution2:
      title: Resolution2
      enum:
      - 1080x1080
      - 2058x2058
      type: string
      description: Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
    MV21MV71:
      title: MV21MV71
      required:
      - quality
      - resolution
      type: object
      properties:
        quality:
          $ref: '#/components/schemas/Quality1'
        resolution:
          type: string
          description: Resolution of the camera. Can be one of '1280x720'.
          example: 1280x720
      description: Quality and resolution for MV21/MV71 camera models.
    provisionNetworkClients:
      title: provisionNetworkClients
      required:
      - mac
      - devicePolicy
      type: object
      properties:
        mac:
          type: string
          description: The MAC address of the client. Required.
        name:
          type: string
          description: The display name for the client. Optional. Limited to 255 bytes.
        devicePolicy:
          $ref: '#/components/schemas/DevicePolicy'
        groupPolicyId:
          type: string
          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
        policiesBySecurityAppliance:
          $ref: '#/components/schemas/PoliciesBySecurityAppliance'
        policiesBySsid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/generatedObject'
      example:
        mac: 00:11:22:33:44:55
        name: Miles's phone
        devicePolicy: Group policy
        groupPolicyId: 101
    updateNetworkContentFiltering:
      title: updateNetworkContentFiltering
      type: object
      properties:
        allowedUrlPatterns:
          type: array
          items:
            type: string
          description: A whitelist of URL patterns to allow
        blockedUrlPatterns:
          type: array
          items:
            type: string
          description: A blacklist of URL patterns to block
        blockedUrlCategories:
          type: array
          items:
            type: string
          description: A list of URL categories to block
        urlCategoryListSize:
          $ref: '#/components/schemas/UrlCategoryListSize'
      example:
        allowedUrlPatterns:
        - http://www.example.org
        - http://help.com.au
        blockedUrlPatterns:
        - http://www.example.com
        - http://www.betting.com
        blockedUrlCategories:
        - meraki:contentFiltering/category/1
        - meraki:contentFiltering/category/7
        urlCategoryListSize: topSites
    Rule:
      title: Rule
      required:
      - lanIp
      - publicPort
      - localPort
      - protocol
      - access
      type: object
      properties:
        name:
          type: string
          description: A descriptive name for the rule
        lanIp:
          type: string
          description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        publicPort:
          type: string
          description: A port or port ranges that will be forwarded to the host on the LAN
        localPort:
          type: string
          description: A port or port ranges that will receive the forwarded traffic from the WAN
        allowedIps:
          type: array
          items:
            type: string
          description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
        protocol:
          type: string
          description: TCP or UDP
        access:
          type: string
          description: '`any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory.'
    Alert:
      title: Alert
      type: object
      properties:
        type:
          type: string
          description: The type of alert
        enabled:
          type: boolean
          description: A boolean depicting if the alert is turned on or off
        alertDestinations:
          type: object
          description: 'A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.'
        filters:
          type: object
          description: A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.
    generatedObject10:
      title: generatedObject10
      type: object
      properties:
        isAuthorized:
          type: boolean
          description: New authorization status for the SSID (true, false).
      description: Splash authorization for SSID 0
    updateDeviceCellularGatewaySettings:
      title: updateDeviceCellularGatewaySettings
      type: object
      properties:
        reservedIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/ReservedIpRange'
          description: list of all reserved IP ranges for a single MG
        fixedIpAssignments:
          type: array
          items:
            $ref: '#/components/schemas/FixedIpAssignment'
          description: list of all fixed IP assignments for a single MG
      example:
        deviceName: name of the MG
        deviceLanIp: 192.168.0.33
        deviceSubnet: 192.168.0.32/27
        fixedIpAssignments:
        - mac: 0b:00:00:00:00:ac
          name: server 1
          ip: 192.168.0.10
        - mac: 0b:00:00:00:00:ab
          name: server 2
          ip: 192.168.0.20
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
    updateNetworkAlertSettings:
      title: updateNetworkAlertSettings
      type: object
      properties:
        defaultDestinations:
          $ref: '#/components/schemas/DefaultDestinations'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          description: Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
      example:
        defaultDestinations:
          emails:
          - miles@meraki.com
          allAdmins: true
          snmp: true
        alerts:
        - type: gatewayDown
          enabled: true
          alertDestinations:
            emails:
            - miles@meraki.com
            allAdmins: false
            snmp: false
          filters:
            timeout: 60
    MV12MV22MV72:
      title: MV12MV22MV72
      required:
      - quality
      - resolution
      type: object
      properties:
        quality:
          $ref: '#/components/schemas/Quality1'
        resolution:
          $ref: '#/components/schemas/Resolution1'
      description: Quality and resolution for MV12/MV22/MV72 camera models.
    updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations:
      title: updateNetworkCellularGatewaySettingsConnectivityMonitoringDestinations
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: The list of connectivity monitoring destinations
      example:
        destinations:
        - ip: 8.8.8.8
          description: Google
          default: false
        - ip: 1.23.45.67
          description: test description
          default: true
        - ip: 9.8.7.6
    Udld:
      title: Udld
      enum:
      - Alert only
      - Enforce
      type: string
      description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
    Quality3:
      title: Quality3
      enum:
      - Standard
      - Enhanced
      type: string
      description: Quality of the camera. Can be one of 'Standard' or 'Enhanced'.
    updateNetworkCellularFirewallRules:
      title: updateNetworkCellularFirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule1'
          description: An ordered array of the firewall rules (not including the default rule)
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
    generatedObject:
      title: generatedObject
      required:
      - devicePolicy
      type: object
      properties:
        devicePolicy:
          $ref: '#/components/schemas/DevicePolicy2'
        groupPolicyId:
          type: string
          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
      description: The number for the SSID
    Type:
      title: Type
      enum:
      - trunk
      - access
      type: string
      description: The type of the switch port ('trunk' or 'access')
    Policy:
      title: Policy
      enum:
      - allow
      - deny
      type: string
      description: "'allow' or 'deny' traffic specified by this rule"
    VideoSettings:
      title: VideoSettings
      type: object
      properties:
        MV21/MV71:
          $ref: '#/components/schemas/MV21MV71'
        MV12/MV22/MV72:
          $ref: '#/components/schemas/MV12MV22MV72'
        MV32:
          $ref: '#/components/schemas/MV32'
        MV12WE:
          $ref: '#/components/schemas/MV12WE'
        MV22X/MV72X:
          $ref: '#/components/schemas/MV22XMV72X'
      description: Video quality and resolution settings for all the camera models.
    updateNetworkClientPolicy:
      title: updateNetworkClientPolicy
      required:
      - devicePolicy
      type: object
      properties:
        devicePolicy:
          type: string
          description: The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
        groupPolicyId:
          type: string
          description: "[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."
      example:
        mac: 00:11:22:33:44:55
        type: Group policy
        groupPolicyId: 101
    ReservedIpRange:
      title: ReservedIpRange
      required:
      - start
      - end
      - comment
      type: object
      properties:
        start:
          type: string
          description: Starting IP included in the reserved range of IPs
        end:
          type: string
          description: Ending IP included in the reserved range of IPs
        comment:
          type: string
          description: Comment explaining the reserved IP range
    updateDeviceCellularGatewaySettingsPortForwardingRules:
      title: updateDeviceCellularGatewaySettingsPortForwardingRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          description: An array of port forwarding params
      example:
        rules:
        - lanIp: 172.31.128.5
          name: test
          access: any
          publicPort: 11-12
          localPort: 4
          uplink: both
          protocol: tcp
        - lanIp: 172.31.128.5
          name: test 2
          access: restricted
          allowedIps:
          - 10.10.10.10
          - 10.10.10.11
          publicPort: 99
          localPort: 5
          uplink: both
          protocol: tcp
    updateDeviceSwitchPort:
      title: updateDeviceSwitchPort
      type: object
      properties:
        name:
          type: string
          description: The name of the switch port
        tags:
          type: string
          description: The tags of the switch port
        enabled:
          type: boolean
          description: The status of the switch port
        type:
          $ref: '#/components/schemas/Type'
        vlan:
          type: integer
          description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
          format: int32
        voiceVlan:
          type: integer
          description: The voice VLAN of the switch port. Only applicable to access ports.
          format: int32
        allowedVlans:
          type: string
          description: The VLANs allowed on the switch port. Only applicable to trunk ports.
        poeEnabled:
          type: boolean
          description: The PoE status of the switch port
        isolationEnabled:
          type: boolean
          description: The isolation status of the switch port
        rstpEnabled:
          type: boolean
          description: The rapid spanning tree protocol status
        stpGuard:
          $ref: '#/components/schemas/StpGuard'
        accessPolicyNumber:
          type: integer
          description: The number of the access policy of the switch port. Only applicable to access ports.
          format: int32
        linkNegotiation:
          type: string
          description: The link speed for the switch port
        portScheduleId:
          type: string
          description: The ID of the port schedule. A value of null will clear the port schedule.
        udld:
          $ref: '#/components/schemas/Udld'
        macWhitelist:
          type: array
          items:
            type: string
          description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. To disable MAC whitelist, set accessPolicyNumber to null.
        stickyMacWhitelist:
          type: array
          items:
            type: string
          description: The initial list of MAC addresses for sticky Mac whitelist. To reset Sticky MAC whitelist, set accessPolicyNumber to null.
        stickyMacWhitelistLimit:
          type: integer
          description: The maximum number of MAC addresses for sticky MAC whitelist.
          format: int32
        stormControlEnabled:
          type: boolean
          description: The storm control status of the switch port
      example:
        name: My switch port
        tags: tag1 tag2
        enabled: true
        poeEnabled: true
        type: access
        vlan: 10
        voiceVlan: 20
        isolationEnabled: false
        rstpEnabled: true
        stpGuard: disabled
        accessPolicyNumber: 1234
        linkNegotiation: Auto negotiate
        portScheduleId: 1234
        udld: Alert only
        macWhitelist:
        - 34:56:fe:ce:8e:a0
        - 34:56:fe:ce:8e:a1
        stickyMacWhitelist:
        - 34:56:fe:ce:8e:b0
        - 34:56:fe:ce:8e:b1
        stickyMacWhitelistLimit: 5
        stormControlEnabled: true
    updateNetworkCameraQualityRetentionProfile:
      title: updateNetworkCameraQualityRetentionProfile
      type: object
      properties:
        name:
          type: string
          description: The name of the new profile. Must be unique.
        motionBasedRetentionEnabled:
          type: boolean
          description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false.
        restrictedBandwidthModeEnabled:
          type: boolean
          description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false.
        audioRecordingEnabled:
          type: boolean
          description: Whether or not to record audio. Can be either true or false. Defaults to false.
        cloudArchiveEnabled:
          type: boolean
          description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
        motionDetectorVersion:
          type: integer
          description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
          format: int32
        scheduleId:
          type: string
          description: Schedule for which this camera will record video, or 'null' to always record.
        maxRetentionDays:
          type: integer
          description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days
          format: int32
        videoSettings:
          $ref: '#/components/schemas/VideoSettings'
      example: {}
    updateNetworkCellularGatewaySettingsDhcp:
      title: updateNetworkCellularGatewaySettingsDhcp
      type: object
      properties:
        dhcpLeaseTime:
          type: string
          description: DHCP Lease time for all MG of the network. It can be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.
        dnsNameservers:
          type: string
          description: "DNS name servers mode for all MG of the network. It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns', 'custom'."
        dnsCustomNameservers:
          type: array
          items:
            type: string
          description: list of fixed IP representing the the DNS Name servers when the mode is 'custom'
      example:
        dhcpLeaseTime: 1 hour
        dnsNameservers: custom
        dnsCustomNameservers:
        - 172.16.2.111
        - 172.16.2.30
    uplink:
      title: uplink
      enum:
      - wan1
      - wan2
      - cellular
      type: string
    updateNetworkFirewalledService:
      title: updateNetworkFirewalledService
      required:
      - access
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Access'
        allowedIps:
          type: array
          items:
            type: string
          description: An array of whitelisted IPs that can access the service. This field is required if "access" is set to "restricted". Otherwise this field is ignored
      example:
        access: restricted
        allowedIps:
        - 123.123.123.1
    Friday:
      title: Friday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Friday.
    Settings2:
      title: Settings2
      enum:
      - network default
      - append
      - override
      type: string
      description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
    BlockedUrlPatterns:
      title: BlockedUrlPatterns
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings2'
        patterns:
          type: array
          items:
            type: string
          description: A blacklist of URL patterns to block
      description: Settings for blacklisted URL patterns
    SplashAuthSettings:
      title: SplashAuthSettings
      enum:
      - network default
      - bypass
      type: string
      description: Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
    Bandwidth:
      title: Bandwidth
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings'
        bandwidthLimits:
          $ref: '#/components/schemas/BandwidthLimits1'
      description: The bandwidth settings for clients bound to your group policy.
    PerClientBandwidthLimits:
      title: PerClientBandwidthLimits
      type: object
      properties:
        settings:
          type: string
          description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
        bandwidthLimits:
          $ref: '#/components/schemas/BandwidthLimits2'
      description: An object describing the bandwidth settings for your rule.
    Type2:
      title: Type2
      enum:
      - application
      - applicationCategory
      - host
      - port
      - ipRange
      type: string
      description: Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'
    Settings6:
      title: Settings6
      enum:
      - network default
      - ignore
      - custom
      type: string
      description: How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.
    Service:
      title: Service
      enum:
      - All Services
      - AirPlay
      - AFP
      - BitTorrent
      - FTP
      - iChat
      - iTunes
      - Printers
      - Samba
      - Scanners
      - SSH
      type: string
    updateNetworkDeviceManagementInterfaceSettings:
      title: updateNetworkDeviceManagementInterfaceSettings
      type: object
      properties:
        wan1:
          $ref: '#/components/schemas/Wan1'
        wan2:
          $ref: '#/components/schemas/Wan2'
      example:
        wan1:
          wanEnabled: not configured
          usingStaticIp: true
          staticIp: 1.2.3.4
          staticSubnetMask: 255.255.255.0
          staticGatewayIp: 1.2.3.1
          staticDns:
          - 1.2.3.2
          - 1.2.3.3
          vlan: 7
        wan2:
          wanEnabled: enabled
          usingStaticIp: false
          vlan: 2
    Wan2:
      title: Wan2
      type: object
      properties:
        wanEnabled:
          $ref: '#/components/schemas/WanEnabled'
        usingStaticIp:
          type: boolean
          description: Configue the interface to have static IP settings or use DHCP.
        staticIp:
          type: string
          description: The IP the device should use on the WAN.
        staticGatewayIp:
          type: string
          description: The IP of the gateway on the WAN.
        staticSubnetMask:
          type: string
          description: The subnet mask for the WAN.
        staticDns:
          type: array
          items:
            type: string
          description: Up to two DNS IPs.
        vlan:
          type: integer
          description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
          format: int32
      description: WAN 2 settings (only for MX devices)
    createNetworkHttpServersWebhookTest:
      title: createNetworkHttpServersWebhookTest
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: The URL where the test webhook will be sent
      example:
        url: https://www.example.com/path
    updateNetworkHttpServer:
      title: updateNetworkHttpServer
      type: object
      properties:
        name:
          type: string
          description: A name for easy reference to the HTTP server
        url:
          type: string
          description: The URL of the HTTP server
        sharedSecret:
          type: string
          description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
      example:
        name: My HTTP server
        url: https://www.example.com/webhooks
        sharedSecret: foobar
    BandwidthLimits1:
      title: BandwidthLimits1
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps). null indicates no limit
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps). null indicates no limit
          format: int32
      description: The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.
    FirewallAndTrafficShaping:
      title: FirewallAndTrafficShaping
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings1'
        trafficShapingRules:
          type: array
          items:
            $ref: '#/components/schemas/TrafficShapingRule'
          description: >-
            An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
        l3FirewallRules:
          type: array
          items:
            $ref: '#/components/schemas/L3FirewallRule'
          description: An ordered array of the L3 firewall rules
        l7FirewallRules:
          type: array
          items:
            $ref: '#/components/schemas/L7FirewallRule'
          description: An ordered array of L7 firewall rules
      description: The firewall and traffic shaping rules and settings for your policy.
    TrafficShapingRule:
      title: TrafficShapingRule
      required:
      - definitions
      type: object
      properties:
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/Definition'
          description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        perClientBandwidthLimits:
          $ref: '#/components/schemas/PerClientBandwidthLimits'
        dscpTagValue:
          type: integer
          description: >-
            The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          format: int32
        pcpTagValue:
          type: integer
          description: >-
            The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                null means 'Do not set PCP tag'.
          format: int32
        priority:
          type: string
          description: >-
            A string, indicating the priority level for packets bound to your rule.
                Can be 'low', 'normal' or 'high'.
    BandwidthLimits2:
      title: BandwidthLimits2
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps).
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps).
          format: int32
      description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
    VlanTagging:
      title: VlanTagging
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings5'
        vlanId:
          type: string
          description: The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.
      description: The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
    BonjourForwarding:
      title: BonjourForwarding
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings6'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule3'
          description: A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.
      description: The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.
    updateNetworkDeviceWirelessRadioSettings:
      title: updateNetworkDeviceWirelessRadioSettings
      type: object
      properties:
        rfProfileId:
          type: integer
          description: >-
            The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile
                (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides
                on the device (channel width, channel, power).
          format: int32
      example:
        rfProfileId: 1234
    BottomRightCorner:
      title: BottomRightCorner
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the bottom right corner of your floor plan.
    Policy5:
      title: Policy5
      enum:
      - deny
      type: string
      description: "'Deny' traffic specified by this rule"
    Wan1:
      title: Wan1
      type: object
      properties:
        wanEnabled:
          $ref: '#/components/schemas/WanEnabled'
        usingStaticIp:
          type: boolean
          description: Configue the interface to have static IP settings or use DHCP.
        staticIp:
          type: string
          description: The IP the device should use on the WAN.
        staticGatewayIp:
          type: string
          description: The IP of the gateway on the WAN.
        staticSubnetMask:
          type: string
          description: The subnet mask for the WAN.
        staticDns:
          type: array
          items:
            type: string
          description: Up to two DNS IPs.
        vlan:
          type: integer
          description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
          format: int32
      description: WAN 1 settings
    WanEnabled:
      title: WanEnabled
      enum:
      - enabled
      - disabled
      - not configured
      type: string
      description: Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
    Type1:
      title: Type1
      enum:
      - application
      - applicationCategory
      - host
      - port
      - ipRange
      - localNet
      type: string
      description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
    AllowedUrlPatterns:
      title: AllowedUrlPatterns
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings2'
        patterns:
          type: array
          items:
            type: string
          description: A whitelist of URL patterns to allow
      description: Settings for whitelisted URL patterns
    TopRightCorner:
      title: TopRightCorner
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the top right corner of your floor plan.
    createNetworkHttpServer:
      title: createNetworkHttpServer
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: A name for easy reference to the HTTP server
        url:
          type: string
          description: The URL of the HTTP server
        sharedSecret:
          type: string
          description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
      example:
        name: My HTTP server
        url: https://www.example.com/webhooks
        sharedSecret: foobar
    Rule7:
      title: Rule7
      required:
      - publicIp
      - uplink
      - portRules
      type: object
      properties:
        publicIp:
          type: string
          description: The IP address that will be used to access the internal resource from the WAN
        uplink:
          $ref: '#/components/schemas/Uplink1'
        portRules:
          type: array
          items:
            $ref: '#/components/schemas/PortRule'
          description: An array of associated forwarding rules
    Center:
      title: Center
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
    Thursday:
      title: Thursday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Thursday.
    Center1:
      title: Center1
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
    L3FirewallRule:
      title: L3FirewallRule
      required:
      - policy
      - protocol
      - destCidr
      type: object
      properties:
        comment:
          type: string
          description: Description of the rule (optional)
        policy:
          type: string
          description: "'allow' or 'deny' traffic specified by this rule"
        protocol:
          type: string
          description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')
        destPort:
          type: string
          description: Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'
        destCidr:
          type: string
          description: Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.
    BlockedUrlCategories:
      title: BlockedUrlCategories
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/Settings4'
        categories:
          type: array
          items:
            type: string
          description: A list of URL categories to block
      description: Settings for blacklisted URL categories
    updateNetworkGroupPolicy:
      title: updateNetworkGroupPolicy
      type: object
      properties:
        name:
          type: string
          description: The name for your group policy.
        scheduling:
          $ref: '#/components/schemas/Scheduling'
        bandwidth:
          $ref: '#/components/schemas/Bandwidth'
        firewallAndTrafficShaping:
          $ref: '#/components/schemas/FirewallAndTrafficShaping'
        contentFiltering:
          $ref: '#/components/schemas/ContentFiltering'
        splashAuthSettings:
          $ref: '#/components/schemas/SplashAuthSettings'
        vlanTagging:
          $ref: '#/components/schemas/VlanTagging'
        bonjourForwarding:
          $ref: '#/components/schemas/BonjourForwarding'
      example:
        name: No video streaming
        scheduling:
          enabled: true
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
        bandwidth:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        firewallAndTrafficShaping:
          settings: custom
          trafficShapingRules:
          - definitions:
            - type: host
              value: google.com
            - type: port
              value: 9090
            - type: ipRange
              value: 192.1.0.0
            - type: ipRange
              value: 192.1.0.0/16
            - type: ipRange
              value: 10.1.0.0/16:80
            - type: localNet
              value: 192.168.0.0/16
            - type: applicationCategory
              value:
                id: meraki:layer7/category/2
                name: Blogging
            - type: application
              value:
                id: meraki:layer7/application/133
                name: Battle.net
            perClientBandwidthLimits:
              settings: custom
              bandwidthLimits:
                limitUp: 1000000
                limitDown: 1000000
            dscpTagValue: 
            pcpTagValue: 
          l3FirewallRules:
          - comment: Allow TCP traffic to subnet with HTTP servers.
            policy: allow
            protocol: tcp
            destPort: 443
            destCidr: 192.168.1.0/24
          l7FirewallRules:
          - - policy: deny
              type: application
              value:
                id: meraki:layer7/application/67
                name: Xbox LIVE
            - policy: deny
              type: applicationCategory
              value:
                id: meraki:layer7/category/2
                name: Blogging
            - policy: deny
              type: host
              value: google.com
            - policy: deny
              type: port
              value: 23
            - policy: deny
              type: ipRange
              value: 10.11.12.00/24
            - policy: deny
              type: ipRange
              value: 10.11.12.00/24:5555
            - policy: deny
              type: blacklistedCountries
              value:
              - AX
              - CA
            - policy: deny
              type: whitelistedCountries
              value:
              - US
        contentFiltering:
          allowedUrlPatterns:
            settings: network default
            patterns: []
          blockedUrlPatterns:
            settings: append
            patterns:
            - http://www.example.com
            - http://www.betting.com
          blockedUrlCategories:
            settings: override
            categories:
            - meraki:contentFiltering/category/1
            - meraki:contentFiltering/category/7
        splashAuthSettings: bypass
        vlanTagging:
          settings: custom
          vlanId: 1
        bonjourForwarding:
          settings: custom
          rules:
          - description: A simple bonjour rule
            vlanId: 1
            services:
            - All Services
    Rule6:
      title: Rule6
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy5'
        type:
          $ref: '#/components/schemas/Type5'
        value:
          type: string
          description: The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
    Settings:
      title: Settings
      enum:
      - network default
      - ignore
      - custom
      type: string
      description: How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.
    L7FirewallRule:
      title: L7FirewallRule
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/Policy2'
        type:
          $ref: '#/components/schemas/Type2'
        value:
          type: string
          description: The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.
    Type5:
      title: Type5
      enum:
      - application
      - applicationCategory
      - host
      - port
      - ipRange
      type: string
      description: "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
    TopLeftCorner:
      title: TopLeftCorner
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the top left corner of your floor plan.
    Scheduling:
      title: Scheduling
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.
        monday:
          $ref: '#/components/schemas/Monday'
        tuesday:
          $ref: '#/components/schemas/Tuesday'
        wednesday:
          $ref: '#/components/schemas/Wednesday'
        thursday:
          $ref: '#/components/schemas/Thursday'
        friday:
          $ref: '#/components/schemas/Friday'
        saturday:
          $ref: '#/components/schemas/Saturday'
        sunday:
          $ref: '#/components/schemas/Sunday'
      description: The schedule for the group policy. Schedules are applied to days of the week.
    Monday:
      title: Monday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Monday.
    Policy2:
      title: Policy2
      enum:
      - deny
      type: string
      description: The policy applied to matching traffic. Must be 'deny'.
    updateNetworkOneToManyNatRules:
      title: updateNetworkOneToManyNatRules
      required:
      - rules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule7'
          description: An array of 1:Many nat rules
      example:
        rules:
        - publicIp: 146.11.11.13
          uplink: internet1
          portRules:
          - name: Rule 1
            protocol: tcp
            publicPort: 9443
            localIp: 192.168.128.1
            localPort: 443
            allowedIps:
            - any
          - name: Rule 2
            protocol: tcp
            publicPort: 8080
            localIp: 192.168.128.1
            localPort: 80
            allowedIps:
            - 10.82.110.0/24
            - 10.82.111.0/24
    Tuesday:
      title: Tuesday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Tuesday.
    Wednesday:
      title: Wednesday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Wednesday.
    Definition:
      title: Definition
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type1'
        value:
          type: string
          description: >-
            If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                custom ports.
                 If "type" is 'application' or 'applicationCategory', then "value" must be an object
                with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                endpoint).
    updateNetworkL7FirewallRules:
      title: updateNetworkL7FirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule6'
          description: An ordered array of the MX L7 firewall rules
      example:
        rules:
        - policy: deny
          type: application
          value:
            id: meraki:layer7/application/67
            name: Xbox LIVE
        - policy: deny
          type: applicationCategory
          value:
            id: meraki:layer7/category/2
            name: Blogging
        - policy: deny
          type: host
          value: google.com
        - policy: deny
          type: port
          value: 23
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24:5555
        - policy: deny
          type: blacklistedCountries
          value:
          - AX
          - CA
        - policy: deny
          type: whitelistedCountries
          value:
          - US
    updateNetworkNetflowSettings:
      title: updateNetworkNetflowSettings
      type: object
      properties:
        reportingEnabled:
          type: boolean
          description: Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
        collectorIp:
          type: string
          description: The IPv4 address of the NetFlow collector.
        collectorPort:
          type: integer
          description: The port that the NetFlow collector will be listening on.
          format: int32
      example:
        reportingEnabled: true
        collectorIp: 1.2.3.4
        collectorPort: 443
    updateNetworkFloorPlan:
      title: updateNetworkFloorPlan
      type: object
      properties:
        name:
          type: string
          description: The name of your floor plan.
        center:
          $ref: '#/components/schemas/Center1'
        bottomLeftCorner:
          $ref: '#/components/schemas/BottomLeftCorner'
        bottomRightCorner:
          $ref: '#/components/schemas/BottomRightCorner'
        topLeftCorner:
          $ref: '#/components/schemas/TopLeftCorner'
        topRightCorner:
          $ref: '#/components/schemas/TopRightCorner'
        imageContents:
          type: string
          description: The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.
      example: {}
    createNetworkGroupPolicy:
      title: createNetworkGroupPolicy
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name for your group policy. Required.
        scheduling:
          $ref: '#/components/schemas/Scheduling'
        bandwidth:
          $ref: '#/components/schemas/Bandwidth'
        firewallAndTrafficShaping:
          $ref: '#/components/schemas/FirewallAndTrafficShaping'
        contentFiltering:
          $ref: '#/components/schemas/ContentFiltering'
        splashAuthSettings:
          $ref: '#/components/schemas/SplashAuthSettings'
        vlanTagging:
          $ref: '#/components/schemas/VlanTagging'
        bonjourForwarding:
          $ref: '#/components/schemas/BonjourForwarding'
      example:
        name: No video streaming
        scheduling:
          enabled: true
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
        bandwidth:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        firewallAndTrafficShaping:
          settings: custom
          trafficShapingRules:
          - definitions:
            - type: host
              value: google.com
            - type: port
              value: 9090
            - type: ipRange
              value: 192.1.0.0
            - type: ipRange
              value: 192.1.0.0/16
            - type: ipRange
              value: 10.1.0.0/16:80
            - type: localNet
              value: 192.168.0.0/16
            - type: applicationCategory
              value:
                id: meraki:layer7/category/2
                name: Blogging
            - type: application
              value:
                id: meraki:layer7/application/133
                name: Battle.net
            perClientBandwidthLimits:
              settings: custom
              bandwidthLimits:
                limitUp: 1000000
                limitDown: 1000000
            dscpTagValue: 
            pcpTagValue: 
          l3FirewallRules:
          - comment: Allow TCP traffic to subnet with HTTP servers.
            policy: allow
            protocol: tcp
            destPort: 443
            destCidr: 192.168.1.0/24
          l7FirewallRules:
          - - policy: deny
              type: application
              value:
                id: meraki:layer7/application/67
                name: Xbox LIVE
            - policy: deny
              type: applicationCategory
              value:
                id: meraki:layer7/category/2
                name: Blogging
            - policy: deny
              type: host
              value: google.com
            - policy: deny
              type: port
              value: 23
            - policy: deny
              type: ipRange
              value: 10.11.12.00/24
            - policy: deny
              type: ipRange
              value: 10.11.12.00/24:5555
            - policy: deny
              type: blacklistedCountries
              value:
              - AX
              - CA
            - policy: deny
              type: whitelistedCountries
              value:
              - US
        contentFiltering:
          allowedUrlPatterns:
            settings: network default
            patterns: []
          blockedUrlPatterns:
            settings: append
            patterns:
            - http://www.example.com
            - http://www.betting.com
          blockedUrlCategories:
            settings: override
            categories:
            - meraki:contentFiltering/category/1
            - meraki:contentFiltering/category/7
        splashAuthSettings: bypass
        vlanTagging:
          settings: custom
          vlanId: 1
        bonjourForwarding:
          settings: custom
          rules:
          - description: A simple bonjour rule
            vlanId: 1
            services:
            - All Services
    Settings1:
      title: Settings1
      enum:
      - network default
      - ignore
      - custom
      type: string
      description: How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.
    Rule3:
      title: Rule3
      required:
      - vlanId
      - services
      type: object
      properties:
        description:
          type: string
          description: A description for your Bonjour forwarding rule. Optional.
        vlanId:
          type: string
          description: The ID of the service VLAN. Required.
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
    updateNetworkL3FirewallRules:
      title: updateNetworkL3FirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule1'
          description: An ordered array of the firewall rules (not including the default rule)
        syslogDefaultRule:
          type: boolean
          description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
    Uplink1:
      title: Uplink1
      enum:
      - internet1
      - internet2
      type: string
      description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
    Access:
      title: Access
      enum:
      - blocked
      - restricted
      - unrestricted
      type: string
      description: A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are "blocked" (no remote IPs can access the service), "restricted" (only whitelisted IPs can access the service), and "unrestriced" (any remote IP can access the service). This field is required
    ContentFiltering:
      title: ContentFiltering
      type: object
      properties:
        allowedUrlPatterns:
          $ref: '#/components/schemas/AllowedUrlPatterns'
        blockedUrlPatterns:
          $ref: '#/components/schemas/BlockedUrlPatterns'
        blockedUrlCategories:
          $ref: '#/components/schemas/BlockedUrlCategories'
      description: The content filtering settings for your group policy
    createNetworkFloorPlan:
      title: createNetworkFloorPlan
      required:
      - name
      - imageContents
      type: object
      properties:
        name:
          type: string
          description: The name of your floor plan.
        center:
          $ref: '#/components/schemas/Center'
        bottomLeftCorner:
          $ref: '#/components/schemas/BottomLeftCorner'
        bottomRightCorner:
          $ref: '#/components/schemas/BottomRightCorner'
        topLeftCorner:
          $ref: '#/components/schemas/TopLeftCorner'
        topRightCorner:
          $ref: '#/components/schemas/TopRightCorner'
        imageContents:
          type: string
          description: The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.
      example: {}
    BottomLeftCorner:
      title: BottomLeftCorner
      type: object
      properties:
        lat:
          type: number
          description: Latitude
        lng:
          type: number
          description: Longitude
      description: The longitude and latitude of the bottom left corner of your floor plan.
    Saturday:
      title: Saturday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Saturday.
    Sunday:
      title: Sunday
      type: object
      properties:
        active:
          type: boolean
          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
        from:
          type: string
          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
        to:
          type: string
          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
      description: The schedule object for Sunday.
    Settings4:
      title: Settings4
      enum:
      - network default
      - append
      - override
      type: string
      description: How URL categories are applied. Can be 'network default', 'append' or 'override'.
    Settings5:
      title: Settings5
      enum:
      - network default
      - ignore
      - custom
      type: string
      description: How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
    PortRule:
      title: PortRule
      type: object
      properties:
        name:
          type: string
          description: A description of the rule
        protocol:
          $ref: '#/components/schemas/Protocol3'
        publicPort:
          type: string
          description: Destination port of the traffic that is arriving on the WAN
        localIp:
          type: string
          description: Local IP address to which traffic will be forwarded
        localPort:
          type: string
          description: Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port
        allowedIps:
          type: array
          items:
            type: string
          description: Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'
    Protocol4:
      title: Protocol4
      enum:
      - tcp
      - udp
      - icmp-ping
      - any
      type: string
      description: "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'"
    DeviceFields:
      title: DeviceFields
      type: object
      properties:
        name:
          type: string
          description: New name for the device
        notes:
          type: string
          description: New notes for the device
      description: The new fields of the device. Each field of this object is optional.
    EnterpriseAdminAccess:
      title: EnterpriseAdminAccess
      enum:
      - access disabled
      - access enabled
      type: string
      description: Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')
    RadiusServer:
      title: RadiusServer
      required:
      - host
      - secret
      type: object
      properties:
        host:
          type: string
          description: IP address of your RADIUS server
        port:
          type: integer
          description: UDP port the RADIUS server listens on for Access-requests
          format: int32
        secret:
          type: string
          description: RADIUS client shared secret
    Rule10:
      title: Rule10
      required:
      - policy
      - protocol
      - destCidr
      type: object
      properties:
        comment:
          type: string
          description: Description of the rule (optional)
        policy:
          $ref: '#/components/schemas/Policy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        destPort:
          type: string
          description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        destCidr:
          type: string
          description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
    updateNetworkSwitchAccessControlLists:
      title: updateNetworkSwitchAccessControlLists
      required:
      - rules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule12'
          description: An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules.
      example:
        rules:
        - comment: Deny SSH
          policy: deny
          ipVersion: ipv4
          protocol: tcp
          srcCidr: 10.1.10.0/24
          srcPort: any
          dstCidr: 172.16.30/24
          dstPort: 22
          vlan: 10
    IpVersion:
      title: IpVersion
      enum:
      - any
      - ipv4
      - ipv6
      type: string
      description: IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'.
    SwitchPort:
      title: SwitchPort
      required:
      - serial
      - portId
      type: object
      properties:
        serial:
          type: string
          description: Serial number of the switch.
        portId:
          type: string
          description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: "8").'
    DefaultSettings:
      title: DefaultSettings
      type: object
      properties:
        igmpSnoopingEnabled:
          type: boolean
          description: IGMP snooping setting for entire network
        floodUnknownMulticastTrafficEnabled:
          type: boolean
          description: Flood unknown multicast traffic setting for entire network
      description: Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default.
    FirewallInfoSubtab:
      title: FirewallInfoSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
            listed. Can be one of 'default or inherit', 'hide' or 'show'.
    V3PrivMode:
      title: V3PrivMode
      enum:
      - DES
      - AES128
      type: string
      description: The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
    moveNetworkSmDevices:
      title: moveNetworkSmDevices
      required:
      - newNetwork
      type: object
      properties:
        wifiMacs:
          type: string
          description: The wifiMacs of the devices to be moved.
        ids:
          type: string
          description: The ids of the devices to be moved.
        serials:
          type: string
          description: The serials of the devices to be moved.
        scope:
          type: string
          description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.
        newNetwork:
          type: string
          description: The new network to which the devices will be moved.
      example:
        ids: '"1284392014819"'
        newNetwork: N_24329156
    updateNetworkSsidTrafficShaping:
      title: updateNetworkSsidTrafficShaping
      type: object
      properties:
        trafficShapingEnabled:
          type: boolean
          description: Whether traffic shaping rules are applied to clients on your SSID.
        defaultRulesEnabled:
          type: boolean
          description: >-
            Whether default traffic shaping rules are enabled (true) or disabled (false).
                There are 4 default rules, which can
                be seen on your network's traffic shaping page. Note that default rules
                count against the rule limit of 8.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule11'
          description: >-
            An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
      example:
        trafficShapingEnabled: true
        defaultRulesEnabled: true
        rules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: 9090
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          - type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - type: application
            value:
              id: meraki:layer7/application/133
              name: Battle.net
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 
          pcpTagValue: 
    Protocol7:
      title: Protocol7
      enum:
      - tcp
      - udp
      - any
      type: string
      description: The type of protocol (must be 'tcp', 'udp', or 'any').
    SwitchProfilePort:
      title: SwitchProfilePort
      required:
      - profile
      - portId
      type: object
      properties:
        profile:
          type: string
          description: Profile identifier.
        portId:
          type: string
          description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: “1_8X10G_1”), otherwise it is just the port number (Ex: "8").'
    PortSchedule:
      title: PortSchedule
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/Monday'
        tuesday:
          $ref: '#/components/schemas/Tuesday'
        wednesday:
          $ref: '#/components/schemas/Wednesday'
        thursday:
          $ref: '#/components/schemas/Thursday'
        friday:
          $ref: '#/components/schemas/Friday'
        saturday:
          $ref: '#/components/schemas/Saturday'
        sunday:
          $ref: '#/components/schemas/Sunday'
      description: >-
        The schedule for switch port scheduling. Schedules are applied to days of the week.
            When it's empty, default schedule with all days of a week are configured.
            Any unspecified day in the schedule is added as a default schedule configuration of the day.
    Type8:
      title: Type8
      enum:
      - host
      - port
      - ipRange
      type: string
      description: The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
    DhcpLeaseTime:
      title: DhcpLeaseTime
      enum:
      - 30 minutes
      - 1 hour
      - 4 hours
      - 12 hours
      - 1 day
      - 1 week
      type: string
      description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
    MinBitrateType:
      title: MinBitrateType
      enum:
      - band
      - ssid
      type: string
      description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
    FiveGhzSettings:
      title: FiveGhzSettings
      type: object
      properties:
        maxPower:
          type: integer
          description: Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 30.
          format: int32
        minPower:
          type: integer
          description: Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30. Defaults to 8.
          format: int32
        minBitrate:
          type: integer
          description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
          format: int32
        validAutoChannels:
          type: array
          items:
            type: integer
            format: int32
          description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
        channelWidth:
          type: string
          description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
        rxsop:
          type: integer
          description: >-
            The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
                consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
                reset this to the default.
          format: int32
      description: Settings related to 5Ghz band
    MinBitrateType1:
      title: MinBitrateType1
      enum:
      - band
      - ssid
      type: string
      description: Minimum bitrate can be set to either 'band' or 'ssid'.
    OrgAccess:
      title: OrgAccess
      enum:
      - full
      - read-only
      - enterprise
      - none
      type: string
      description: The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
    updateOrganizationBrandingPoliciesPriorities:
      title: updateOrganizationBrandingPoliciesPriorities
      required:
      - brandingPolicyIds
      type: object
      properties:
        brandingPolicyIds:
          type: array
          items:
            type: string
          description: A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).
      example:
        brandingPolicyIds:
        - 123
        - 456
        - 789
    updateOrganizationInsightMonitoredMediaServer:
      title: updateOrganizationInsightMonitoredMediaServer
      type: object
      properties:
        name:
          type: string
          description: The name of the VoIP provider
        address:
          type: string
          description: The IP address (IPv4 only) or hostname of the media server to monitor
      example:
        name: Sample VoIP Provider
        address: 123.123.123.1
    updateNetworkSwitchSettingsQosRule:
      title: updateNetworkSwitchSettingsQosRule
      type: object
      properties:
        vlan:
          type: integer
          description: The VLAN of the incoming packet. A null value will match any VLAN.
          format: int32
        protocol:
          $ref: '#/components/schemas/Protocol9'
        srcPort:
          type: integer
          description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
          format: int32
        srcPortRange:
          type: string
          description: 'The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        dstPort:
          type: integer
          description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
          format: int32
        dstPortRange:
          type: string
          description: 'The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        dscp:
          type: integer
          description: DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.
          format: int32
      example:
        vlan: 100
        protocol: TCP
        srcPort: 2000
        srcPortRange: 
        dstPort: 
        dstPortRange: 3000-3100
        dscp: 0
    updateNetworkSyslogServers:
      title: updateNetworkSyslogServers
      required:
      - servers
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: A list of the syslog servers for this network
      example:
        servers:
        - host: 1.2.3.4
          port: 443
          roles:
          - Wireless event log
          - URLs
    CustomPieChartItem:
      title: CustomPieChartItem
      required:
      - name
      - type
      - value
      type: object
      properties:
        name:
          type: string
          description: The name of the custom pie chart item.
        type:
          $ref: '#/components/schemas/Type8'
        value:
          type: string
          description: >-
            The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item
                (see sample request/response for more details).
    BandSelectionType:
      title: BandSelectionType
      enum:
      - ssid
      - ap
      type: string
      description: Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
    BandOperationMode1:
      title: BandOperationMode1
      enum:
      - dual
      - 2.4ghz
      - 5ghz
      type: string
      description: Choice between 'dual', '2.4ghz' or '5ghz'.
    Protocol3:
      title: Protocol3
      enum:
      - tcp
      - udp
      type: string
      description: "'tcp' or 'udp'"
    Rule8:
      title: Rule8
      required:
      - lanIp
      type: object
      properties:
        name:
          type: string
          description: A descriptive name for the rule
        publicIp:
          type: string
          description: The IP address that will be used to access the internal resource from the WAN
        lanIp:
          type: string
          description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        uplink:
          $ref: '#/components/schemas/Uplink1'
        allowedInbound:
          type: array
          items:
            $ref: '#/components/schemas/AllowedInbound'
          description: The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
    AuthMode:
      title: AuthMode
      enum:
      - open
      - psk
      - open-with-radius
      - 8021x-meraki
      - 8021x-radius
      type: string
      description: The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')
    updateNetworkSsidSplashSettings:
      title: updateNetworkSsidSplashSettings
      type: object
      properties:
        splashUrl:
          type: string
          description: "[optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'"
        useSplashUrl:
          type: boolean
          description: "[optional] Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL."
      example:
        splashUrl: https://www.custom_splash_url.com
        useSplashUrl: true
    ReservedIpRange1:
      title: ReservedIpRange1
      required:
      - start
      - end
      - comment
      type: object
      properties:
        start:
          type: string
          description: The first IP in the reserved range
        end:
          type: string
          description: The last IP in the reserved range
        comment:
          type: string
          description: A text comment for the reserved range
    createOrganizationBrandingPolicy:
      title: createOrganizationBrandingPolicy
      required:
      - name
      - enabled
      - adminSettings
      type: object
      properties:
        name:
          type: string
          description: Name of the Dashboard branding policy.
        enabled:
          type: boolean
          description: Boolean indicating whether this policy is enabled.
        adminSettings:
          $ref: '#/components/schemas/AdminSettings'
        helpSettings:
          $ref: '#/components/schemas/HelpSettings'
      example:
        brandingPolicyId: 456
        name: My Branding Policy
        enabled: true
        adminSettings:
          appliesTo: All admins of networks...
          values:
          - N_1234
          - L_5678
        helpSettings:
          helpTab: show
          getHelpSubtab: default or inherit
          communitySubtab: show
          casesSubtab: hide
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
          universalSearchKnowledgeBaseSearch: hide
          ciscoMerakiProductDocumentation: show
          supportContactInfo: show
          newFeaturesSubtab: show
          firewallInfoSubtab: hide
          apiDocsSubtab: default or inherit
          hardwareReplacementsSubtab: hide
          smForums: hide
    HelpTab:
      title: HelpTab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
            customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
    createOrganizationSamlRole:
      title: createOrganizationSamlRole
      type: object
      properties:
        role:
          type: string
          description: The role of the SAML administrator
        orgAccess:
          type: string
          description: The privilege of the SAML administrator on the organization
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag2'
          description: The list of tags that the SAML administrator has privleges on
        networks:
          type: array
          items:
            $ref: '#/components/schemas/Network2'
          description: The list of networks that the SAML administrator has privileges on
      example: {}
    V3AuthMode:
      title: V3AuthMode
      enum:
      - MD5
      - SHA
      type: string
      description: The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
    Rule14:
      title: Rule14
      required:
      - policy
      - protocol
      - srcCidr
      - destCidr
      type: object
      properties:
        comment:
          type: string
          description: Description of the rule (optional)
        policy:
          $ref: '#/components/schemas/Policy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        srcPort:
          type: string
          description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
        srcCidr:
          type: string
          description: Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)
        destPort:
          type: string
          description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
        destCidr:
          type: string
          description: Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)
        syslogEnabled:
          type: boolean
          description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
    updateNetworkSmAppPolaris:
      title: updateNetworkSmAppPolaris
      type: object
      properties:
        scope:
          type: string
          description: 'optional: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned'
        preventAutoInstall:
          type: boolean
          description: 'optional: Whether or not SM should auto-install this app (one of true or false)'
        usesVPP:
          type: boolean
          description: 'optional: Whether or not the app should use VPP by device assignment (one of true or false)'
      example:
        scope: withAny, tag1, tag2
        preventAutoInstall: true
        usesVPP: true
    updateNetworkSmDeviceFields:
      title: updateNetworkSmDeviceFields
      required:
      - deviceFields
      type: object
      properties:
        wifiMac:
          type: string
          description: The wifiMac of the device to be modified.
        id:
          type: string
          description: The id of the device to be modified.
        serial:
          type: string
          description: The serial of the device to be modified.
        deviceFields:
          $ref: '#/components/schemas/DeviceFields'
      example:
        id: 1284392014819
        deviceFields:
          name: Miles's phone
          notes: Here's some info about my device
    updateNetworkStaticRoute:
      title: updateNetworkStaticRoute
      type: object
      properties:
        name:
          type: string
          description: The name of the static route
        subnet:
          type: string
          description: The subnet of the static route
        gatewayIp:
          type: string
          description: The gateway IP (next hop) of the static route
        enabled:
          type: boolean
          description: The enabled state of the static route
        fixedIpAssignments:
          type: object
          description: The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
        reservedIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/ReservedIpRange1'
          description: The DHCP reserved IP ranges on the static route
      example:
        name: My route
        subnet: 192.168.1.0/24
        fixedIpAssignments:
          22:33:44:55:66:77:
            ip: 1.2.3.4
            name: Some client name
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
    updateNetworkSwitchSettings:
      title: updateNetworkSwitchSettings
      type: object
      properties:
        vlan:
          type: integer
          description: Management VLAN
          format: int32
        useCombinedPower:
          type: boolean
          description: The use Combined Power as the default behavior of secondary power supplies on supported devices.
        powerExceptions:
          type: array
          items:
            $ref: '#/components/schemas/PowerException'
          description: Exceptions on a per switch basis to "useCombinedPower"
      example:
        vlan: 100
        useCombinedPower: false
        powerExceptions:
        - serial: Q234-ABCD-0001
          powerType: redundant
        - serial: Q234-ABCD-0002
          powerType: combined
        - serial: Q234-ABCD-0003
          powerType: redundant
        - serial: Q234-ABCD-0004
          powerType: useNetworkSetting
    createNetworkSwitchStack:
      title: createNetworkSwitchStack
      required:
      - name
      - serials
      type: object
      properties:
        name:
          type: string
          description: The name of the new stack
        serials:
          type: array
          items:
            type: string
          description: An array of switch serials to be added into the new stack
      example:
        name: A cool stack
        serials:
        - QBZY-XWVU-TSRQ
        - QBAB-CDEF-GHIJ
    addNetworkSwitchStack:
      title: addNetworkSwitchStack
      required:
      - serial
      type: object
      properties:
        serial:
          type: string
          description: The serial of the switch to be added
      example:
        serial: QBZY-XWVU-TSRQ
    CommunitySubtab:
      title: CommunitySubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
    ApiDocsSubtab:
      title: ApiDocsSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
            'default or inherit', 'hide' or 'show'.
    renewOrganizationLicensesSeats:
      title: renewOrganizationLicensesSeats
      required:
      - licenseIdToRenew
      - unusedLicenseId
      type: object
      properties:
        licenseIdToRenew:
          type: string
          description: The ID of the SM license to renew. This license must already be assigned to an SM network
        unusedLicenseId:
          type: string
          description: The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
      example:
        licenseIdToRenew: 123
        unusedLicenseId: 1234
    Rule12:
      title: Rule12
      required:
      - policy
      - protocol
      - srcCidr
      - dstCidr
      type: object
      properties:
        comment:
          type: string
          description: Description of the rule (optional).
        policy:
          $ref: '#/components/schemas/Policy7'
        ipVersion:
          $ref: '#/components/schemas/IpVersion'
        protocol:
          $ref: '#/components/schemas/Protocol7'
        srcCidr:
          type: string
          description: Source IP address (in IP or CIDR notation) or 'any'.
        srcPort:
          type: string
          description: Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'.
        dstCidr:
          type: string
          description: Destination IP address (in IP or CIDR notation) or 'any'.
        dstPort:
          type: string
          description: Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'.
        vlan:
          type: string
          description: Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'.
    updateNetworkUplinkSettings:
      title: updateNetworkUplinkSettings
      type: object
      properties:
        bandwidthLimits:
          $ref: '#/components/schemas/BandwidthLimits7'
      example:
        bandwidthLimits:
          wan1:
            limitUp: 1000000
            limitDown: 1000000
          wan2:
            limitUp: 1000000
            limitDown: 1000000
          cellular:
            limitUp: 51200
            limitDown: 51200
    BandSelectionType1:
      title: BandSelectionType1
      enum:
      - ssid
      - ap
      type: string
      description: Band selection can be set to either 'ssid' or 'ap'.
    updateNetworkWirelessSettings:
      title: updateNetworkWirelessSettings
      type: object
      properties:
        meshingEnabled:
          type: boolean
          description: Toggle for enabling or disabling meshing in a network
        ipv6BridgeEnabled:
          type: boolean
          description: 'Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)'
        locationAnalyticsEnabled:
          type: boolean
          description: Toggle for enabling or disabling location analytics for your network
        ledLightsOn:
          type: boolean
          description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
      example:
        meshingEnabled: true
        ipv6BridgeEnabled: false
        locationAnalyticsEnabled: false
    moveOrganizationLicenses:
      title: moveOrganizationLicenses
      required:
      - destOrganizationId
      - licenseIds
      type: object
      properties:
        destOrganizationId:
          type: string
          description: The ID of the organization to move the licenses to
        licenseIds:
          type: array
          items:
            type: string
          description: A list of IDs of licenses to move to the new organization
      example:
        destOrganizationId: 2930418
        licenseIds:
        - 123
        - 456
    updateOrganizationLicense:
      title: updateOrganizationLicense
      type: object
      properties:
        deviceSerial:
          type: string
          description: The serial number of the device to assign this license to. Set this to null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.
      example: {}
    updateNetworkSecurityIntrusionSettings:
      title: updateNetworkSecurityIntrusionSettings
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode'
        idsRulesets:
          $ref: '#/components/schemas/IdsRulesets'
        protectedNetworks:
          $ref: '#/components/schemas/ProtectedNetworks'
      example:
        mode: prevention
        idsRulesets: balanced
        protectedNetworks:
          useDefault: false
          includedCidr:
          - 10.0.0.0/8
          - 127.0.0.0/8
          - 169.254.0.0/16
          - 172.16.0.0/12
          excludedCidr:
          - 10.0.0.0/8
          - 127.0.0.0/8
    createNetworkPiiRequest:
      title: createNetworkPiiRequest
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type6'
        datasets:
          type: array
          items:
            type: string
          description: 'The datasets related to the provided key that should be deleted. Only applies to "delete" requests. The value "all" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)'
        username:
          type: string
          description: The username of a network log in. Only applies to "delete" requests.
        email:
          type: string
          description: The email of a network user account. Only applies to "delete" requests.
        mac:
          type: string
          description: The MAC of a network client device. Applies to both "restrict processing" and "delete" requests.
        smDeviceId:
          type: string
          description: The sm_device_id of a Systems Manager device. The only way to "restrict processing" or "delete" a Systems Manager device. Must include "device" in the dataset for a "delete" request to destroy the device.
        smUserId:
          type: string
          description: The sm_user_id of a Systems Manager user. The only way to "restrict processing" or "delete" a Systems Manager user. Must include "user" in the dataset for a "delete" request to destroy the user.
      example:
        type: delete
        datasets:
        - usage
        - events
        mac: 00:77:00:77:00:77
    updateNetworkSecurityMalwareSettings:
      title: updateNetworkSecurityMalwareSettings
      required:
      - mode
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode1'
        allowedUrls:
          type: array
          items:
            $ref: '#/components/schemas/AllowedUrl'
          description: The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting
        allowedFiles:
          type: array
          items:
            $ref: '#/components/schemas/AllowedFile'
          description: The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting
      example:
        mode: enabled
        allowedUrls:
        - url: example.org
          comment: allow example.org
        - url: help.com.au
          comment: allow help.com.au
        allowedFiles:
        - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
          comment: allow ZIP file
    Mode1:
      title: Mode1
      enum:
      - enabled
      - disabled
      type: string
      description: Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
    updateNetworkSwitchSettingsDhcpServerPolicy:
      title: updateNetworkSwitchSettingsDhcpServerPolicy
      type: object
      properties:
        defaultPolicy:
          $ref: '#/components/schemas/DefaultPolicy'
        allowedServers:
          type: array
          items:
            type: string
          description: List the MAC addresses of DHCP servers to permit on the network. Applicable only if defaultPolicy is set to block. An empty array will clear the entries.
        blockedServers:
          type: array
          items:
            type: string
          description: List the MAC addresses of DHCP servers to block on the network. Applicable only if defaultPolicy is set to allow. An empty array will clear the entries.
      example:
        defaultPolicy: block
        allowedServers:
        - 00:50:56:00:00:01
        - 00:50:56:00:00:02
    updateNetworkWirelessRfProfile:
      title: updateNetworkWirelessRfProfile
      type: object
      properties:
        name:
          type: string
          description: The name of the new profile. Must be unique.
        clientBalancingEnabled:
          type: boolean
          description: Steers client to best available access point. Can be either true or false.
        minBitrateType:
          $ref: '#/components/schemas/MinBitrateType1'
        bandSelectionType:
          $ref: '#/components/schemas/BandSelectionType1'
        apBandSettings:
          $ref: '#/components/schemas/ApBandSettings1'
        twoFourGhzSettings:
          $ref: '#/components/schemas/TwoFourGhzSettings1'
        fiveGhzSettings:
          $ref: '#/components/schemas/FiveGhzSettings1'
      example: {}
    TwoFourGhzSettings1:
      title: TwoFourGhzSettings1
      type: object
      properties:
        maxPower:
          type: integer
          description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30.
          format: int32
        minPower:
          type: integer
          description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30.
          format: int32
        minBitrate:
          type: number
          description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
        validAutoChannels:
          type: array
          items:
            type: integer
            format: int32
          description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'.
        axEnabled:
          type: boolean
          description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering.
        rxsop:
          type: integer
          description: >-
            The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
                consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
                reset this to the default.
          format: int32
      description: Settings related to 2.4Ghz band
    createOrganization:
      title: createOrganization
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the organization
      example:
        name: My organization
    createOrganizationAdmin:
      title: createOrganizationAdmin
      required:
      - email
      - name
      - orgAccess
      type: object
      properties:
        email:
          type: string
          description: The email of the dashboard administrator. This attribute can not be updated.
        name:
          type: string
          description: The name of the dashboard administrator
        orgAccess:
          $ref: '#/components/schemas/OrgAccess'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: The list of tags that the dashboard administrator has privileges on
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NetworkAccess'
          description: The list of networks that the dashboard administrator has privileges on
      example:
        name: Miles Meraki
        email: miles@meraki.com
        orgAccess: none
        tags:
        - tag: west
          access: read-only
    Network2:
      title: Network2
      type: object
      properties:
        id:
          type: string
          description: The network ID
        access:
          type: string
          description: The privilege of the SAML administrator on the network
    IpsecPolicies:
      title: IpsecPolicies
      type: object
      properties:
        ikeCipherAlgo:
          type: array
          items:
            type: string
          description: "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
        ikeAuthAlgo:
          type: array
          items:
            type: string
          description: "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
        ikeDiffieHellmanGroup:
          type: array
          items:
            type: string
          description: "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'"
        ikeLifetime:
          type: integer
          description: The lifetime of the Phase 1 SA in seconds.
          format: int32
        childCipherAlgo:
          type: array
          items:
            type: string
          description: "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
        childAuthAlgo:
          type: array
          items:
            type: string
          description: "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'"
        childPfsGroup:
          type: array
          items:
            type: string
          description: "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'"
        childLifetime:
          type: integer
          description: The lifetime of the Phase 2 SA in seconds.
          format: int32
      description: Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
    Mode:
      title: Mode
      enum:
      - prevention
      - detection
      - disabled
      type: string
      description: Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)
    IdsRulesets:
      title: IdsRulesets
      enum:
      - connectivity
      - balanced
      - security
      type: string
      description: Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved
    ProtectedNetworks:
      title: ProtectedNetworks
      type: object
      properties:
        useDefault:
          type: boolean
          description: 'true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved'
        includedCidr:
          type: array
          items:
            type: string
          description: list of IP addresses or subnets being protected (required if 'useDefault' is false)
        excludedCidr:
          type: array
          items:
            type: string
          description: list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)
      description: Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode
    RadiusFailoverPolicy:
      title: RadiusFailoverPolicy
      enum:
      - Deny access
      - Allow access
      type: string
      description: This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')
    PowerType:
      title: PowerType
      enum:
      - combined
      - redundant
      - useNetworkSetting
      type: string
      description: Per switch exception (combined, redundant, useNetworkSetting)
    Override:
      title: Override
      required:
      - mtuSize
      type: object
      properties:
        switches:
          type: array
          items:
            type: string
          description: List of switch serials. Applicable only for switch network.
        switchProfiles:
          type: array
          items:
            type: string
          description: List of switch profile IDs. Applicable only for template network.
        mtuSize:
          type: integer
          description: MTU size for the switches or switch profiles.
          format: int32
    createNetworkVlan:
      title: createNetworkVlan
      required:
      - id
      - name
      - subnet
      - applianceIp
      type: object
      properties:
        id:
          type: string
          description: The VLAN ID of the new VLAN (must be between 1 and 4094)
        name:
          type: string
          description: The name of the new VLAN
        subnet:
          type: string
          description: The subnet of the VLAN
        applianceIp:
          type: string
          description: The local IP of the appliance on the VLAN
      example:
        id: 1234
        name: My VLAN
        subnet: 192.168.1.0/24
        applianceIp: 1.2.3.4
    TwoFourGhzSettings:
      title: TwoFourGhzSettings
      type: object
      properties:
        maxPower:
          type: integer
          description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 30.
          format: int32
        minPower:
          type: integer
          description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30. Defaults to 5.
          format: int32
        minBitrate:
          type: number
          description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
        validAutoChannels:
          type: array
          items:
            type: integer
            format: int32
          description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
        axEnabled:
          type: boolean
          description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
        rxsop:
          type: integer
          description: >-
            The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
                consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
                reset this to the default.
          format: int32
      description: Settings related to 2.4Ghz band
    UniversalSearchKnowledgeBaseSearch:
      title: UniversalSearchKnowledgeBaseSearch
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
            whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
    Tag2:
      title: Tag2
      type: object
      properties:
        tag:
          type: string
          description: The name of the tag
        access:
          type: string
          description: The privilege of the SAML administrator on the tag
    WhitelistedRule:
      title: WhitelistedRule
      required:
      - ruleId
      type: object
      properties:
        ruleId:
          type: string
          description: A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
        message:
          type: string
          description: Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
    updateOrganizationSnmp:
      title: updateOrganizationSnmp
      type: object
      properties:
        v2cEnabled:
          type: boolean
          description: Boolean indicating whether SNMP version 2c is enabled for the organization.
        v3Enabled:
          type: boolean
          description: Boolean indicating whether SNMP version 3 is enabled for the organization.
        v3AuthMode:
          $ref: '#/components/schemas/V3AuthMode'
        v3AuthPass:
          type: string
          description: The SNMP version 3 authentication password. Must be at least 8 characters if specified.
        v3PrivMode:
          $ref: '#/components/schemas/V3PrivMode'
        v3PrivPass:
          type: string
          description: The SNMP version 3 privacy password. Must be at least 8 characters if specified.
        peerIps:
          type: string
          description: The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. "1.2.3.4;2.3.4.5").
      example:
        v2cEnabled: false
        v3Enabled: true
        v3AuthMode: SHA
        v3PrivMode: AES128
        peerIps: 123.123.123.1
    Peer:
      title: Peer
      required:
      - name
      - publicIp
      - privateSubnets
      - secret
      type: object
      properties:
        name:
          type: string
          description: The name of the VPN peer
        publicIp:
          type: string
          description: The public IP of the VPN peer
        remoteId:
          type: string
          description: '[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.'
        privateSubnets:
          type: array
          items:
            type: string
          description: The list of the private subnets of the VPN peer
        ipsecPolicies:
          $ref: '#/components/schemas/IpsecPolicies'
        ipsecPoliciesPreset:
          type: string
          description: "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
        secret:
          type: string
          description: The shared secret with the VPN peer
        networkTags:
          type: array
          items:
            type: string
          description: A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
    updateOrganizationVpnFirewallRules:
      title: updateOrganizationVpnFirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule14'
          description: An ordered array of the firewall rules (not including the default rule)
        syslogDefaultRule:
          type: boolean
          description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
    Type6:
      title: Type6
      enum:
      - delete
      - restrict processing
      type: string
      description: One of "delete" or "restrict processing"
    Uplink3:
      title: Uplink3
      enum:
      - internet1
      - internet2
      - both
      type: string
      description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')
    Rule9:
      title: Rule9
      required:
      - lanIp
      - publicPort
      - localPort
      - allowedIps
      - protocol
      type: object
      properties:
        name:
          type: string
          description: A descriptive name for the rule
        lanIp:
          type: string
          description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
        uplink:
          $ref: '#/components/schemas/Uplink3'
        publicPort:
          type: string
          description: A port or port ranges that will be forwarded to the host on the LAN
        localPort:
          type: string
          description: A port or port ranges that will receive the forwarded traffic from the WAN
        allowedIps:
          type: array
          items:
            type: string
          description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)
        protocol:
          $ref: '#/components/schemas/Protocol5'
    createNetworkSwitchSettingsQosRule:
      title: createNetworkSwitchSettingsQosRule
      required:
      - vlan
      type: object
      properties:
        vlan:
          type: integer
          description: The VLAN of the incoming packet. A null value will match any VLAN.
          format: int32
        protocol:
          $ref: '#/components/schemas/Protocol8'
        srcPort:
          type: integer
          description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
          format: int32
        srcPortRange:
          type: string
          description: 'The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        dstPort:
          type: integer
          description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
          format: int32
        dstPortRange:
          type: string
          description: 'The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80'
        dscp:
          type: integer
          description: DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
          format: int32
      example:
        vlan: 100
        protocol: TCP
        srcPort: 2000
        srcPortRange: 
        dstPort: 
        dstPortRange: 3000-3100
        dscp: 0
    StpBridgePriority:
      title: StpBridgePriority
      required:
      - stpPriority
      type: object
      properties:
        switchProfiles:
          type: array
          items:
            type: string
          description: List of switch profile IDs
        switches:
          type: array
          items:
            type: string
          description: List of switch serial numbers
        stacks:
          type: array
          items:
            type: string
          description: List of stack IDs
        stpPriority:
          type: integer
          description: STP priority for switch, stacks, or switch profiles
          format: int32
    BandwidthLimits7:
      title: BandwidthLimits7
      type: object
      properties:
        wan1:
          $ref: '#/components/schemas/Wan11'
        wan2:
          $ref: '#/components/schemas/Wan21'
        cellular:
          $ref: '#/components/schemas/Cellular'
      description: A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
    DhcpOption:
      title: DhcpOption
      required:
      - code
      - type
      - value
      type: object
      properties:
        code:
          type: string
          description: The code for the DHCP option. This should be an integer between 2 and 254.
        type:
          $ref: '#/components/schemas/Type10'
        value:
          type: string
          description: The value for the DHCP option
    ApBandSettings:
      title: ApBandSettings
      type: object
      properties:
        bandOperationMode:
          $ref: '#/components/schemas/BandOperationMode'
        bandSteeringEnabled:
          type: boolean
          description: Steers client to most open band. Can be either true or false. Defaults to true.
      description: Settings that will be enabled if selectionType is set to 'ap'.
    updateOrganizationAdmin:
      title: updateOrganizationAdmin
      type: object
      properties:
        name:
          type: string
          description: The name of the dashboard administrator
        orgAccess:
          $ref: '#/components/schemas/OrgAccess'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: The list of tags that the dashboard administrator has privileges on
        networks:
          type: array
          items:
            $ref: '#/components/schemas/NetworkAccess'
          description: The list of networks that the dashboard administrator has privileges on
      example:
        name: Miles Meraki
        email: miles@meraki.com
        orgAccess: none
        tags:
        - tag: west
          access: read-only
    updateNetworkSsid:
      title: updateNetworkSsid
      type: object
      properties:
        name:
          type: string
          description: The name of the SSID
        enabled:
          type: boolean
          description: Whether or not the SSID is enabled
        authMode:
          $ref: '#/components/schemas/AuthMode'
        enterpriseAdminAccess:
          $ref: '#/components/schemas/EnterpriseAdminAccess'
        encryptionMode:
          $ref: '#/components/schemas/EncryptionMode'
        psk:
          type: string
          description: The passkey for the SSID. This param is only valid if the authMode is 'psk'
        wpaEncryptionMode:
          $ref: '#/components/schemas/WpaEncryptionMode'
        splashPage:
          $ref: '#/components/schemas/SplashPage'
        radiusServers:
          type: array
          items:
            $ref: '#/components/schemas/RadiusServer'
          description: The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'
        radiusCoaEnabled:
          type: boolean
          description: If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.
        radiusFailoverPolicy:
          $ref: '#/components/schemas/RadiusFailoverPolicy'
        radiusLoadBalancingPolicy:
          $ref: '#/components/schemas/RadiusLoadBalancingPolicy'
        radiusAccountingEnabled:
          type: boolean
          description: Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'
        radiusAccountingServers:
          type: array
          items:
            $ref: '#/components/schemas/RadiusAccountingServer'
          description: The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'
        radiusAttributeForGroupPolicies:
          type: string
          description: Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message
        ipAssignmentMode:
          type: string
          description: The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')
        useVlanTagging:
          type: boolean
          description: Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
        concentratorNetworkId:
          type: string
          description: The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.
        vlanId:
          type: integer
          description: The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'
          format: int32
        defaultVlanId:
          type: integer
          description: The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
          format: int32
        apTagsAndVlanIds:
          type: array
          items:
            $ref: '#/components/schemas/ApTagsAndVlanId'
          description: The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
        walledGardenEnabled:
          type: boolean
          description: Allow access to a configurable list of IP ranges, which users may access prior to sign-on.
        walledGardenRanges:
          type: string
          description: Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.
        radiusOverride:
          type: boolean
          description: If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.
        minBitrate:
          type: number
          description: The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')
        bandSelection:
          type: string
          description: The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')
        perClientBandwidthLimitUp:
          type: integer
          description: The upload bandwidth limit in Kbps. (0 represents no limit.)
          format: int32
        perClientBandwidthLimitDown:
          type: integer
          description: The download bandwidth limit in Kbps. (0 represents no limit.)
          format: int32
        lanIsolationEnabled:
          type: boolean
          description: Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.
      example:
        name: My SSID
        enabled: true
    Protocol9:
      title: Protocol9
      enum:
      - ANY
      - TCP
      - UDP
      type: string
      description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY".
    Server:
      title: Server
      required:
      - host
      - port
      - roles
      type: object
      properties:
        host:
          type: string
          description: The IP address of the syslog server
        port:
          type: integer
          description: The port of the syslog server
          format: int32
        roles:
          type: array
          items:
            type: string
          description: "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
    Type10:
      title: Type10
      enum:
      - text
      - ip
      - hex
      - integer
      type: string
      description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
    updateOrganizationActionBatch:
      title: updateOrganizationActionBatch
      type: object
      properties:
        confirmed:
          type: boolean
          description: A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.
        synchronous:
          type: boolean
          description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch.
      example:
        confirmed: true
        synchronous: false
    AdminSettings:
      title: AdminSettings
      type: object
      properties:
        appliesTo:
          $ref: '#/components/schemas/AppliesTo'
        values:
          type: array
          items:
            type: string
          description: >-
            If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                specify an array of tag names.
      description: Settings for describing which kinds of admins this policy applies to.
    claimOrganization:
      title: claimOrganization
      type: object
      properties:
        orders:
          type: array
          items:
            type: string
          description: The numbers of the orders that should be claimed
        serials:
          type: array
          items:
            type: string
          description: The serials of the devices that should be claimed
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
          description: The licenses that should be claimed
      example:
        orders:
        - 4CXXXXXXX
        serials:
        - Q234-ABCD-5678
        licenses:
        - key: Z2XXXXXXXXXX
          mode: addDevices
    Protocol5:
      title: Protocol5
      enum:
      - tcp
      - udp
      type: string
      description: TCP or UDP
    AllowedInbound:
      title: AllowedInbound
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/Protocol4'
        destinationPorts:
          type: array
          items:
            type: string
          description: An array of ports or port ranges that will be forwarded to the host on the LAN
        allowedIps:
          type: array
          items:
            type: string
          description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'
    AllowedFile:
      title: AllowedFile
      required:
      - sha256
      - comment
      type: object
      properties:
        sha256:
          type: string
          description: The file sha256 hash to whitelist
        comment:
          type: string
          description: Comment about the whitelisted entity
    wipeNetworkSmDevice:
      title: wipeNetworkSmDevice
      type: object
      properties:
        wifiMac:
          type: string
          description: The wifiMac of the device to be wiped.
        id:
          type: string
          description: The id of the device to be wiped.
        serial:
          type: string
          description: The serial of the device to be wiped.
        pin:
          type: integer
          description: The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.
          format: int32
      example:
        id: 1284392014819
    Access1:
      title: Access1
      enum:
      - none
      - community
      - users
      type: string
      description: The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).
    WpaEncryptionMode:
      title: WpaEncryptionMode
      enum:
      - WPA1 only
      - WPA1 and WPA2
      - WPA2 only
      - WPA3 Transition Mode
      - WPA3 only
      type: string
      description: The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')
    createNetworkStaticRoute:
      title: createNetworkStaticRoute
      required:
      - name
      - subnet
      - gatewayIp
      type: object
      properties:
        name:
          type: string
          description: The name of the new static route
        subnet:
          type: string
          description: The subnet of the static route
        gatewayIp:
          type: string
          description: The gateway IP (next hop) of the static route
      example:
        name: My route
        subnet: 192.168.1.0/24
        gatewayIp: 1.2.3.5
    PowerException:
      title: PowerException
      required:
      - serial
      - powerType
      type: object
      properties:
        serial:
          type: string
          description: Serial number of the switch
        powerType:
          $ref: '#/components/schemas/PowerType'
    updateNetworkSwitchSettingsMtu:
      title: updateNetworkSwitchSettingsMtu
      type: object
      properties:
        defaultMtuSize:
          type: integer
          description: MTU size for the entire network. Default value is 9578.
          format: int32
        overrides:
          type: array
          items:
            $ref: '#/components/schemas/Override'
          description: Override MTU size for individual switches or switch profiles. An empty array will clear overrides.
      example:
        defaultMtuSize: 9578
        overrides:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          mtuSize: 1500
        - switchProfiles:
          - 1284392014819
          - 2983092129865
          mtuSize: 1600
    removeNetworkSwitchStack:
      title: removeNetworkSwitchStack
      required:
      - serial
      type: object
      properties:
        serial:
          type: string
          description: The serial of the switch to be removed
      example:
        serial: QBZY-XWVU-TSRQ
    Cellular:
      title: Cellular
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps). null indicates no limit
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps). null indicates no limit
          format: int32
      description: The bandwidth settings for the 'cellular' uplink
    createNetworkWirelessRfProfile:
      title: createNetworkWirelessRfProfile
      required:
      - name
      - bandSelectionType
      type: object
      properties:
        name:
          type: string
          description: The name of the new profile. Must be unique. This param is required on creation.
        clientBalancingEnabled:
          type: boolean
          description: Steers client to best available access point. Can be either true or false. Defaults to true.
        minBitrateType:
          $ref: '#/components/schemas/MinBitrateType'
        bandSelectionType:
          $ref: '#/components/schemas/BandSelectionType'
        apBandSettings:
          $ref: '#/components/schemas/ApBandSettings'
        twoFourGhzSettings:
          $ref: '#/components/schemas/TwoFourGhzSettings'
        fiveGhzSettings:
          $ref: '#/components/schemas/FiveGhzSettings'
      example: {}
    lockNetworkSmDevices:
      title: lockNetworkSmDevices
      type: object
      properties:
        wifiMacs:
          type: string
          description: The wifiMacs of the devices to be locked.
        ids:
          type: string
          description: The ids of the devices to be locked.
        serials:
          type: string
          description: The serials of the devices to be locked.
        scope:
          type: string
          description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.
        pin:
          type: integer
          description: The pin number for locking macOS devices (a six digit number). Required only for macOS devices.
          format: int32
      example:
        ids: '"1284392014819"'
    HardwareReplacementsSubtab:
      title: HardwareReplacementsSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
            'default or inherit', 'hide' or 'show'.
    HelpSettings1:
      title: HelpSettings1
      type: object
      properties:
        helpTab:
          $ref: '#/components/schemas/HelpTab'
        getHelpSubtab:
          $ref: '#/components/schemas/GetHelpSubtab'
        communitySubtab:
          $ref: '#/components/schemas/CommunitySubtab'
        casesSubtab:
          $ref: '#/components/schemas/CasesSubtab'
        dataProtectionRequestsSubtab:
          $ref: '#/components/schemas/DataProtectionRequestsSubtab'
        getHelpSubtabKnowledgeBaseSearch:
          type: string
          description: The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        universalSearchKnowledgeBaseSearch:
          $ref: '#/components/schemas/UniversalSearchKnowledgeBaseSearch'
        ciscoMerakiProductDocumentation:
          type: string
          description: The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        supportContactInfo:
          type: string
          description: The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        newFeaturesSubtab:
          $ref: '#/components/schemas/NewFeaturesSubtab'
        firewallInfoSubtab:
          $ref: '#/components/schemas/FirewallInfoSubtab'
        apiDocsSubtab:
          $ref: '#/components/schemas/ApiDocsSubtab'
        hardwareReplacementsSubtab:
          $ref: '#/components/schemas/HardwareReplacementsSubtab'
        smForums:
          $ref: '#/components/schemas/SmForums'
      description: >-
        Settings for describing the modifications to various Help page features. Each property in this object accepts one of
            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
            Dashboard; see the documentation for each property to see the allowed values.
    Mode4:
      title: Mode4
      enum:
      - addDevices
      - renew
      type: string
      description: Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is legacy and only applies to coterm licensing; it should not be specified when claiming per-device licenses. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.
    moveOrganizationLicensesSeats:
      title: moveOrganizationLicensesSeats
      required:
      - destOrganizationId
      - licenseId
      - seatCount
      type: object
      properties:
        destOrganizationId:
          type: string
          description: The ID of the organization to move the SM seats to
        licenseId:
          type: string
          description: The ID of the SM license to move the seats from
        seatCount:
          type: integer
          description: The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
          format: int32
      example:
        destOrganizationId: 2930418
        licenseId: 1234
        seatCount: 20
    updateOrganizationSecurityIntrusionSettings:
      title: updateOrganizationSecurityIntrusionSettings
      required:
      - whitelistedRules
      type: object
      properties:
        whitelistedRules:
          type: array
          items:
            $ref: '#/components/schemas/WhitelistedRule'
          description: Sets a list of specific SNORT® signatures to whitelist
      example:
        whitelistedRules:
        - ruleId: meraki:intrusion/snort/GID/01/SID/688
          message: SQL sa login failed
        - ruleId: meraki:intrusion/snort/GID/01/SID/5805
          message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
    checkinNetworkSmDevices:
      title: checkinNetworkSmDevices
      type: object
      properties:
        wifiMacs:
          type: string
          description: The wifiMacs of the devices to be checked-in.
        ids:
          type: string
          description: The ids of the devices to be checked-in.
        serials:
          type: string
          description: The serials of the devices to be checked-in.
        scope:
          type: string
          description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
      example:
        ids: '"1284392014819"'
    EncryptionMode:
      title: EncryptionMode
      enum:
      - wep
      - wpa
      type: string
      description: The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'
    RadiusAccountingServer:
      title: RadiusAccountingServer
      required:
      - host
      - secret
      type: object
      properties:
        host:
          type: string
          description: IP address to which the APs will send RADIUS accounting messages
        port:
          type: integer
          description: Port on the RADIUS server that is listening for accounting messages
          format: int32
        secret:
          type: string
          description: Shared key used to authenticate messages between the APs and RADIUS server
    Protocol8:
      title: Protocol8
      enum:
      - ANY
      - TCP
      - UDP
      type: string
      description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
    updateNetworkSwitchSettingsQosRulesOrder:
      title: updateNetworkSwitchSettingsQosRulesOrder
      required:
      - ruleIds
      type: object
      properties:
        ruleIds:
          type: array
          items:
            type: string
          description: A list of quality of service rule IDs arranged in order in which they should be processed by the switch.
      example:
        ruleIds:
        - 1284392014819
        - 2983092129865
    updateNetworkSwitchSettingsStormControl:
      title: updateNetworkSwitchSettingsStormControl
      type: object
      properties:
        broadcastThreshold:
          type: integer
          description: Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration.
          format: int32
        multicastThreshold:
          type: integer
          description: Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration.
          format: int32
        unknownUnicastThreshold:
          type: integer
          description: Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration.
          format: int32
      example:
        broadcastThreshold: 30
        multicastThreshold: 30
        unknownUnicastThreshold: 30
    Wan11:
      title: Wan11
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps). null indicates no limit
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps). null indicates no limit
          format: int32
      description: The bandwidth settings for the 'wan1' uplink
    Wan21:
      title: Wan21
      type: object
      properties:
        limitUp:
          type: integer
          description: The maximum upload limit (integer, in Kbps). null indicates no limit
          format: int32
        limitDown:
          type: integer
          description: The maximum download limit (integer, in Kbps). null indicates no limit
          format: int32
      description: The bandwidth settings for the 'wan2' uplink
    updateNetworkVlansEnabledState:
      title: updateNetworkVlansEnabledState
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Boolean indicating whether to enable (true) or disable (false) VLANs for the network
      example:
        enabled: true
    createOrganizationActionBatch:
      title: createOrganizationActionBatch
      required:
      - actions
      type: object
      properties:
        confirmed:
          type: boolean
          description: Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.
        synchronous:
          type: boolean
          description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
          description: A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
      example:
        confirmed: true
        synchronous: false
        actions:
        - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
          operation: update
          body:
            enabled: false
    AppliesTo:
      title: AppliesTo
      enum:
      - All organization admins
      - All enterprise admins
      - All network admins
      - All admins of networks...
      - All admins of networks tagged...
      - Specific admins...
      - All admins
      - All SAML admins
      type: string
      description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
    GetHelpSubtab:
      title: GetHelpSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
            that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
            and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
    SmForums:
      title: SmForums
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
            organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
    assignOrganizationLicensesSeats:
      title: assignOrganizationLicensesSeats
      required:
      - licenseId
      - networkId
      - seatCount
      type: object
      properties:
        licenseId:
          type: string
          description: The ID of the SM license to assign seats from
        networkId:
          type: string
          description: The ID of the SM network to assign the seats to
        seatCount:
          type: integer
          description: The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
          format: int32
      example:
        licenseId: 1234
        networkId: N_24329156
        seatCount: 20
    updateOrganizationThirdPartyVPNPeers:
      title: updateOrganizationThirdPartyVPNPeers
      required:
      - peers
      type: object
      properties:
        peers:
          type: array
          items:
            $ref: '#/components/schemas/Peer'
          description: The list of VPN peers
      example:
        peers:
        - name: My peer 1
          publicIp: 123.123.123.1
          privateSubnets:
          - 192.168.1.0/24
          - 192.168.128.0/24
          secret: asdf1234
          ipsecPolicies:
            ikeCipherAlgo:
            - tripledes
            ikeAuthAlgo:
            - sha1
            ikeDiffieHellmanGroup:
            - group2
            ikeLifetime: 28800
            childCipherAlgo:
            - aes128
            childAuthAlgo:
            - sha1
            childPfsGroup:
            - disabled
            childLifetime: 28800
        - name: My peer 2
          publicIp: 123.123.123.2
          remoteId: miles@meraki.com
          privateSubnets:
          - 192.168.2.0/24
          - 192.168.129.0/24
          secret: asdf56785678567856785678
          ipsecPoliciesPreset: default
    AllowedUrl:
      title: AllowedUrl
      required:
      - url
      - comment
      type: object
      properties:
        url:
          type: string
          description: The url to whitelist
        comment:
          type: string
          description: Comment about the whitelisted entity
    Hub:
      title: Hub
      required:
      - hubId
      type: object
      properties:
        hubId:
          type: string
          description: The network ID of the hub.
        useDefaultRoute:
          type: boolean
          description: Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.
    Subnet:
      title: Subnet
      required:
      - localSubnet
      type: object
      properties:
        localSubnet:
          type: string
          description: The CIDR notation subnet used within the VPN
        useVpn:
          type: boolean
          description: Indicates the presence of the subnet in the VPN
    createNetworkSmTargetGroup:
      title: createNetworkSmTargetGroup
      type: object
      properties:
        name:
          type: string
          description: The name of this target group
        scope:
          type: string
          description: The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
      example:
        name: My target group
        scope: none
        tags: '[]'
        type: devices
    ssidNumber:
      title: ssidNumber
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      type: integer
      example: 0
    Rule11:
      title: Rule11
      required:
      - definitions
      type: object
      properties:
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/Definition'
          description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        perClientBandwidthLimits:
          $ref: '#/components/schemas/PerClientBandwidthLimits'
        dscpTagValue:
          type: integer
          description: >-
            The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          format: int32
        pcpTagValue:
          type: integer
          description: >-
            The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                null means 'Do not set PCP tag'.
          format: int32
    DefaultPolicy:
      title: DefaultPolicy
      enum:
      - allow
      - block
      type: string
      description: "'allow' or 'block' new DHCP servers. Default value is 'allow'."
    updateNetworkSwitchSettingsStp:
      title: updateNetworkSwitchSettingsStp
      type: object
      properties:
        rstpEnabled:
          type: boolean
          description: The spanning tree protocol status in network
        stpBridgePriority:
          type: array
          items:
            $ref: '#/components/schemas/StpBridgePriority'
          description: STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings.
      example:
        rstpEnabled: true
        stpBridgePriority:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          stpPriority: 4096
        - stacks:
          - 789102
          - 123456
          - 129102
          stpPriority: 28672
    ApBandSettings1:
      title: ApBandSettings1
      type: object
      properties:
        bandOperationMode:
          $ref: '#/components/schemas/BandOperationMode1'
        bandSteeringEnabled:
          type: boolean
          description: Steers client to most open band. Can be either true or false.
      description: Settings that will be enabled if selectionType is set to 'ap'.
    FiveGhzSettings1:
      title: FiveGhzSettings1
      type: object
      properties:
        maxPower:
          type: integer
          description: Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30.
          format: int32
        minPower:
          type: integer
          description: Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30.
          format: int32
        minBitrate:
          type: integer
          description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'.
          format: int32
        validAutoChannels:
          type: array
          items:
            type: integer
            format: int32
          description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.
        channelWidth:
          type: string
          description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'.
        rxsop:
          type: integer
          description: >-
            The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after
                consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will
                reset this to the default.
          format: int32
      description: Settings related to 5Ghz band
    updateOrganization:
      title: updateOrganization
      type: object
      properties:
        name:
          type: string
          description: The name of the organization
      example:
        name: My organization
    License:
      title: License
      required:
      - key
      type: object
      properties:
        key:
          type: string
          description: The key of the license
        mode:
          $ref: '#/components/schemas/Mode4'
    state:
      title: state
      enum:
      - active
      - expired
      - expiring
      - unused
      - unusedActive
      - recentlyQueued
      type: string
    createNetworkSmAppPolaris:
      title: createNetworkSmAppPolaris
      required:
      - scope
      type: object
      properties:
        scope:
          type: string
          description: The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned
        manifestUrl:
          type: string
          description: The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)
        bundleId:
          type: string
          description: The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)
        preventAutoInstall:
          type: boolean
          description: (optional) Whether or not SM should auto-install this app (one of true or false). False by default.
        usesVPP:
          type: boolean
          description: (optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.
      example:
        scope: withAny, tag1, tag2
        manifestUrl: https://website.com/assets/manifest.plist
        preventAutoInstall: true
        usesVPP: true
    updateNetworkSmDevicesTags:
      title: updateNetworkSmDevicesTags
      required:
      - tags
      - updateAction
      type: object
      properties:
        wifiMacs:
          type: string
          description: The wifiMacs of the devices to be modified.
        ids:
          type: string
          description: The ids of the devices to be modified.
        serials:
          type: string
          description: The serials of the devices to be modified.
        scope:
          type: string
          description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
        tags:
          type: string
          description: The tags to be added, deleted, or updated.
        updateAction:
          type: string
          description: One of add, delete, or update. Only devices that have been modified will be returned.
      example:
        scope: withAny, old_tag
        updateAction: add
        tags: tag1,tag2
    User:
      title: User
      required:
      - username
      - passphrase
      type: object
      properties:
        username:
          type: string
          description: The username for the SNMP user. Required.
        passphrase:
          type: string
          description: The passphrase for the SNMP user. Required.
    SplashPage:
      title: SplashPage
      enum:
      - None
      - Click-through splash page
      - Billing
      - Password-protected with Meraki RADIUS
      - Password-protected with custom RADIUS
      - Password-protected with Active Directory
      - Password-protected with LDAP
      - SMS authentication
      - Systems Manager Sentry
      - Facebook Wi-Fi
      - Google OAuth
      - Sponsored guest
      type: string
      description: The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.
    updateNetworkSwitchPortSchedule:
      title: updateNetworkSwitchPortSchedule
      type: object
      properties:
        name:
          type: string
          description: The name for your port schedule.
        portSchedule:
          $ref: '#/components/schemas/PortSchedule'
      example:
        name: Weekdays schedule
        portSchedule:
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
    updateNetworkSwitchSettingsMulticast:
      title: updateNetworkSwitchSettingsMulticast
      type: object
      properties:
        defaultSettings:
          $ref: '#/components/schemas/DefaultSettings'
        overrides:
          type: array
          items:
            $ref: '#/components/schemas/Override1'
          description: Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings.
      example:
        defaultSettings:
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
        overrides:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
        - stacks:
          - 789102
          - 123456
          - 129102
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
    Override1:
      title: Override1
      required:
      - igmpSnoopingEnabled
      - floodUnknownMulticastTrafficEnabled
      type: object
      properties:
        switchProfiles:
          type: array
          items:
            type: string
          description: List of switch profiles ids for template network
        switches:
          type: array
          items:
            type: string
          description: List of switch serials for non-template network
        stacks:
          type: array
          items:
            type: string
          description: List of switch stack ids for non-template network
        igmpSnoopingEnabled:
          type: boolean
          description: IGMP snooping setting for switches, switch stacks or switch profiles
        floodUnknownMulticastTrafficEnabled:
          type: boolean
          description: Flood unknown multicast traffic setting for switches, switch stacks or switch profiles
    updateNetworkTrafficAnalysisSettings:
      title: updateNetworkTrafficAnalysisSettings
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode3'
        customPieChartItems:
          type: array
          items:
            $ref: '#/components/schemas/CustomPieChartItem'
          description: The list of items that make up the custom pie chart for traffic reporting.
      example:
        mode: detailed
        customPieChartItems:
        - name: Item from hostname
          type: host
          value: example.com
        - name: Item from port
          type: port
          value: 440
        - name: Item from IP
          type: ipRange
          value: 192.1.0.0
        - name: Item from IP range (CIDR)
          type: ipRange
          value: 192.2.0.0/16
        - name: Item from IP range with port
          type: ipRange
          value: 192.3.0.0/16:80
    updateNetworkTrafficShaping:
      title: updateNetworkTrafficShaping
      type: object
      properties:
        defaultRulesEnabled:
          type: boolean
          description: >-
            Whether default traffic shaping rules are enabled (true) or disabled (false).
                There are 4 default rules, which can
                be seen on your network's traffic shaping page. Note that default rules
                count against the rule limit of 8.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule13'
          description: >-
            An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
      example:
        defaultRulesEnabled: true
        rules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: 9090
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          - type: applicationCategory
            value:
              id: meraki:layer7/category/2
              name: Blogging
          - type: application
            value:
              id: meraki:layer7/application/133
              name: Battle.net
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 
          priority: normal
    Rule13:
      title: Rule13
      required:
      - definitions
      type: object
      properties:
        definitions:
          type: array
          items:
            $ref: '#/components/schemas/Definition'
          description: A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
        perClientBandwidthLimits:
          $ref: '#/components/schemas/PerClientBandwidthLimits'
        dscpTagValue:
          type: integer
          description: >-
            The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          format: int32
        priority:
          type: string
          description: >-
            A string, indicating the priority level for packets bound to your rule.
                Can be 'low', 'normal' or 'high'.
    DhcpHandling:
      title: DhcpHandling
      enum:
      - Run a DHCP server
      - Relay DHCP to another server
      - Do not respond to DHCP requests
      type: string
      description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
    updateNetworkWarmSpareSettings:
      title: updateNetworkWarmSpareSettings
      required:
      - enabled
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable warm spare
        spareSerial:
          type: string
          description: Serial number of the warm spare appliance
        uplinkMode:
          type: string
          description: Uplink mode, either virtual or public
        virtualIp1:
          type: string
          description: The WAN 1 shared IP
        virtualIp2:
          type: string
          description: The WAN 2 shared IP
      example:
        enabled: true
        spareSerial: Q234-ABCD-5678
        uplinkMode: virtual
        virtualIp1: 1.2.3.4
        virtualIp2: 1.2.3.4
    Action:
      title: Action
      required:
      - resource
      - operation
      type: object
      properties:
        resource:
          type: string
          description: Unique identifier for the resource to be acted on
        operation:
          type: string
          description: The operation to be used
        body:
          type: object
          description: The body of the action
          example: {}
    HelpSettings:
      title: HelpSettings
      type: object
      properties:
        helpTab:
          $ref: '#/components/schemas/HelpTab'
        getHelpSubtab:
          $ref: '#/components/schemas/GetHelpSubtab'
        communitySubtab:
          $ref: '#/components/schemas/CommunitySubtab'
        casesSubtab:
          $ref: '#/components/schemas/CasesSubtab'
        dataProtectionRequestsSubtab:
          $ref: '#/components/schemas/DataProtectionRequestsSubtab'
        getHelpSubtabKnowledgeBaseSearch:
          type: string
          description: The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        universalSearchKnowledgeBaseSearch:
          $ref: '#/components/schemas/UniversalSearchKnowledgeBaseSearch'
        ciscoMerakiProductDocumentation:
          type: string
          description: The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        supportContactInfo:
          type: string
          description: The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
        newFeaturesSubtab:
          $ref: '#/components/schemas/NewFeaturesSubtab'
        firewallInfoSubtab:
          $ref: '#/components/schemas/FirewallInfoSubtab'
        apiDocsSubtab:
          $ref: '#/components/schemas/ApiDocsSubtab'
        hardwareReplacementsSubtab:
          $ref: '#/components/schemas/HardwareReplacementsSubtab'
        smForums:
          $ref: '#/components/schemas/SmForums'
      description: >-
        Settings for describing the modifications to various Help page features. Each property in this object accepts one of
            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
            Dashboard; see the documentation for each property to see the allowed values.
         Each property defaults to 'default or inherit' when not provided.
    createOrganizationInsightMonitoredMediaServer:
      title: createOrganizationInsightMonitoredMediaServer
      required:
      - name
      - address
      type: object
      properties:
        name:
          type: string
          description: The name of the VoIP provider
        address:
          type: string
          description: The IP address (IPv4 only) or hostname of the media server to monitor
      example:
        name: Sample VoIP Provider
        address: 123.123.123.1
    updateOrganizationSamlRole:
      title: updateOrganizationSamlRole
      type: object
      properties:
        role:
          type: string
          description: The role of the SAML administrator
        orgAccess:
          type: string
          description: The privilege of the SAML administrator on the organization
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag2'
          description: The list of tags that the SAML administrator has privleges on
        networks:
          type: array
          items:
            $ref: '#/components/schemas/Network2'
          description: The list of networks that the SAML administrator has privileges on
      example: {}
    updateNetworkOneToOneNatRules:
      title: updateNetworkOneToOneNatRules
      required:
      - rules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule8'
          description: An array of 1:1 nat rules
      example:
        rules:
        - name: Service behind NAT
          lanIp: 192.168.128.22
          publicIp: 146.12.3.33
          uplink: internet1
          allowedInbound:
          - protocol: tcp
            destinationPorts:
            - 80
            allowedIps:
            - 10.82.112.0/24
            - 10.82.0.0/16
          - protocol: udp
            destinationPorts:
            - 8080
            allowedIps:
            - 10.81.110.5
            - 10.81.0.0/16
    updateNetworkPortForwardingRules:
      title: updateNetworkPortForwardingRules
      required:
      - rules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule9'
          description: An array of port forwarding params
      example:
        rules:
        - lanIp: 192.168.128.1
          allowedIps:
          - any
          name: Description of Port Forwarding Rule
          protocol: tcp
          publicPort: 8100-8101
          localPort: 442-443
          uplink: both
    updateNetworkSiteToSiteVpn:
      title: updateNetworkSiteToSiteVpn
      required:
      - mode
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/Mode2'
        hubs:
          type: array
          items:
            $ref: '#/components/schemas/Hub'
          description: The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
        subnets:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          description: The list of subnets and their VPN presence.
      example:
        mode: spoke
        hubs:
        - hubId: N_4901849
          useDefaultRoute: true
        - hubId: N_1892489
          useDefaultRoute: false
        subnets:
        - localSubnet: 192.168.1.0/24
          useVpn: true
        - localSubnet: 192.168.128.0/24
          useVpn: true
    Mode2:
      title: Mode2
      enum:
      - none
      - spoke
      - hub
      type: string
      description: The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
    createNetworkSmBypassActivationLockAttempt:
      title: createNetworkSmBypassActivationLockAttempt
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          description: The ids of the devices to attempt activation lock bypass.
      example:
        ids:
        - 1284392014819
        - 2983092129865
    RadiusLoadBalancingPolicy:
      title: RadiusLoadBalancingPolicy
      enum:
      - Strict priority order
      - Round robin
      type: string
      description: This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')
    ApTagsAndVlanId:
      title: ApTagsAndVlanId
      type: object
      properties:
        tags:
          type: string
          description: Comma-separated list of AP tags
        vlanId:
          type: integer
          description: Numerical identifier that is assigned to the VLAN
          format: int32
    Policy7:
      title: Policy7
      enum:
      - allow
      - deny
      type: string
      description: "'allow' or 'deny' traffic specified by this rule."
    updateNetworkSwitchLinkAggregation:
      title: updateNetworkSwitchLinkAggregation
      type: object
      properties:
        switchPorts:
          type: array
          items:
            $ref: '#/components/schemas/SwitchPort'
          description: Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
        switchProfilePorts:
          type: array
          items:
            $ref: '#/components/schemas/SwitchProfilePort'
          description: Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
      example:
        id: NDU2N18yXzM=
        switchPorts:
        - serial: Q234-ABCD-0001
          portId: 1
        - serial: Q234-ABCD-0002
          portId: 2
        - serial: Q234-ABCD-0003
          portId: 3
        - serial: Q234-ABCD-0004
          portId: 4
        - serial: Q234-ABCD-0005
          portId: 5
        - serial: Q234-ABCD-0006
          portId: 6
        - serial: Q234-ABCD-0007
          portId: 7
        - serial: Q234-ABCD-0008
          portId: 8
    Mode3:
      title: Mode3
      enum:
      - disabled
      - basic
      - detailed
      type: string
      description: >-
        The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
            'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
    updateNetworkVlan:
      title: updateNetworkVlan
      type: object
      properties:
        name:
          type: string
          description: The name of the VLAN
        subnet:
          type: string
          description: The subnet of the VLAN
        applianceIp:
          type: string
          description: The local IP of the appliance on the VLAN
        vpnNatSubnet:
          type: string
          description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
        dhcpHandling:
          $ref: '#/components/schemas/DhcpHandling'
        dhcpRelayServerIps:
          type: array
          items:
            type: string
          description: The IPs of the DHCP servers that DHCP requests should be relayed to
        dhcpLeaseTime:
          $ref: '#/components/schemas/DhcpLeaseTime'
        dhcpBootOptionsEnabled:
          type: boolean
          description: Use DHCP boot options specified in other properties
        dhcpBootNextServer:
          type: string
          description: DHCP boot option to direct boot clients to the server to load the boot file from
        dhcpBootFilename:
          type: string
          description: DHCP boot option for boot filename
        fixedIpAssignments:
          type: object
          description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
        reservedIpRanges:
          type: array
          items:
            $ref: '#/components/schemas/ReservedIpRange1'
          description: The DHCP reserved IP ranges on the VLAN
        dnsNameservers:
          type: string
          description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
        dhcpOptions:
          type: array
          items:
            $ref: '#/components/schemas/DhcpOption'
          description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
      example:
        name: My VLAN
        applianceIp: 1.2.3.4
        subnet: 192.168.1.0/24
        fixedIpAssignments:
          22:33:44:55:66:77:
            ip: 1.2.3.4
            name: Some client name
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
        dnsNameservers: google_dns
        dhcpHandling: Run a DHCP server
        dhcpLeaseTime: 1 day
        dhcpBootOptionsEnabled: false
        dhcpBootNextServer: 
        dhcpBootFilename: 
        dhcpOptions:
        - code: 5
          type: text
          value: five
    BandOperationMode:
      title: BandOperationMode
      enum:
      - dual
      - 2.4ghz
      - 5ghz
      type: string
      description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
    NewFeaturesSubtab:
      title: NewFeaturesSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
    createOrganizationNetwork:
      title: createOrganizationNetwork
      required:
      - name
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the new network
        type:
          type: string
          description: The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, or a space-separated list of those for a combined network.
        tags:
          type: string
          description: A space-separated list of tags to be applied to the network
        timeZone:
          type: string
          description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
        copyFromNetworkId:
          type: string
          description: The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.
        disableMyMerakiCom:
          type: boolean
          description: Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
        disableRemoteStatusPage:
          type: boolean
          description: Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false
      example:
        name: Long Island Office
        timeZone: America/Los_Angeles
        tags: ' tag1 tag2 '
        disableMyMerakiCom: false
        type: appliance switch camera
    combineOrganizationNetworks:
      title: combineOrganizationNetworks
      required:
      - name
      - networkIds
      type: object
      properties:
        name:
          type: string
          description: The name of the combined network
        networkIds:
          type: array
          items:
            type: string
          description: A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
        enrollmentString:
          type: string
          description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
      example:
        name: Long Island Office
        networkIds:
        - N_1234
        - N_5678
    updateNetworkSmTargetGroup:
      title: updateNetworkSmTargetGroup
      type: object
      properties:
        name:
          type: string
          description: The name of this target group
        scope:
          type: string
          description: The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
      example:
        name: My target group
        scope: none
        tags: '[]'
        type: devices
    updateNetworkSnmpSettings:
      title: updateNetworkSnmpSettings
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Access1'
        communityString:
          type: string
          description: The SNMP community string. Only relevant if 'access' is set to 'community'.
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: The list of SNMP users. Only relevant if 'access' is set to 'users'.
      example:
        access: users
        users:
        - username: AzureDiamond
          passphrase: hunter2
    updateNetworkSsidL3FirewallRules:
      title: updateNetworkSsidL3FirewallRules
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule10'
          description: An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)
        allowLanAccess:
          type: boolean
          description: Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: 443
          destCidr: 192.168.1.0/24
    createNetworkSwitchLinkAggregation:
      title: createNetworkSwitchLinkAggregation
      type: object
      properties:
        switchPorts:
          type: array
          items:
            $ref: '#/components/schemas/SwitchPort'
          description: Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
        switchProfilePorts:
          type: array
          items:
            $ref: '#/components/schemas/SwitchProfilePort'
          description: Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
      example:
        switchPorts:
        - serial: Q234-ABCD-0001
          portId: 1
        - serial: Q234-ABCD-0002
          portId: 2
        - serial: Q234-ABCD-0003
          portId: 3
        - serial: Q234-ABCD-0004
          portId: 4
        - serial: Q234-ABCD-0005
          portId: 5
        - serial: Q234-ABCD-0006
          portId: 6
        - serial: Q234-ABCD-0007
          portId: 7
        - serial: Q234-ABCD-0008
          portId: 8
    createNetworkSwitchPortSchedule:
      title: createNetworkSwitchPortSchedule
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name for your port schedule. Required
        portSchedule:
          $ref: '#/components/schemas/PortSchedule'
      example:
        name: Weekdays schedule
        portSchedule:
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
    updateNetworkSwitchSettingsDscpToCosMappings:
      title: updateNetworkSwitchSettingsDscpToCosMappings
      required:
      - mappings
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/Mapping'
          description: An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
      example:
        mappings:
        - dscp: 1
          cos: 1
          title: Video
    Mapping:
      title: Mapping
      required:
      - dscp
      - cos
      type: object
      properties:
        dscp:
          type: integer
          description: The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive.
          format: int32
        cos:
          type: integer
          description: The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive.
          format: int32
        title:
          type: string
          description: Label for the mapping (optional).
    Tag:
      title: Tag
      required:
      - tag
      - access
      type: object
      properties:
        tag:
          type: string
          description: The name of the tag
        access:
          type: string
          description: The privilege of the dashboard administrator on the tag
    NetworkAccess:
      title: Network
      required:
      - id
      - access
      type: object
      properties:
        id:
          type: string
          description: The network ID
        access:
          type: string
          description: The privilege of the dashboard administrator on the network
    CasesSubtab:
      title: CasesSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
            of 'default or inherit', 'hide' or 'show'.
    DataProtectionRequestsSubtab:
      title: DataProtectionRequestsSubtab
      enum:
      - default or inherit
      - hide
      - show
      type: string
      description: >-
        The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
            be audited. Can be one of 'default or inherit', 'hide' or 'show'.
    updateOrganizationBrandingPolicy:
      title: updateOrganizationBrandingPolicy
      type: object
      properties:
        name:
          type: string
          description: Name of the Dashboard branding policy.
        enabled:
          type: boolean
          description: Boolean indicating whether this policy is enabled.
        adminSettings:
          $ref: '#/components/schemas/AdminSettings'
        helpSettings:
          $ref: '#/components/schemas/HelpSettings1'
      example:
        brandingPolicyId: 456
        name: My Branding Policy
        enabled: true
        adminSettings:
          appliesTo: All admins of networks...
          values:
          - N_1234
          - L_5678
        helpSettings:
          helpTab: show
          getHelpSubtab: default or inherit
          communitySubtab: show
          casesSubtab: hide
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
          universalSearchKnowledgeBaseSearch: hide
          ciscoMerakiProductDocumentation: show
          supportContactInfo: show
          newFeaturesSubtab: show
          firewallInfoSubtab: hide
          apiDocsSubtab: default or inherit
          hardwareReplacementsSubtab: hide
          smForums: hide
    cloneOrganization:
      title: cloneOrganization
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the new organization
      example:
        name: My organization
  securitySchemes:
    Cisco-Meraki-API-Key:
      type: apiKey
      name: X-Cisco-Meraki-API-Key
      in: header
security:
- Cisco-Meraki-API-Key: []
tags:
- name: API usage
- name: Action batches
- name: Admins
- name: Alert settings
- name: Bluetooth clients
- name: Bluetooth settings
- name: Camera quality retention profiles
- name: Cameras
- name: Change log
- name: Clients
- name: Config templates
- name: Connectivity monitoring destinations
- name: Content filtering categories
- name: Content filtering rules
- name: Dashboard branding policies
- name: Devices
- name: Events
- name: Firewalled services
- name: Floorplans
- name: Group policies
- name: HTTP servers
- name: Intrusion settings
- name: Licenses
- name: Link aggregations
- name: MG DHCP settings
- name: MG LAN settings
- name: MG connectivity monitoring destinations
- name: MG port forwarding rules
- name: MG subnet pool settings
- name: MG uplink settings
- name: MR L3 firewall
- name: MV Sense
- name: MX 1:1 NAT rules
- name: MX 1:Many NAT rules
- name: MX L3 firewall
- name: MX L7 application categories
- name: MX L7 firewall
- name: MX VLAN ports
- name: MX VPN firewall
- name: MX cellular firewall
- name: MX inbound firewall
- name: MX port forwarding rules
- name: MX static routes
- name: MX warm spare settings
- name: Malware settings
- name: Management interface settings
- name: Meraki auth users
- name: Monitored media servers
- name: Named tag scope
- name: NetFlow settings
- name: Networks
- name: OpenAPI Spec
- name: Organizations
- name: PII
- name: Radio settings
- name: SAML roles
- name: SM
- name: SNMP settings
- name: SSIDs
- name: Security events
- name: Splash login attempts
- name: Splash settings
- name: Switch ACLs
- name: Switch port schedules
- name: Switch ports
- name: Switch profiles
- name: Switch settings
- name: Switch stacks
- name: Syslog servers
- name: Traffic analysis settings
- name: Traffic shaping
- name: Uplink settings
- name: VLANs
- name: Webhook logs
- name: Wireless health
- name: Wireless settings
